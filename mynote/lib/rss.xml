<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[我的笔记]]></title><description><![CDATA[Obsidian digital garden]]></description><link>https://wxkj.asia/mynote/</link><image><url>https://wxkj.asia/mynote/lib/media/favicon.png</url><title>我的笔记</title><link>https://wxkj.asia/mynote/</link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Sat, 18 May 2024 02:53:42 GMT</lastBuildDate><atom:link href="https://wxkj.asia/mynote/lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Sat, 18 May 2024 02:51:06 GMT</pubDate><copyright><![CDATA[Wilson]]></copyright><ttl>60</ttl><dc:creator>Wilson</dc:creator><item><title><![CDATA[scrollIntoView 等待滚动结束执行]]></title><description><![CDATA[ 
 <br>scrollIntoView({ behavior: "smooth"}) 是一个原生 JavaScript 方法，用于平滑地滚动页面至指定元素。然而，这个方法本身并不直接提供回调或者 Promise 来通知滚动何时结束。但是，你可以通过监听 scroll 事件并在合适的时机判断滚动是否接近完成来间接实现这一需求。这里有一个常用的方法来监听滚动结束：<br>function waitForScrollFinish(element, callback) {
    let totalScrollDistance = element.getBoundingClientRect().top;
    let scrollThreshold = 1; // 可根据实际情况调整阈值
    let lastScrollTop;
    let timer;

    const checkScrollEnd = () =&gt; {
        clearTimeout(timer);
        const currentScrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const distanceFromTop = element.getBoundingClientRect().top;

        // 如果滚动距离小于阈值，认为滚动结束
        if (Math.abs(totalScrollDistance - distanceFromTop) &lt;= scrollThreshold) {
            callback();
        } else {
            // 继续监听，使用防抖避免频繁触发
            timer = setTimeout(checkScrollEnd, 10);
        }
        lastScrollTop = currentScrollTop;
    };

    // 开始监听滚动事件
    window.addEventListener('scroll', checkScrollEnd, { passive: true });

    // 触发初始检查
    checkScrollEnd();

    // 为了内存管理，可以在滚动结束后移除监听器
    return function removeListener() {
        window.removeEventListener('scroll', checkScrollEnd);
    };
}

// 使用示例
const myElement = document.querySelector('#my-element');
myElement.scrollIntoView({ behavior: 'smooth' });

// 等待滚动结束
const removeListener = waitForScrollFinish(myElement, function() {
    console.log('滚动结束！');
    // 这里执行你希望在滚动结束后进行的操作
    // ...

    // 清理监听器（可选，取决于你的使用场景）
    removeListener();
});
复制<br>这段代码定义了一个 waitForScrollFinish 函数，它接受一个元素和一个回调函数作为参数。当滚动接近目标元素时（基于一个预设的阈值），会调用提供的回调函数。同时，为了避免在滚动过程中频繁调用检查逻辑，使用了防抖(debounce)技巧。请注意，这个方法依赖于滚动结束时元素位置的估计，可能在某些复杂滚动场景下不够精确，但适用于多数情况。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/scrollintoview-等待滚动结束执行.html</link><guid isPermaLink="false">开发笔记/前端/scrollIntoView 等待滚动结束执行.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 23:33:04 GMT</pubDate></item><item><title><![CDATA[js实现ctrl+鼠标左键点击示例]]></title><description><![CDATA[ 
 <br>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;Ctrl + Click 示例&lt;/title&gt;
&lt;style&gt;
    #myElement {
        width: 200px;
        height: 200px;
        background-color: lightblue;
        line-height: 200px;
        text-align: center;
        cursor: pointer;
    }
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div id="myElement"&gt;点击这里试试（需同时按下Ctrl键）&lt;/div&gt;

&lt;script&gt;
    let isCtrlDown = false; // 用于记录Ctrl键是否被按下

    // 监听keyup事件，当Ctrl键抬起时重置标志
    document.addEventListener('keyup', function(event) {
        if (event.key === 'Control'||event.key === 'Meta') {
            isCtrlDown = false;
        }
    });

    // 监听mousedown事件，检查是否同时按下Ctrl
    document.getElementById('myElement').addEventListener('mousedown', function(event) {
        if (event.button === 0 &amp;&amp; isCtrlDown) { // button === 0 检测是否为左键点击
            console.log("Ctrl + 左键点击");
            // 在这里执行你希望Ctrl+点击时触发的操作
            event.preventDefault(); // 可选：阻止默认点击行为
        }
    });

    // 监听keydown事件，记录Ctrl键被按下的状态
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Control'||event.key === 'Meta') {
            isCtrlDown = true;
        }
    });
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js实现ctrl+鼠标左键点击示例.html</link><guid isPermaLink="false">开发笔记/前端/js实现ctrl+鼠标左键点击示例.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 13:21:05 GMT</pubDate></item><item><title><![CDATA[js怎么先按ctime desc,再按title asc]]></title><description><![CDATA[ 
 <br>示例：<br>let data = [
    {title: "B", ctime: "2023-04-01"},
    {title: "C", ctime: "2023-04-02"},
    {title: "A", ctime: "2023-04-01"},
    // ...其他对象
];

// 第一次排序：按ctime降序
data.sort((a, b) =&gt; new Date(b.ctime).getTime() - new Date(a.ctime));

// 第二次排序：在ctime相同的情况下，按title升序
data.sort((a, b) =&gt; {
    if (new Date(a.ctime).getTime() === new Date(b.ctime).getTime()) {
        return a.title.localeCompare(b.title);
    }
    return 0; // 如果ctime不同，则维持之前排序结果
});

console.log(data);
复制<br>这段代码首先使用 Date 对象将 ctime 字符串转换为时间戳进行比较，实现按 ctime 的降序排列。随后，在这个基础上，利用 localeCompare() 方法对那些 ctime 相同的对象按 title 进行升序排列。注意，由于第一次排序已经确定了主要排序依据（ctime 降序），第二次排序只需在 ctime 相同时进行，所以在第二次排序的比较函数中，当 ctime 不相同时返回 0 以维持之前的排序结果。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js怎么先按ctime-desc,再按title-asc.html</link><guid isPermaLink="false">开发笔记/前端/js怎么先按ctime desc,再按title asc.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 15 May 2024 01:29:12 GMT</pubDate></item><item><title><![CDATA[css选择前n个元素]]></title><description><![CDATA[ 
 <br>li:nth-child(-n + 8) 选择前8个 &lt;li&gt; 元素。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/css选择前n个元素.html</link><guid isPermaLink="false">开发笔记/前端/css选择前n个元素.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 14 May 2024 15:32:23 GMT</pubDate></item><item><title><![CDATA[Mac调试ios的safari浏览器打开的页面]]></title><description><![CDATA[ 
 打开iphone手机的开发者模式，打开Mac上Safari的开发者模式，用数据线将iphone和mac进行连接，按照调试pc端页面的思路来调试ios的页面。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/mac调试ios的safari浏览器打开的页面.html</link><guid isPermaLink="false">开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/image.png-2.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/image.png-2.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[通过脚本修改input值，手动触发input事件]]></title><description><![CDATA[ 
 <br>如果通过脚本修改表单元素的值时 input 事件并不会自动触发，这是因为直接修改元素的值（如通过 JavaScript 的 element.value = 'new value'）并不会自然地引发 input 事件。为了确保在这种情况下也能触发 input 事件，你需要手动触发它。可以通过以下方式手动触发 input 事件：<br>element.value = 'new value';
// 手动触发 input 事件
const event = new Event('input', { bubbles: true });
element.dispatchEvent(event);
复制<br>这段代码首先修改了表单元素（element）的值，然后创建了一个新的 Event 对象，并将其类型设置为 'input'，通过 dispatchEvent 方法手动在该元素上触发这个事件。这样，即使值是通过脚本修改的，所有监听该 input 事件的处理函数也会被执行，提供了一致的响应体验。<br>参数 { bubbles: true } 是一个选项对象，用来定义事件的一些特性。具体来说：<br>
<br>bubbles: true 表示这个事件会在 DOM 树上向上冒泡。事件冒泡是指事件从最深的节点（事件的目标节点）开始，然后逐级向上层节点传播事件。这是 DOM 事件流的一种机制，允许事件不仅在目标元素上触发，还能在它的所有祖先元素上触发，直到文档根节点。这对于模拟用户交互非常有用，因为在现实场景中，用户操作（如点击）通常会引起一系列的事件响应。
<br>除了 bubbles，Event 构造函数还可以接受其他几个可选参数来定制事件的行为，主要包括：<br>
<br>
cancelable: 布尔值，表示事件是否可以被取消。默认为 false。如果设为 true，事件可以被 Event.preventDefault() 方法取消，阻止其默认行为。

<br>
composed: 布尔值，用于 Shadow DOM 中，决定事件是否应该穿过 Shadow DOM 的边界向外传播。默认为 false。

<br>例如，如果你想创建一个可取消且能冒泡的自定义事件，可以这样写：<br>const customEvent = new Event('myCustomEvent', { bubbles: true, cancelable: true });
复制<br>不过，不同的事件类型可能对这些选项的处理方式有所不同，特别是对于一些特定的 UI 事件，它们可能有自己额外的特性和选项。在使用时，最好查阅相关事件类型的文档，了解其默认行为和可用选项。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/通过脚本修改input值，手动触发input事件.html</link><guid isPermaLink="false">开发笔记/前端/通过脚本修改input值，手动触发input事件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 01 May 2024 16:55:59 GMT</pubDate></item><item><title><![CDATA[@font-face规则和Font Loading API]]></title><description><![CDATA[ 
 <br>@font-face 规则和 Font Loading API 都是 Web 开发中与字体加载相关的技术，它们在提升网页字体使用的灵活性和性能方面扮演着重要角色。<br><br>@font-face 是 CSS 的一个特性，允许网页开发者指定并加载自定义字体，使得即使访问者的计算机上没有预装这些字体，也能在网页上正确显示。这意味着设计师可以不受限于用户系统自带的字体，极大地丰富了网页设计的排版选择。@font-face 的基本语法如下：<br>@font-face {
  font-family: 'MyCustomFont';
  src: url('myfont.woff2') format('woff2'),
       url('myfont.woff') format('woff');
  font-weight: normal;
  font-style: normal;
}
复制<br>在这个例子中，font-family 定义了自定义字体的名称，src 属性指定了字体文件的 URL 及其格式，而 font-weight 和 font-style 定义了字体的样式属性。<br><br>Font Loading API 是更现代的 Web API，它为 Web 字体的加载提供了更细粒度的控制。这一 API 允许开发者异步加载字体，并且可以监听字体加载的状态（加载中、加载成功或加载失败），从而实现更为精细的用户体验优化，比如在字体加载完成前先用系统字体渲染文本，一旦字体加载完毕立即切换到自定义字体，避免了因等待字体加载而导致的页面空白或闪烁现象。<br>使用 Font Loading API 的一个基本示例如下：<br>let fontFaceSet = document.fonts;

let myFont = new FontFace('MyWebFont', 'url(myfont.woff2)');
fontFaceSet.load(myFont).then(function(loadedFace) {
  // 字体加载成功，可以在这里应用字体
  document.documentElement.style.fontFamily = 'MyWebFont, sans-serif';
}).catch(function(error) {
  // 处理字体加载失败的情况
  console.error('Font loading failed:', error);
});
复制<br>通过结合 @font-face 规则预先声明字体，以及利用 Font Loading API 来异步管理加载过程，开发者可以实现更加高效和用户友好的字体加载体验。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/@font-face规则和font-loading-api.html</link><guid isPermaLink="false">开发笔记/前端/@font-face规则和Font Loading API.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 01 May 2024 15:05:31 GMT</pubDate></item><item><title><![CDATA[js，css，font，png等静态资源如何当加载失败后使用备用地址]]></title><description><![CDATA[ 
 <br>在 Web 开发中，为了确保 JavaScript、CSS、字体(fonts)、图片(png 等)等静态资源在主地址加载失败时能从备用地址下载，可以使用 JavaScript 的动态加载技术结合错误监听。这里有一个基本的实现思路：<br><br>可以使用动态创建 &lt;link&gt; 和 &lt;script&gt; 标签，并利用 onerror 事件监听加载失败，从而切换到备用地址。<br><br>对于 CSS：<br>function loadStyleSheetWithFallback(url, fallbackUrl) {
    var link = document.createElement('link');
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = url;

    link.onerror = function() {
        console.log('Failed to load CSS from primary source, trying fallback.');
        link.href = fallbackUrl;
    };

    document.head.appendChild(link);
}

// 使用示例
loadStyleSheetWithFallback('/path/to/main.css', '/path/to/fallback.css');
复制<br>对于 JavaScript：<br>function loadScriptWithFallback(url, fallbackUrl, callback) {
    var script = document.createElement('script');
    script.src = url;
    script.onload = callback;
    script.onerror = function() {
        console.log('Failed to load JS from primary source, trying fallback.');
        script.src = fallbackUrl;
        script.onload = callback; // 重新绑定加载成功回调
    };

    document.body.appendChild(script);
}

// 使用示例
loadScriptWithFallback('/path/to/main.js', '/path/to/fallback.js', function() {
    console.log('Script loaded successfully');
});
复制<br><br>图片可以通过 &lt;img&gt; 标签的 onerror 事件来监听加载失败，并更换 src 属性为备用地址。<br>&lt;img src="/path/to/image.png" onerror="this.onerror=null; this.src='/path/to/fallback.png';"&gt;
复制<br>或者使用 JavaScript 动态创建 &lt;img&gt; 标签：<br>function loadImageWithFallback(src, fallbackSrc) {
    var img = new Image();
    img.src = src;
    img.onerror = function() {
        console.log('Failed to load image, trying fallback.');
        img.onerror = null; // 防止无限循环
        img.src = fallbackSrc;
    };
    // 添加到DOM中
    document.getElementById('someContainer').appendChild(img);
}

// 使用示例
loadImageWithFallback('/path/to/image.png', '/path/to/fallback.png');
复制<br><br>字体资源的加载通常也是通过 CSS，因此可以采用类似 CSS 样式表的处理方式，或者通过监听 Web 字体加载失败的事件来实现，但这通常较为复杂，因为需要处理 <a class="internal-link" data-href="@font-face规则和Font Loading API.md" href="https://wxkj.asia/mynote/开发笔记/前端/@font-face规则和font-loading-api.html" target="_self" rel="noopener">@font-face规则和Font Loading API</a>。<br>请注意，这些方法在实际应用中需要根据具体情况进行调整，比如确保在切换 URL 时不会引发循环加载错误等问题。此外，现代 Web 开发中，使用 Service Workers 和 Cache 策略也可以提高资源加载的可靠性和容错能力。<br><br>对于资源加载失败并尝试从备用地址加载时，会引发循环加载错误等问题，即如果备用地址也加载失败，程序错误地反复尝试从主地址和备用地址加载资源，形成了一个无限循环。<br>为了避免一种情况，通常需要在代码中加入逻辑来确保：<br>
<br>限制重试次数：为资源加载设置最大尝试次数，超过这个次数后不再继续尝试，而是直接报告错误或使用默认资源。
<br>明确标记加载状态：在尝试从备用地址加载资源时，如果再次失败，需要确保错误处理函数只被执行一次，可以通过设置标志位或者移除onerror事件监听器来实现。
<br>确保清理和恢复：在切换src或href属性尝试备用地址前，清除之前的加载事件监听器，避免因之前的错误处理逻辑再次触发而陷入循环。
<br>例如，通过 onerror 事件处理函数内部的逻辑来避免循环：<br>script.onerror = function() {
    console.log('Failed to load JS from primary source, trying fallback.');
    script.onerror = null; // 移除错误监听器，防止循环
    script.src = fallbackUrl;
    script.onload = callback; // 重新绑定加载成功回调
};
复制<br>通过将onerror设置为null，我们确保了当从备用地址加载失败时，不会再次触发错误处理逻辑，从而防止了潜在的无限循环问题。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.html</link><guid isPermaLink="false">开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 01 May 2024 15:07:15 GMT</pubDate></item><item><title><![CDATA[最全的 rgba 与 16 进制颜色空间互相转换方法]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://www.codetd.com/article/13460967" rel="noopener" class="external-link" href="https://www.codetd.com/article/13460967" target="_blank">www.codetd.com</a>
<br>
日常开发中常用到颜色的相互转换，这里提供了丰富的解析、转换颜色的方法。 - 解析 16 进制颜色字符串 - 解析 rgba 颜色字符串 - 16 进制颜色字符串 - 16 进制颜色字符串与 rgba 颜色字符串相互转
<br><br><a data-tooltip-position="top" aria-label="https://www.codetd.com/cat/17699/1" rel="noopener" class="external-link" href="https://www.codetd.com/cat/17699/1" target="_blank">编程语言</a> 2021-11-29 17:20:00 阅读次数: 0<br>
解析 rgba 颜色和 16 进制颜色，rgba 颜色和 16 进制颜色相互转换。
<br><br>日常开发中常用到颜色的相互转换，这里提供了丰富的解析、转换颜色的方法。<br>首先颜色有以下两种主要的常用表现形式<br>
<br>16 进制模式：用三到四位 16 进制数表示颜色

<br>如#ff0000 #fff #0000007f
<br>有 3 位，6 位，8 位三种
<br>3 位表示缩写，6 位是常用的表达方式，8 位最后两位表示透明度


<br>rgba 模式：用0-255分别表示 rgb 三个通道的数值

<br>如rgb(255,255,255) rgba(0,0,0,0.5)
<br>透明度为 0-1 的数值


<br><br>
<br>解析 16 进制颜色字符串
<br>解析 rgba 颜色字符串
<br>生成 16 进制颜色字符串
<br>生成 rgba 颜色字符串
<br>16 进制颜色字符串 与 rgba 颜色字符串 相互转换
<br><br>hexToRgba('#a53eda') 
rgbaToHex('rgba(165,62,218,1)') 

parseColorString('#a53eda') 
parseColorString('rgba(165,62,218,0.5)') 

toHexString({r: 165, g: 62, b: 218, a: 0.5}) 
toRgbaString({r: 165, g: 62, b: 218, a: 0.5}) 
复制代码

复制<br><br>export interface IColorObj {
  r: number;
  g: number;
  b: number;
  a?: number;
}


export const toHex = (n: number) =&gt; `${n &gt; 15 ? '' : 0}${n.toString(16)}`;


 export const toHexString = (colorObj: IColorObj) =&gt; {
  const { r, g, b, a = 1 } = colorObj;
  return `#${toHex(r)}${toHex(g)}${toHex(b)}${a === 1 ? '' : toHex(Math.floor(a * 255))}`;
};


 export const toRgbString = (colorObj: IColorObj) =&gt; {
  const { r, g, b } = colorObj;
  return `rgb(${r},${g},${b})`;
};


 export const toRgbaString = (colorObj: IColorObj, n = 10000) =&gt; {
  const { r, g, b, a = 1 } = colorObj;
  return `rgba(${r},${g},${b},${Math.floor(a * n ) / n})`;
};


export const parseHexColor = (color: string) =&gt; {
  let hex = color.slice(1);
  let a = 1;
  if (hex.length === 3) {
    hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;
  }
  if (hex.length === 8) {
    a = parseInt(hex.slice(6), 16) / 255;
    hex = hex.slice(0, 6);
  }
  const bigint = parseInt(hex, 16);
  return {
      r: (bigint &gt;&gt; 16) &amp; 255,
      g: (bigint &gt;&gt; 8) &amp; 255,
      b: bigint &amp; 255,
      a,
  } as IColorObj;
};


export const parseRgbaColor = (color: string) =&gt; {
  const arr = color.match(/(\d(\.\d+)?)+/g) || [];
  const res = arr.map((s: string) =&gt; parseInt(s, 10));
  return {
    r: res[0],
    g: res[1],
    b: res[2],
    a: parseFloat(arr[3]),
  } as IColorObj;
};


export const parseColorString = (color: string) =&gt; {
  if (color.startsWith('#')) {
    return parseHexColor(color);
  } else if (color.startsWith('rgb')) {
    return parseRgbaColor(color);
  } else if (color === 'transparent') {
    return parseHexColor('#00000000');
  }
  throw new Error(`color string error: ${color}`);
};


export const getColorInfo = (color: string) =&gt; {
  const colorObj = parseColorString(color);
  const hex = toHexString(colorObj);
  const rgba = toRgbaString(colorObj);
  const rgb = toRgbString(colorObj);
  return {
    hex,
    rgba,
    rgb,
    rgbaObj: colorObj,
  };
};


export const hexToRgba = (hex: string) =&gt; {
  const colorObj = parseColorString(hex);
  return toRgbaString(colorObj);
};


 export const rgbaToHex = (rgba: string) =&gt; {
  const colorObj = parseColorString(rgba);
  return toHexString(colorObj);
};

复制代码

复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/最全的-rgba-与-16-进制颜色空间互相转换方法.html</link><guid isPermaLink="false">开发笔记/前端/最全的 rgba 与 16 进制颜色空间互相转换方法.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 01 May 2024 01:41:51 GMT</pubDate></item><item><title><![CDATA[防止window.onload被覆盖的技巧]]></title><description><![CDATA[ 
 <br>使用&nbsp;window.onload&nbsp;时，如果多次赋值，后面的赋值会覆盖前面的，导致只有一个函数会在页面加载完成后执行。这是因为&nbsp;onload&nbsp;是一个属性，而不是一个事件监听器集合，所以多次赋值会导致之前的函数被替换。<br>解决办法：<br>为了避免使用 window.onload 时覆盖之前的加载事件处理函数，可以通过检查 window.onload 是否已存在，并在其基础上追加新的处理逻辑，像这样：<br>window.onload = (function(originalOnLoad) {
    return function() {
        if (typeof originalOnLoad === 'function') {
            originalOnLoad(); // 执行原有的 onload 函数
        }
        // 这里写你的代码
        console.log("新添加的加载完成逻辑");
    };
})(window.onload);
复制<br>这段代码使用了一个立即执行的匿名函数，它接收当前的 window.onload 函数作为参数（如果有的话），然后返回一个新的函数，这个新函数在执行时会先调用原始的 onload 函数（如果存在），随后执行你新添加的逻辑。这样就实现了加载事件处理函数的叠加，而不是覆盖。<br>这种方法在需要向页面添加第三方脚本或库，同时又不希望影响原有页面的 onload 处理逻辑时非常有用。不过，更现代和推荐的做法是使用 window.addEventListener("load", ...)，它天然支持多个事件处理函数，无需担心覆盖问题。<br>但，怎么保证是你覆盖别人，而不是别人覆盖你呢？<br>要确保你的代码段是最后一个执行的 window.onload 处理函数，即使其他脚本之后尝试再次修改它，你可以使用一个立即执行函数表达式（IIFE）结合一个闭包来"劫持"或"包裹"现有的 onload 处理函数，并且在内部维持一个对原始函数的引用，这样无论多少次被覆盖，你的逻辑都能确保在最后执行。下面是一个改进的版本，它使用了一个循环检查机制来持续监控并确保自己的加载逻辑处于链的末端：<br>(function manageOnLoad() {
    var originalOnLoad = window.onload;
    
    window.onload = function() {
        var myLoadLogic = function() {
            console.log("新添加的加载完成逻辑，确保最后执行");
        };

        if (typeof originalOnLoad === 'function') {
            originalOnLoad(); // 执行原有的 onload 函数
        }

        // 重新应用这个机制，检查是否有新的 onload 被设置，如果有，则再次确保我们的逻辑在最后
        manageOnLoad();

        // 确保我的逻辑在最后执行
        myLoadLogic();
    };
})();
复制<br>这段代码的工作原理是：<br>
<br>首先保存当前的 window.onload 处理函数到 originalOnLoad 变量中。
<br>重新定义 window.onload，在这个新的处理函数内部，首先检查并调用之前保存的原始 onload 函数（如果存在）。
<br>再次调用 manageOnLoad 函数，这是一个递归调用的技巧，用于不断检查和调整，确保任何后续对 window.onload 的赋值都能被捕捉并处理，保持你的逻辑在链条的最后。
<br>最后执行你想要添加的加载完成逻辑。
<br>通过这种方式，你可以最大限度地确保自己的逻辑始终在所有其他 onload 处理函数之后执行，不论其他脚本如何尝试覆盖 window.onload。不过，需要注意的是，这样的技术可能会引入性能问题，尤其是如果页面上有大量脚本都试图控制 onload 事件的话。因此，最佳实践是尽量减少直接修改全局事件处理程序的做法，转而采用更为现代和模块化的 JavaScript 编程模式，比如使用事件监听器或者库如 jQuery 的 .ready() 方法，以及 ES6 的 Promise 和 async/await 来管理异步加载逻辑。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/防止window.onload被覆盖的技巧.html</link><guid isPermaLink="false">开发笔记/前端/防止window.onload被覆盖的技巧.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 02 May 2024 05:42:51 GMT</pubDate></item><item><title><![CDATA[js显示和隐藏动画及鼠标穿透实现]]></title><description><![CDATA[ 
 <br>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="UTF-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
  &lt;style&gt;
    .button {
      display: inline-block;
      padding: 10px 20px;
      background-color: #3498db;
      color: #fff;
      text-align: center;
      text-decoration: none;
      font-size: 16px;
    }
    #demo{
        width: 200px;
        height: 300px;
        background: #ccc;
        transition: opacity 0.5s ease;
        opacity: 1;
        position: absolute;
        top: 50px;
        left: 8px;
        /*pointer-events: none;*/
    }
  &lt;/style&gt;
  &lt;title&gt;CSS Transition Example&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;a href="javascript:toggle()" class="button"&gt;toggle&lt;/a&gt;
  &lt;div id="demo"&gt;
       &lt;div&gt;aaaaaa&lt;/div&gt;
       &lt;div&gt;aaaaaa&lt;/div&gt;
       &lt;div&gt;aaaaaa&lt;/div&gt;
  &lt;/div&gt;
  &lt;div&gt;
       &lt;div&gt;bbbbbb&lt;/div&gt;
       &lt;div&gt;bbbbbb&lt;/div&gt;
       &lt;div&gt;bbbbbb&lt;/div&gt;
  &lt;/div&gt;
  &lt;script&gt;
      // 推荐
      //使用 pointer-events: none; 允许鼠标穿透
      function toggle2() {
           const demo = document.querySelector("#demo");
           const style = getComputedStyle(demo, null);
           const opacity = +style.opacity === 1 ? 0 : 1;
           demo.style.opacity = opacity;
           if(opacity === 1) {
               // 阻止鼠标穿透
               demo.style.pointerEvents = 'auto';
           } else {
               // 允许鼠标穿透
               demo.style.pointerEvents = 'none';
           }
      }
      
      // 老旧浏览器模拟效果
      let hasListend = false
      function toggle() {
          const demo = document.querySelector("#demo");
          const style = getComputedStyle(demo, null);
          if(style.display === 'none') demo.style.display = 'block';
          const opacity = +style.opacity === 1 ? 0 : 1;
          demo.style.opacity = opacity;
          
          // 这里也可以使用setTimeout()简单实现
          if(!hasListend) {
              hasListend = true;
              document.querySelector("#demo").addEventListener('transitionend', function(event) {
                  const opacity = +getComputedStyle(event.target, null).opacity;
                  if(opacity === 1) {
                      event.target.style.display = 'block';
                  } else {
                      event.target.style.display = 'none';
                  }
              });
          }
      }
      
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.html</link><guid isPermaLink="false">开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 30 Apr 2024 00:05:12 GMT</pubDate></item><item><title><![CDATA[js判断一个元素是否已监听某个事件]]></title><description><![CDATA[ 
 <br>实现方式：<br>由于 JavaScript 本身并不直接暴露已添加的事件监听器列表，你可以维护自己的记录。例如，创建一个函数来添加事件监听器，并在这个过程中保存相关信息。<br>var eventListeners = {}; // 用于存储事件监听器

function addListener(element, eventName, listener) {
    if (!(element in eventListeners)) {
        eventListeners[element] = {};
    }
    if (!(eventName in eventListeners[element])) {
        eventListeners[element][eventName] = [];
    }
    eventListeners[element][eventName].push(listener);

    element.addEventListener(eventName, listener);
}

// 判断是否已添加特定事件监听器的函数
function hasListener(element, eventName, listener) {
    if (eventListeners[element] &amp;&amp; eventListeners[element][eventName]) {
        return eventListeners[element][eventName].includes(listener);
    }
    return false;
}

// 使用示例
addListener(document.getElementById('someElement'), 'click', function() { /*...*/ });
console.log(hasListener(document.getElementById('someElement'), 'click', yourListenerFunction)); // 根据实际监听函数检查
复制<br>如果你使用了 jQuery，可以通过其提供的方法来检查事件：<br>if ($._data($('#someElement')[0], 'events') &amp;&amp; $._data($('#someElement')[0], 'events').click) {
    console.log("Click event is bound to the element.");
}
复制<br>请注意，$._data 是对内部数据的访问，虽然可以用来检查事件，但它是非公开 API，可能在未来的 jQuery 版本中改变或移除。<br>如果事件是第三方注册的事件，可以尝试以下方法：<br>从实际应用的角度出发，虽然不能直接通过 JavaScript 代码检测一个元素是否绑定了特定的事件监听器（特别是第三方注册的），但确实可以通过观察元素的行为和响应来间接判断。这种做法更多依赖于对页面交互逻辑的理解和测试。<br>以下是一些思路：<br>
<br>
行为观察: 观察元素在特定用户交互（如点击、鼠标悬停等）下的反应。如果元素在预期的交互下产生了你认为由事件监听器驱动的变化（如样式变化、内容更新、弹窗提示等），则可以推测该事件监听器存在。

<br>
模拟事件触发: 使用 JavaScript 手动触发该类型的事件（如使用 dispatchEvent），然后观察元素或页面状态是否有所变化。这可以在一定程度上帮助确认某些事件监听器的存在，但并不能保证全面，因为事件处理逻辑可能包含条件判断，导致某些条件下无明显反馈。

<br>
审查元素状态: 在某些情况下，事件监听器可能会修改元素的某些属性或添加/移除类名。通过 JavaScript 检查这些状态的变化也可以作为是否存在特定事件监听器的一个线索。

<br>
性能分析工具: 使用浏览器的开发者工具中的 Performance 或 Timeline 工具，在执行特定交互后记录和分析，有时可以从调用堆栈中发现与事件监听器相关的函数调用。

<br>需要注意的是，这些方法都属于间接判断，且可能受到页面复杂度、事件处理逻辑等多种因素的影响，不一定总是准确或有效。它们更多是辅助手段，用于帮助理解和调试页面的行为。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js判断一个元素是否已监听某个事件.html</link><guid isPermaLink="false">开发笔记/前端/js判断一个元素是否已监听某个事件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 29 Apr 2024 23:56:58 GMT</pubDate></item><item><title><![CDATA[js给元素同时赋值多个样式属性]]></title><description><![CDATA[ 
 <br>const demo = document.querySelector("#demo");
Object.assign(demo.style, {
	opacity: '1',
	pointerEvents: 'auto'
});
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js给元素同时赋值多个样式属性.html</link><guid isPermaLink="false">开发笔记/前端/js给元素同时赋值多个样式属性.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 29 Apr 2024 23:46:37 GMT</pubDate></item><item><title><![CDATA[用setTimeout代替eval执行js字符串]]></title><description><![CDATA[ 
 <br>const jsString = `console.log(1)`;
setTimeout(jsString);

setTimeout('debugger', 5000);
复制<br>但与 eval 不同的是，setTimeout 是异步执行。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/用settimeout代替eval执行js字符串.html</link><guid isPermaLink="false">开发笔记/前端/用setTimeout代替eval执行js字符串.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 29 Apr 2024 22:36:32 GMT</pubDate></item><item><title><![CDATA[transitionend事件判断是opacity是1还是0]]></title><description><![CDATA[ 
 <br>在使用 transitionend 事件时，你可以通过比较元素的当前 opacity 值来判断它是变为完全透明（0）还是完全不透明（1）。下面是一个示例代码段，展示了如何监听 transitionend 事件并判断 opacity 的最终状态：<br>element.addEventListener('transitionend', function(event) {
    // 确保事件目标是我们关心的元素并且是 opacity 过渡结束
    if (event.target === element &amp;&amp; event.propertyName === 'opacity') {
        // 判断 opacity 的最终值
        if (parseFloat(element.style.opacity) === 1) {
            console.log('Opacity transition ended at 1 (fully opaque)');
            // 在这里执行 opacity 达到 1 时的逻辑
        } else if (parseFloat(element.style.opacity) === 0) {
            console.log('Opacity transition ended at 0 (fully transparent)');
            // 在这里执行 opacity 达到 0 时的逻辑
        }
    }
});
复制<br>这段代码中，event.propertyName 用来检查哪个 CSS 属性的过渡刚刚结束，确保我们只在 opacity 过渡结束后执行逻辑。然后，通过 parseFloat(element.style.opacity) 获取元素的当前不透明度，并与 1 或 0 比较，从而判断过渡的最终状态。<br>请注意，如果你是通过 CSS 类来控制 opacity 的变化，而非直接修改 element.style.opacity，你可能需要在 CSS 中定义这些类，并且在 JavaScript 中检查元素的计算样式（getComputedStyle）来获取实际的 opacity 值。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/transitionend事件判断是opacity是1还是0.html</link><guid isPermaLink="false">开发笔记/前端/transitionend事件判断是opacity是1还是0.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 29 Apr 2024 23:58:32 GMT</pubDate></item><item><title><![CDATA[js 怎么获取滚动条自身的宽度]]></title><description><![CDATA[ 
 <br>获取滚动条自身宽度的一个常见方法是通过创建一个具有滚动条的隐藏元素，并测量其尺寸差异。以下是一个简单的示例代码，演示了如何在 JavaScript 中实现这一操作：<br>function getScrollbarWidth() {
    // 创建一个具有滚动条的隐藏div
    var div = document.createElement('div');
    div.style.overflow = 'scroll'; // 强制出现滚动条
    div.style.width = '100px';
    div.style.height = '100px';
    div.style.position = 'absolute';
    div.style.top = '-9999px'; // 确保不影响页面布局
    document.body.appendChild(div); // 添加到DOM中

    // 计算滚动条的宽度：div的总宽度减去其内部宽度（可视宽度）
    var scrollbarWidth = div.offsetWidth - div.clientWidth;

    // 清理：从DOM中移除这个临时div
    document.body.removeChild(div);

    return scrollbarWidth;
}

// 调用函数并打印滚动条宽度
console.log(getScrollbarWidth());
复制<br>这段代码首先创建了一个隐藏的 &lt;div&gt;，设置了使其出现滚动条的样式，并将其添加到页面中一个不可见的位置。然后，通过比较该 &lt;div&gt; 的 offsetWidth（包括滚动条的总宽度）和 clientWidth（不包括滚动条的内部宽度），我们可以计算出滚动条的宽度。最后，这个临时的 &lt;div&gt; 会被从 DOM 中移除。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js-怎么获取滚动条自身的宽度.html</link><guid isPermaLink="false">开发笔记/前端/js 怎么获取滚动条自身的宽度.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 29 Apr 2024 12:08:22 GMT</pubDate></item><item><title><![CDATA[JS图片另存为]]></title><description><![CDATA[ 
 <br><br>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"&gt;
&lt;html&gt;
 &lt;head&gt;
  &lt;title&gt; New Document &lt;/title&gt;
  &lt;meta name="Generator" content="EditPlus"&gt;
  &lt;meta name="Author" content=""&gt;
  &lt;meta name="Keywords" content=""&gt;
  &lt;meta name="Description" content=""&gt;
  &lt;script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js" type="text/javascript"&gt;&lt;/script&gt;
  &lt;script language="JavaScript"&gt;
  &lt;!--
    function downLoadImage(imagePathURL){
        
        //如果中间IFRAME不存在，则添加
        if(!document.getElementById("_SAVEASIMAGE_TEMP_FRAME"))
            jQuery('&lt;iframe style="display:none;" id="_SAVEASIMAGE_TEMP_FRAME" name="_SAVEASIMAGE_TEMP_FRAME" οnlοad="_doSaveAsImage();"
width="0" height="0" src="about:blank"&gt;&lt;/iframe&gt;').appendTo("body");        
        
        if(document.all._SAVEASIMAGE_TEMP_FRAME.src!=imagePathURL){
            //图片地址发生变化，加载图片
            document.all._SAVEASIMAGE_TEMP_FRAME.src = imagePathURL;
        }else{
            //图片地址没有变化，直接另存为
            _doSaveAsImage();
        }
    }
    function _doSaveAsImage(){        
        if(document.all._SAVEASIMAGE_TEMP_FRAME.src!="about:blank")
            document.frames("_SAVEASIMAGE_TEMP_FRAME").document.execCommand("SaveAs");        
    }
 
  //--&gt;
  &lt;/script&gt;
 &lt;/head&gt;
 
 &lt;body&gt;
  &lt;input type="button" value="download image" οnclick="downLoadImage('http://www.blogjava.net/images/blogjava_net/weiwei/46570/r_beyond1991.jpg');"&gt;  
 &lt;/body&gt;
&lt;/html&gt;
复制<br><br>downloadCanvasIamge(selector, name) {
	var image = new Image()
	// 解决跨域 Canvas 污染问题
	image.setAttribute('crossOrigin', 'anonymous')
	image.onload = function () {
		var canvas = document.createElement('canvas')
		canvas.width = image.width
		canvas.height = image.height

		var context = canvas.getContext('2d')
		context.drawImage(image, 0, 0, image.width, image.height)
		var url = canvas.toDataURL('image/png')

		// 生成一个a元素
		var a = document.createElement('a')
		// 创建一个单击事件
		var event = new MouseEvent('click')

		// 将a的download属性设置为我们想要下载的图片名称，若name不存在则使用‘下载图片名称’作为默认名称
		a.download = name || '下载图片名称'
		// 将生成的URL设置为a.href属性
		a.href = url
		// 触发a的单击事件
		a.dispatchEvent(event)
	}

	image.src = document.querySelector(selector).src
}
复制<br><br>
selector：要保存的元素的名字，img的那个标签，不用写到src<br>
name：要下载的图片的名字（可填可不填），不填默认为&nbsp;下载图片名称&nbsp;上面代码有判断~
<br><br>saveImg (Url) {
	var blob=new Blob([''], {type:'application/octet-stream'});
	var url = URL.createObjectURL(blob);
	var a = document.createElement('a');
	a.href = Url;
	a.download = Url.replace(/(.*\/)*([^.]+.*)/ig,"$2").split("?")[0];
	var e = document.createEvent('MouseEvents');
	e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
	a.dispatchEvent(e);
	URL.revokeObjectURL(url);
}
复制<br><br>
Url：要保存的路径（图片的名字），也就是 img 标签属性里的 src的值<br>
譬如： 在vue中的data里
<br>data () {
    return {
        saveImgpath: require('../assets/moren.png')
    }
}
//然后这个 saveImgpath 就是上面方法saveImg（Url）的 Url的参~
复制<br>注：这是vue的项目中用到的，其他也适用，稍做修改就好了~~~]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js图片另存为.html</link><guid isPermaLink="false">开发笔记/前端/JS图片另存为.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sun, 28 Apr 2024 22:12:43 GMT</pubDate></item><item><title><![CDATA[table表格设置border-radius不生效]]></title><description><![CDATA[ 
 <br>经过研究发现是 border-collapse: collapse 和 border-radius 时不兼容导致的。<br>解决办法是：给表格加上边框，然后给 th、td 设置右边框，最后去掉 th、td 最右侧和最下面的边框，这样就模拟出想要的效果。<br>效果：<br><img src="https://wxkj.asia/mynote/lib/media/table表格设置border-radius不生效-20240429053555032.webp"><br>代码如下：<br>&lt;style&gt;
    table {
        width: 500px;
        height: 200px;
        border: 1px solid #ccc;
        border-radius: 10px;
        border-spacing: 0;
    }
    th, td {
        text-align: center;
        border-right: 1px solid #ccc;
        border-bottom: 1px solid #ccc;
    }
    th:last-child, td:last-child {
        border-right: 0;
    }
    /* 兼容有thead的情况 */
    tr:last-child:not(:only-child) th, tr:last-child td{
        border-bottom: 0;
    }
    table &gt; :only-child th{
        border-bottom: 0;
    }
    /* 兼容有thead的情况 */
&lt;/style&gt;

&lt;table&gt;
    &lt;tr&gt;
        &lt;th&gt;123&lt;/th&gt;
        &lt;th&gt;123&lt;/th&gt;
        &lt;th&gt;123&lt;/th&gt;
        &lt;th&gt;123&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;123&lt;/td&gt;
        &lt;td&gt;123&lt;/td&gt;
        &lt;td&gt;123&lt;/td&gt;
        &lt;td&gt;123&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;123&lt;/td&gt;
        &lt;td&gt;123&lt;/td&gt;
        &lt;td&gt;123&lt;/td&gt;
        &lt;td&gt;123&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/table表格设置border-radius不生效.html</link><guid isPermaLink="false">开发笔记/前端/table表格设置border-radius不生效.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 29 Apr 2024 01:04:05 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/table表格设置border-radius不生效-20240429053555032.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/table表格设置border-radius不生效-20240429053555032.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[CSS 垂直居中SVG标签]]></title><description><![CDATA[ 
 <br>在本文中，我们将介绍如何使用CSS来垂直居中SVG标签。SVG（Scalable Vector Graphics）是一种基于XML的矢量图形格式，常用于创建图形、图表和图标。垂直居中SVG标签是在网页中实现视觉居中对齐的常见需求之一。我们将探讨几种不同的方法和技术，以及它们的优缺点。<br>阅读更多：<a data-tooltip-position="top" aria-label="https://geek-docs.com/css" rel="noopener" class="external-link" href="https://geek-docs.com/css" target="_blank">CSS 教程</a><br><br>Flexbox布局是一种强大而灵活的CSS布局模型，可以方便地实现元素的水平和垂直居中。使用Flexbox布局垂直居中SVG标签非常简单。首先，我们需要将SVG标签包装在一个容器元素内，如下所示：<br>&lt;div class="container"&gt;
  &lt;svg&gt;...&lt;/svg&gt;
&lt;/div&gt;
复制<br>然后，我们可以使用以下CSS样式来使SVG标签垂直居中：<br>.container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
}
复制<br>这段CSS样式将容器元素设置为使用Flexbox布局，通过align-items: center和justify-content: center属性将SVG标签垂直和水平居中。height: 100vh属性将容器元素的高度设置为视口的高度，以确保SVG标签在整个页面垂直居中显示。<br><br>另一种常用的方法是使用CSS的绝对定位属性来垂直居中SVG标签。我们可以将SVG标签的父容器设置为相对定位，然后将SVG标签本身设置为绝对定位，并使用top: 50%和transform: translate(-50%, -50%)属性将其垂直居中。以下是示例代码：<br>&lt;div class="container"&gt;
  &lt;svg class="svg"&gt;
    ...
  &lt;/svg&gt;
&lt;/div&gt;
复制<br>.container {
  position: relative;
  height: 100vh;
}

.svg {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
复制<br>这段代码将SVG标签的父容器设置为相对定位，并将高度设置为视口的高度。SVG标签使用绝对定位，将top和left属性设置为50%，然后使用transform属性将其向左和向上移动50%，以实现垂直居中。<br><br>表格布局是一种能够快速实现元素的水平和垂直居中的方法。我们可以将SVG标签放置在一个单元格内，并将该单元格放置在一个表格中。以下是示例代码：<br>&lt;div class="container"&gt;
  &lt;table&gt;
    &lt;tr&gt;
      &lt;td&gt;
        &lt;svg&gt;...&lt;/svg&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/table&gt;
&lt;/div&gt;
复制<br>.container {
  display: table;
  width: 100%;
  height: 100vh;
  text-align: center;
}

table {
  height: 100%;
  width: 100%;
}

td {
  vertical-align: middle;
}
复制<br>在这个示例中，我们使用display: table将容器元素设置为表格布局。该容器元素的高度设置为视口的高度，并通过text-align: center属性将SVG标签水平居中。表格元素的高度和宽度均设置为100%。单元格的vertical-align属性设置为middle，以将SVG标签垂直居中。<br><br>在本文中，我们介绍了三种常用的方法来垂直居中SVG标签：使用Flexbox布局、使用绝对定位和使用表格布局。这些方法每个都有其适合的场景和相应的优缺点，因此在选择合适的方法时需要根据具体需求进行权衡。希望本文能帮助你在网页设计和开发中实现SVG标签的垂直居中效果。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/css-垂直居中svg标签.html</link><guid isPermaLink="false">开发笔记/前端/CSS 垂直居中SVG标签.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sun, 28 Apr 2024 20:19:18 GMT</pubDate></item><item><title><![CDATA[Chrome DevTools 远程调试安卓网页的原理]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://cloud.tencent.com/developer/article/2159926" rel="noopener" class="external-link" href="https://cloud.tencent.com/developer/article/2159926" target="_blank">cloud.tencent.com</a>
<br>
作为前端开发，我们每天都会用 Chrome DevTools 调试 Chrome 的网页，但其实它还可以远程调试安卓手机的网页。
<br>作为前端开发，我们每天都会用 Chrome DevTools 调试 Chrome 的网页，但其实它还可以<a data-tooltip-position="top" aria-label="https://cloud.tencent.com/product/rd?from_column=20065&amp;from=20065" rel="noopener" class="external-link" href="https://cloud.tencent.com/product/rd?from_column=20065&amp;from=20065" target="_blank">远程调试</a>安卓手机的网页。<br>那 Chrome Devtools 如何远程调试安卓网页呢？它的实现原理是什么？<br>今天我们就来了解一下：<br><br>用数据线把安卓手机和电脑连接起来，在手机设置里打开 USB 调试：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/eb155bfd5a24d00455c76ded6311a808.png" referrerpolicy="no-referrer"><br>然后在 chrome 打开 chrome://inspect 页面，勾选 Discover USB devices（默认是勾选的）：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/405ba147de7c6cae69b8fbeccaa4de56.png" referrerpolicy="no-referrer"><br>这时候下面就会出现一个提示：请在设备上接受 debugging 会话<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/cfdb33bb384dfa304ff91dd7927822db.jpg" referrerpolicy="no-referrer"><br>在手机上点击确定，就会建立调试会话：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/b0b5c213ad863bdcb9e2e2541c7db632.png" referrerpolicy="no-referrer"><br>下面就会列出所有可以调试的网页：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/6a7bd839cd38c989f8cf7479d3259a04.png" referrerpolicy="no-referrer"><br>浏览器里的网页，或者 APP 调试包的 webview 的网页都会列出来。<br>点击 inspect 就可以调试了：<br>可以审查元素：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/da0169d058ba599ea43a947428fc5200.png" referrerpolicy="no-referrer"><br>可以打断点：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/0d4c041db553c1137214127daa10750e.png" referrerpolicy="no-referrer"><br>也可以用 Performance 分析性能：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/d560b7e8d8f757df796514a21967c993.png" referrerpolicy="no-referrer"><br>各种调试 PC 网页的功能基本都支持。这样就可以愉快的调试安卓的移动端网页了。<br>不过这个过程你可能会遇到这样的问题，打开的窗口是空白的或者是 404:<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/45dff14c694038407cac6480b929c434.png" referrerpolicy="no-referrer"><br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/bc12215c54316fca304b3f115ade3257.png" referrerpolicy="no-referrer"><br>这是因为调试的目标可能是任意 chrome 版本，那么 Chrome Devtools 自然也要用相应的版本才行，所以就需要动态下载。<br>而动态下载的 devtools 网页是在 google <a data-tooltip-position="top" aria-label="https://cloud.tencent.com/act/pro/domain-sales?from_column=20065&amp;from=20065" rel="noopener" class="external-link" href="https://cloud.tencent.com/act/pro/domain-sales?from_column=20065&amp;from=20065" target="_blank">域名</a>下的，需要科学上网才行。<br>科学上网之后，就可以正常的下载 Chrome DevTools 来做调试，也就不会白屏或 404 了。<br>但也不是每次都要科学上网，一个调试目标只需要下载一次 Chrome Devtools 的代码，之后就可以一直用了。<br>我们了解了 Chrome DevTools 怎么调试安卓的网页，那它的原理是什么呢？<br><br>Chrome DevTools 被设计成了和 Chrome 分离的架构，两者之间通过 WebSocket 通信，设计了专门的通信协议：Chrome DevTools Protocol。<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/94da236a1f9211c134e2f66f56c66bcb.png" referrerpolicy="no-referrer"><br>这样只要实现对接 CDP 协议的 ws 服务端，就可以用 Chrome DevTools 来调试，所以 Chrome DevTools 可以用来调试浏览器的网页、调试 Node.js，调试 Electron 等。<br>那自然也就可以远程调试安卓手机的网页了，只要开启了 USB 调试，那手机和电脑就可以做网络通信，从而实现基于 CDP 的调试。<br>这个 CDP 的调试协议是 json 格式的，如果想看它传输了什么也是可以的：<br>下载金丝雀版本的 chrome：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/f7d030524d2a5d5edc8d8d8d16e2cb36.png" referrerpolicy="no-referrer"><br>在 Chrome DevTools 的 more tools 里打开 Protocol Monitor 面板：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/61ca64764a848266bd3aad164d343229.png" referrerpolicy="no-referrer"><br>然后你就可以在 Protocol Monitor 面板里看到所有的 CDP 协议的数据交互了：<br><img src="https://ask.qcloudimg.com/http-save/yehe-6071743/4e4276d839664bb86b7f33c9416a67f8.png" referrerpolicy="no-referrer"><br>这就是调试的实现原理。<br><br>Chrome DevTools 和 Chrome 是分离的架构，两者通过 WebSocket 通信，通信协议是 Chrome DevTools Protocol，可以在金丝雀版本的 Protocol Monitor 里看到 CDP 的数据交互。<br>因为这样的实现原理，Chrome DevTools 可以调试很多目标，其中就包括 USB 设备。<br>打开 USB 调试之后，在 chrome://inspect 页面就可以看到可调试的网页了，点击对应的网页就可以调试。<br>要注意的是调试的目标浏览器要和用的 Chrome DevTools 版本一一对应才行，所以第一次调试会先下载 Chrome DevTools，这需要访问 google 的域名，如果没有科学上网，会有白屏和 404 的问题。<br>理解了调试的原理，Chrome DevTools 调试安卓网页的流程，就可以愉快的远程调试安卓手机的网页了。<br>本文参与&nbsp;<a data-tooltip-position="top" aria-label="https://cloud.tencent.com/developer/support-plan" rel="noopener" class="external-link" href="https://cloud.tencent.com/developer/support-plan" target="_blank">腾讯云自媒体分享计划</a>，分享自微信公众号。<br>原始发表：2022-08-15，如有侵权请联系&nbsp;<a data-tooltip-position="top" aria-label="mailto:cloudcommunity@tencent.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:cloudcommunity@tencent.com" target="_blank">cloudcommunity@tencent.com</a> 删除]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/chrome-devtools-远程调试安卓网页的原理.html</link><guid isPermaLink="false">开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 27 Apr 2024 06:53:39 GMT</pubDate><enclosure url="https://ask.qcloudimg.com/http-save/yehe-6071743/eb155bfd5a24d00455c76ded6311a808.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://ask.qcloudimg.com/http-save/yehe-6071743/eb155bfd5a24d00455c76ded6311a808.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[css屏幕尺寸与设备]]></title><description><![CDATA[ 
 <br><br>/* 超小屏幕（手机，小于 768px） */
@media (max-width: 768px) { ... }

/* 小屏幕（平板，大于等于 768px） */
@media (min-width: 768px) { ... }

/* 中等屏幕（桌面显示器，大于等于 992px） */
@media (min-width: 992px) { ... }

/* 大屏幕（大桌面显示器，大于等于 1200px） */
@media (min-width: 1200px) { ... }
复制<br>也可以在媒体查询代码中包含&nbsp;max-width&nbsp;从而将 CSS 的影响限制在更小范围的屏幕大小之内。<br>/* 超小屏幕（手机，小于 768px） */
@media (max-width: 768px) { ... }

/* 小屏幕（平板，大于等于 768px） */
@media (min-width: 768px) and (max-width: 992px) { ... }

/* 中等屏幕（桌面显示器，大于等于 992px） */
@media (min-width: 992px) and (max-width: 1200px) { ... }

/* 大屏幕（大桌面显示器，大于等于 1200px） */
@media (min-width: 1200px) { ... }
复制<br>这两种写法的区别主要在于：<br>
<br>第一种写法适用于每个区间是互斥且递增的情况，即每增加一个区间，之前的区间不再适用；
<br>第二种写法则在每个区间内部署了更精确的范围限制，适用于需要对每个屏幕宽度区间进行精细化处理的场景。
<br>除了上面提到的根据屏幕宽度设置媒体查询之外，还可以结合其他媒体特性进行查询，以下是一些其他的媒体查询写法：<br>
<br>根据设备高度：
<br>/* 当设备高度小于或等于600px时 */
@media (max-height: 600px) { ... }

/* 当设备高度大于或等于800px时 */
@media (min-height: 800px) { ... }
复制<br>
<br>根据设备分辨率（dpi）：
<br>/* 当设备分辨率为1dpi到1.5dpi之间 */
@media (-webkit-min-device-pixel-ratio: 1), 
       (min-resolution: 1dppx) and (max-resolution: 1.5dppx) { ... }
复制<br>
<br>同时考虑宽度和高度：
<br>/* 当设备宽度大于600px且高度大于400px */
@media (min-width: 600px) and (min-height: 400px) { ... }
复制<br>
<br>方向性（横屏/竖屏）：
<br>/* 当设备处于横屏模式 */
@media screen and (orientation: landscape) { ... }

/* 当设备处于竖屏模式 */
@media screen and (orientation: portrait) { ... }
复制<br>
<br>颜色深度：
<br>/* 当设备颜色深度至少为16位 */
@media (min-color-index: 256) { ... }

/* 当设备颜色深度最多为256位 */
@media (max-color-index: 255) { ... }
复制<br>
<br>视窗比例：
<br>/* 当视窗宽度与高度的比例大于或等于1.5 */
@media (aspect-ratio: 16/9) { ... }
复制<br>注意：并非所有媒体特性在所有浏览器中都被支持，所以在实际开发中应参考 Can I Use 等资源了解兼容性，并可能需要采用一些 polyfill 方案来提高兼容性。<br>对于打印设备，我们可以使用 print 媒体类型来编写专门针对打印输出的样式。以下是如何针对打印设备编写媒体查询的例子：<br>/* 通用打印样式 */
@media print {
    /* 这里的CSS样式将在打印预览或打印时生效 */
    body {
        font-size: 10pt;
        background-color: transparent !important;
    }
    #header, #footer, #nav-bar {
        display: none; /* 隐藏不需要在打印版中显示的部分 */
    }
}

/* 更细粒度的打印设备样式控制，比如纸张大小 */
@media print and (width: 21cm) and (height: 29.7cm) {
    /* 这里的样式将在纸张尺寸为A4大小的打印设备上生效 */
    .page-break {
        page-break-after: always; /* 强制每个.page-break元素后面插入分页符 */
    }
}
复制<br>这里，@media print 媒体查询的作用是当用户尝试打印页面时，应用其中的 CSS 样式。你可以在这里自定义打印样式，比如隐藏某些不适合打印的内容，改变字体大小和颜色，或者添加分页符等。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/css屏幕尺寸与设备.html</link><guid isPermaLink="false">开发笔记/前端/css屏幕尺寸与设备.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 26 Apr 2024 23:32:41 GMT</pubDate></item><item><title><![CDATA[Javascript拷贝到剪切板]]></title><description><![CDATA[ 
 <br><br>最近帮同事实现了一个小功能——复制文本到剪贴板，主要参考了前端大神<a data-tooltip-position="top" aria-label="http://www.ruanyifeng.com/blog/2021/01/clipboard-api.html" rel="noopener" class="external-link" href="http://www.ruanyifeng.com/blog/2021/01/clipboard-api.html" target="_blank">阮一峰的博客</a>，根据 navigator.clipboard 返回的 Clipboard 对象的方法 writeText() 写文本到剪贴板。在本地测试时一切正常，到了测试环境却提示：<br>Uncaught (in promise) TypeError: Cannot read property 'writeText' of undefined at HTMLInputElement.&lt;anonymous&gt;
复制<br>在 Chrome 的 DevTools 控制台下执行 navigator.clipboard 返回 undefined，经查找资料发现是浏览器禁用了非安全域的 navigator.clipboard 对象，哪些地址是安全的呢？<br>安全域包括本地访问与开启TLS安全认证的地址，如 https 协议的地址、127.0.0.1 或 localhost 。<br>所以本文就是作一个兼容写法，在安全域下使用 navigator.clipboard 提升效率，非安全域退回到 document.execCommand('copy'); 保证功能可用。<br><br>function copyToClipboard(textToCopy) {
	// navigator clipboard 需要https等安全上下文
	if (navigator.clipboard &amp;&amp; window.isSecureContext) {
		// navigator clipboard 向剪贴板写文本
		return navigator.clipboard.writeText(textToCopy);
	} else {
		// 创建text area
		let textArea = document.createElement("textarea");
		textArea.value = textToCopy;
		// 使text area不在viewport，同时设置不可见
		textArea.style.position = "absolute";
		textArea.style.opacity = 0;
		textArea.style.left = "-999999px";
		textArea.style.top = "-999999px";
		document.body.appendChild(textArea);
		textArea.focus();
		textArea.select();
		return new Promise((res, rej) =&gt; {
			// 执行复制命令并移除文本框
			document.execCommand('copy') ? res() : rej();
			textArea.remove();
		});
	}
}
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/javascript拷贝到剪切板.html</link><guid isPermaLink="false">开发笔记/前端/Javascript拷贝到剪切板.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 24 Apr 2024 07:17:39 GMT</pubDate></item><item><title><![CDATA[js判断是否是手机]]></title><description><![CDATA[ 
 <br>在 JavaScript 中，判断用户是否正在使用手机访问网页，可以采用以下几种常见的方法：<br><br>通过解析 navigator.userAgent 属性返回的字符串，可以识别出浏览器的用户代理信息，其中包括设备类型、操作系统和浏览器版本等。虽然这种方法不够精确，因为用户代理字符串可以被伪造，但它仍然是一个广泛应用的快速判断手段。以下是一个简单的示例：<br>function isMobileDevice() {
    return /Mobi|Android|iPhone|iPad|iPod|Windows Phone|BlackBerry|Opera Mini|IEMobile/i.test(navigator.userAgent);
}

if (isMobileDevice()) {
    console.log("访问设备可能是手机");
} else {
    console.log("访问设备可能不是手机");
}
复制<br>这个函数通过正则表达式检查 navigator.userAgent 是否包含常见的手机浏览器标识符。如果存在，则认为用户可能正在使用手机访问。<br><br>根据屏幕尺寸也可以大致判断设备类型。通常情况下，手机的视口宽度较小。尽管这并不能准确区分平板电脑和一些小屏幕笔记本电脑，但对于大多数场景已经足够。设定一个阈值来区分“小屏幕”（可能为手机）和“大屏幕”（可能为桌面设备）：<br>function isMobileScreen() {
    const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
    const viewportHeight = window.innerHeight || document.documentElement.clientHeight;

    // 选择一个合适的阈值，例如常见的手机横屏宽度
    const mobileThreshold = 768;

    return viewportWidth &lt;= mobileThreshold;
}

if (isMobileScreen()) {
    console.log("访问设备可能是手机");
} else {
    console.log("访问设备可能不是手机");
}
复制<br><br>使用 window.matchMedia() 方法配合 CSS 媒体查询，可以更灵活地检测设备特性，如屏幕宽度：<br>function isMobileViaMatchMedia() {
    return window.matchMedia("(max-width: 768px)").matches;
}

if (isMobileViaMatchMedia()) {
    console.log("访问设备可能是手机");
} else {
    console.log("访问设备可能不是手机");
}
复制<br><br>为了获得更精确的设备和浏览器信息，可以使用专门的库来解析用户代理字符串。这些库能够提供详细的设备类型、操作系统、浏览器版本等信息，减少了手动维护正则表达式的复杂性。例如，使用 ua-parser-js：<br>import UAParser from 'ua-parser-js';

const parser = new UAParser();
const result = parser.getResult();

if (result.device.type === 'mobile') {
    console.log("访问设备是手机");
} else {
    console.log("访问设备不是手机");
}
复制<br>请注意，随着设备多样性和浏览器特性的不断发展，上述方法可能会随着时间推移需要更新以适应新的设备和用户代理字符串变化。在实际应用中，建议结合项目需求选择合适的方法，或者使用成熟的跨平台框架（如 React、Vue、Angular）提供的内置响应式布局功能，它们通常已经封装了设备检测逻辑。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js判断是否是手机.html</link><guid isPermaLink="false">开发笔记/前端/js判断是否是手机.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 02 May 2024 05:46:02 GMT</pubDate></item><item><title><![CDATA[js 时间戳转字符串]]></title><description><![CDATA[ 
 <br>function timestampToTimeString(timestamp) {
    timestamp = timestamp ? timestamp : null;
    //时间戳为10位需*1000，时间戳为13位的话不需乘1000
    let date = new Date(timestamp);
    let Y = date.getFullYear() + '-';
    let M = (date.getMonth() + 1 &lt; 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-';
    let D = (date.getDate() &lt; 10 ? '0' + date.getDate() : date.getDate()) + ' ';
    let h = (date.getHours() &lt; 10 ? '0' + date.getHours() : date.getHours()) + ':';
    let m = (date.getMinutes() &lt; 10 ? '0' + date.getMinutes() : date.getMinutes()) + ':';
    let s = date.getSeconds() &lt; 10 ? '0' + date.getSeconds() : date.getSeconds();
    return Y + M + D + h + m + s;
}
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js-时间戳转字符串.html</link><guid isPermaLink="false">开发笔记/前端/js 时间戳转字符串.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 23 Apr 2024 04:56:20 GMT</pubDate></item><item><title><![CDATA[defer和async的区别（面试被问到了） - 掘金]]></title><description><![CDATA[ 
 <br>1.先来试个一句话解释仨，当浏览器碰到&nbsp;script&nbsp;脚本的时候：<br>
<br>
&lt;script src="script.js"&gt;&lt;/script&gt;
没有&nbsp;defer&nbsp;或&nbsp;async，浏览器会立即加载并执行指定的脚本，“立即”指的是在渲染该&nbsp;script&nbsp;标签之下的文档元素之前，也就是说不等待后续载入的文档元素，读到就加载并执行。

<br>
&lt;script async src="script.js"&gt;&lt;/script&gt;
有&nbsp;async，加载和渲染后续文档元素的过程将和&nbsp;script.js&nbsp;的加载与执行并行进行（异步）。

<br>
&lt;script defer src="myscript.js"&gt;&lt;/script&gt;
有&nbsp;defer，加载后续文档元素的过程将和&nbsp;script.js&nbsp;的加载并行进行（异步），但是&nbsp;script.js&nbsp;的执行要在所有元素解析完成之后，DOMContentLoaded&nbsp;事件触发之前完成。

<br>然后从实用角度来说呢，首先把所有脚本都丢到&nbsp;&lt;/body&gt;&nbsp;之前是最佳实践，因为对于旧浏览器来说这是唯一的优化选择，此法可保证非脚本的其他一切元素能够以最快的速度得到加载和解析。<br>接着，我们来看一张图：<br><img src="https://wxkj.asia/mynote/lib/media/defer和async的区别（面试被问到了）-掘金-20240423105011271.webp"><br>蓝色线代表网络读取，红色线代表执行时间，这俩都是针对脚本的；绿色线代表 HTML 解析。<br>此图告诉我们以下几个要点：<br>
<br>defer&nbsp;和&nbsp;async&nbsp;在网络读取（下载）这块儿是一样的，都是异步的（相较于 HTML 解析）
<br>它俩的差别在于脚本下载完之后何时执行，显然&nbsp;defer&nbsp;是最接近我们对于应用脚本加载和执行的要求的
<br>关于&nbsp;defer，此图未尽之处在于它是按照加载顺序执行脚本的，这一点要善加利用
<br>async&nbsp;则是一个乱序执行的主，反正对它来说脚本的加载和执行是紧紧挨着的，所以不管你声明的顺序如何，只要它加载完了就会立刻执行
<br>仔细想想，async&nbsp;对于应用脚本的用处不大，因为它完全不考虑依赖（哪怕是最低级的顺序执行），不过它对于那些可以不依赖任何脚本或不被任何脚本依赖的脚本来说却是非常合适的，最典型的例子：Google Analytics
]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/defer和async的区别（面试被问到了）-掘金.html</link><guid isPermaLink="false">开发笔记/前端/defer和async的区别（面试被问到了） - 掘金.md</guid><dc:creator><![CDATA[demons波少]]></dc:creator><pubDate>Thu, 25 Apr 2024 12:49:08 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/defer和async的区别（面试被问到了）-掘金-20240423105011271.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/defer和async的区别（面试被问到了）-掘金-20240423105011271.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[js动态执行代码片段]]></title><description><![CDATA[ 
 <br>参考：<a data-tooltip-position="top" aria-label="https://github.com/eoureo/obsidian-runjs/blob/c4d64a9f7b8305a813bf81beadaac4395e8367df/src/main.ts#L594" rel="noopener" class="external-link" href="https://github.com/eoureo/obsidian-runjs/blob/c4d64a9f7b8305a813bf81beadaac4395e8367df/src/main.ts#L594" target="_blank">runCode</a><br><br>以下是一个使用 new AsyncFunction() 创建并执行异步函数的具体例子：<br>// 假设我们有一个异步操作的源代码字符串
const asyncCode = `
  return new Promise((resolve, reject) =&gt; {
    setTimeout(() =&gt; {
      if (obsidian.startsWith('valid')) {
        resolve('Obsidian value processed successfully.');
      } else {
        reject(new Error('Invalid Obsidian value.'));
      }
    }, 2000);
  });
`;

// 创建一个异步函数对象
const processObsidian = new AsyncFunction('obsidian', asyncCode);

// 准备要传递给异步函数的实际参数
const obsidianValue = 'validInput';

// 调用并等待异步函数执行的结果
try {
  const result = await processObsidian(obsidianValue);
  console.log(result); // 输出: Obsidian value processed successfully.
} catch (error) {
  console.error(error.message); // 如果obsidianValue不是'valid'开头，会输出错误信息
}
复制<br>在这个例子中：<br>
<br>
我们定义了一个名为 asyncCode 的字符串，它包含了异步操作的源代码。这个源代码模拟了一个延迟两秒后检查 'obsidian' 变量值是否以 'valid' 开头，并基于此决定成功（通过 resolve）或失败（通过 reject）的 Promise。

<br>
使用 new AsyncFunction('obsidian', asyncCode) 创建了一个异步函数对象 processObsidian。这里的 'obsidian' 参数会在异步函数内部作为变量名使用，接收实际调用时传入的值。

<br>
定义了变量 obsidianValue，这是将要传递给异步函数的实际参数值。

<br>
使用 await 关键字调用 processObsidian(obsidianValue) 并等待其执行结果。如果 obsidianValue 符合条件（以 'valid' 开头），控制台会输出成功的消息；否则，会捕获并打印出错误信息。

<br>请注意，实际应用中，动态创建函数的源代码通常是从某个可靠来源获取，如模板引擎生成、用户输入经过严格验证等。直接拼接或接受不可信源的源代码可能会引入安全风险，如代码注入攻击。因此，在使用 new AsyncFunction() 时务必确保代码安全。<br><br>如果您需要使用 new Function()（或其同步版本）来执行同步代码，您可以参照以下示例：<br>// 假设我们有一个同步操作的源代码字符串
const syncCode = `
  if (obsidian.startsWith('valid')) {
    return 'Obsidian value processed successfully.';
  } else {
    throw new Error('Invalid Obsidian value.');
  }
`;

// 创建一个同步函数对象
const processObsidian = new Function('obsidian', syncCode);

// 准备要传递给同步函数的实际参数
const obsidianValue = 'validInput';

// 调用并处理同步函数执行的结果
try {
  const result = processObsidian(obsidianValue);
  console.log(result); // 输出: Obsidian value processed successfully.
} catch (error) {
  console.error(error.message); // 如果obsidianValue不是'valid'开头，会输出错误信息
}
复制<br>在这个例子中：<br>
<br>
我们定义了一个名为 syncCode 的字符串，它包含了同步操作的源代码。这个源代码检查 'obsidian' 变量值是否以 'valid' 开头，并基于此返回成功消息或抛出错误。

<br>
使用 new Function('obsidian', syncCode) 创建了一个同步函数对象 processObsidian。这里的 'obsidian' 参数会在同步函数内部作为变量名使用，接收实际调用时传入的值。

<br>
定义了变量 obsidianValue，这是将要传递给同步函数的实际参数值。

<br>
直接调用 processObsidian(obsidianValue) 并处理其执行结果。如果 obsidianValue 符合条件（以 'valid' 开头），控制台会输出成功的消息；否则，会捕获并打印出错误信息。

<br>同样地，使用 new Function() 构造函数时，需确保源代码来自可信来源，避免潜在的安全风险。在实际项目中，这种动态创建函数的方式可能较少见，更多情况下会直接定义和使用预编译的函数。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js动态执行代码片段.html</link><guid isPermaLink="false">开发笔记/前端/js动态执行代码片段.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 19 Apr 2024 04:12:57 GMT</pubDate></item><item><title><![CDATA[CodeMirror api]]></title><description><![CDATA[ 
 <br>在 CodeMirror 编辑器中，要实现光标所在行高亮，可以通过监听 cursorActivity 事件并在事件触发时设置高亮样式。以下是一个简单的示例：<br>var editor = CodeMirror.fromTextArea(document.getElementById('your-textarea-id'), {
  // ... 其他配置项
});

editor.on('cursorActivity', function(cm) {
  var cursor = cm.getCursor();
  cm.operation(function() { // 使用operation包裹避免多次刷新
    cm.removeLineClass(hlLine, 'background', 'CodeMirror-line-highlight'); // 移除先前高亮的行样式（如果有）
    hlLine = cm.getLineHandle(cursor.line); // 获取当前光标所在行的句柄
    cm.addLineClass(hlLine, 'background', 'CodeMirror-line-highlight'); // 给当前行添加高亮样式
  });
});

var hlLine = null; // 用于记录当前高亮行的句柄

// 定义高亮样式（通常在CSS文件中定义，这里仅作为演示）
CodeMirror.defineStyle('CodeMirror-line-highlight', {
  backgroundColor: '#FFFF00',
  backgroundAttachment: 'fixed'
});
复制<br>这段代码会在每次光标活动（移动、插入、删除等）时，清除之前高亮的行，并将当前光标所在行设置为高亮状态。高亮样式通过 addLineClass 方法添加，并且要在 CSS 中预先定义好 .CodeMirror-line-highlight 的样式。如果已有对应的样式名，可以直接使用那个名称代替 'CodeMirror-line-highlight'。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/codemirror-api.html</link><guid isPermaLink="false">开发笔记/前端/CodeMirror api.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 17 Apr 2024 15:12:22 GMT</pubDate></item><item><title><![CDATA[页面之间的通信]]></title><description><![CDATA[ 
 <br>JavaScript 是可以监控 localStorage 值的变化的。现代浏览器提供了一个名为 storage 的事件，当同一源下的其他窗口或标签页修改了 localStorage 时，这个事件会在当前窗口触发。监听 storage 事件可以实现实时监听 localStorage 的变化。<br>下面是如何监听 localStorage 变化的基本示例：<br>window.addEventListener('storage', function(event) {
  if (event.storageArea === localStorage) { // 确保事件来自localStorage
    if (event.key) { // key存在表示有项被修改、添加或删除
      console.log('Key "%s" was changed from "%s" to "%s"', 
                  event.key, 
                  event.oldValue, 
                  localStorage[event.key]);
    } else { // 如果key不存在，则可能是整个localStorage被清除
      console.log('The entire localStorage was cleared');
    }
  }
}, false);
复制<br>请注意，storage 事件不会在触发改变的同一个窗口或标签页中触发，而是会在同一源下的其他打开的窗口或标签页中触发。这是因为 localStorage 在同源策略下是共享的，所以当一个窗口修改了 localStorage，其他所有相同源的窗口都能感知到这个变化。<br>此外，storage 事件对象提供了如下属性：<br>
<br>event.key: 被修改的键名。
<br>event.oldValue: 键值修改前的旧值，如果键被删除则为 null。
<br>event.newValue: 键值修改后的值，如果键被删除也会是 null。
<br>event.url: 触发改变的文档的 URL。
<br>event.storageArea: 修改数据的 Storage 对象引用，通常是 localStorage。
<br>然而，如果你想在一个窗口内部实时监听自身的 localStorage 变化，单纯依赖浏览器提供的 storage 事件是不够的，需要自行封装函数或利用 MutationObserver 等手段，但这并非标准做法，而且可能受到限制或无法稳定工作。在单窗口内实时监听 localStorage 通常需要在 setItem 等方法上进行包裹或替换，以便在调用时同步触发相应的事件。<br>对于浏览器标签页间的通信，以下是几种可行的方法：<br>
<br>
LocalStorage/SessionStorage<br>
通过监听 storage 事件，可以在不同的浏览器标签页间共享数据。当一个标签页修改了 localStorage 或 sessionStorage，其他同源标签页会接收到 storage 事件通知，并可以从事件对象中获取变化的信息。
window.addEventListener('storage', function(event) {
    if (event.key) {
        console.log('Key "%s" changed to "%s"', event.key, localStorage[event.key]);
    }
});

// 设置数据
localStorage.setItem('message', 'Hello from another tab');
复制

<br>
Broadcast Channel API<br>
使用 BroadcastChannel 接口可以创建一个命名的通道，让同源的多个浏览器上下文（如标签页、iframe 等）能够互相通信。
const channel = new BroadcastChannel('my-channel');

// 发送消息
channel.postMessage({ type: 'hello', data: 'From one tab' });

// 接收消息
channel.addEventListener('message', function(event) {
    console.log('Received message:', event.data);
});
复制

<br>
WebSockets<br>
利用 WebSocket 技术，所有打开的标签页都可以连接到同一个服务器，通过服务器作为中介转发消息。
var socket = new WebSocket('ws://example.com/mychannel');

// 发送消息
socket.send(JSON.stringify({ message: 'Hello from one tab' }));

// 接收消息
socket.onmessage = function(event) {
    console.log('Received via WebSocket:', JSON.parse(event.data));
};
复制

<br>
Cookies + setInterval<br>
虽然不是理想的方案，但是也可以通过定时检查 Cookie 值的变化来间接实现通信，但这通常效率较低且不适合频繁通信。

<br>
同源窗口间自定义事件<br>
在同源的两个窗口之间，可以通过 window.postMessage 实现直接通信。
// 发送消息的窗口
otherWindow.postMessage('Hello from another tab', 'http://example.com');

// 接收消息的窗口
window.addEventListener('message', function(event) {
    if (event.origin === 'http://example.com') {
        console.log('Received message:', event.data);
    }
});
复制

<br>选择哪种方式取决于具体的业务需求和技术背景。其中，Broadcast Channel API 和 window.postMessage 方法尤其适用于浏览器标签页间的直接通信。<br><a data-tooltip-position="top" aria-label="https://juejin.cn/post/6844903811232825357" rel="noopener" class="external-link" href="https://juejin.cn/post/6844903811232825357" target="_blank">面试官：前端跨页面通信，你知道哪些方法？ - 掘金</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/页面之间的通信.html</link><guid isPermaLink="false">开发笔记/前端/页面之间的通信.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 17 Apr 2024 15:11:41 GMT</pubDate></item><item><title><![CDATA[打印浏览器及内核版本]]></title><description><![CDATA[ 
 <br>console.log("Browser Information:");

// 获取navigator对象的信息
var userAgent = navigator.userAgent;
console.log("User Agent: ", userAgent);

// 解析User-Agent以获取浏览器信息
var browserInfo = detectBrowser();
console.log(browserInfo);

function detectBrowser() {
    var userAgent = navigator.userAgent;
    var browser = null;
    var version = null;

    // 检测浏览器类型
    if (userAgent.indexOf("Firefox") &gt; -1) {
        browser = "Mozilla Firefox";
        version = userAgent.match(/Firefox\/([\d.]+)/)[1];
    } else if (userAgent.indexOf("Chrome") &gt; -1) {
        browser = "Google Chrome";
        version = userAgent.match(/Chrome\/([\d.]+)/)[1];
    } else if (userAgent.indexOf("Safari") &gt; -1) {
        browser = "Apple Safari";
        version = userAgent.match(/Version\/([\d.]+)/)[1];
    } else if (userAgent.indexOf("MSIE") &gt; -1 || userAgent.indexOf("Trident/") &gt; -1) {
        browser = "Internet Explorer";
        // 对于IE11及以上或Edge，使用正则匹配 Trident 字符串后面跟的版本号
        version = userAgent.match(/rv:([\d.]+)/)[1];
        // Edge 添加单独检测
        if (!version &amp;&amp; userAgent.indexOf("Edge") &gt; -1) {
            browser = "Microsoft Edge";
            version = userAgent.match(/Edge\/([\d.]+)/)[1];
        }
    } else if (userAgent.indexOf("Opera") &gt; -1) {
        browser = "Opera";
        version = userAgent.match(/Opera\/([\d.]+)/)[1];
    }

    // 获取浏览器内核信息
    var engineInfo = getEngineInfo(userAgent);
    console.log("Browser Engine: ", engineInfo.engine, " Version: ", engineInfo.version);

    return { 
        browser: browser, 
        version: version,
        engine: engineInfo.engine,
        engineVersion: engineInfo.version
    };

    function getEngineInfo(ua) {
        var engine = 'Unknown';
        var version = '';

        if (ua.indexOf('WebKit') &gt; -1) {
            engine = 'WebKit';
            version = ua.match(/WebKit\/([\d.]+)/)[1];
        } else if (ua.indexOf('Gecko') &gt; -1) {
            engine = 'Gecko';
            version = ua.match(/rv:([\d.]+)/)[1];
        } else if (ua.indexOf('Presto') &gt; -1) {
            engine = 'Presto';
            version = ua.match(/Presto\/([\d.]+)/)[1];
        } else if (ua.indexOf('Blink') &gt; -1) {
            engine = 'Blink';
            version = ua.match(/Chrome\/([\d.]+)/)[1]; // Blink 版本通常与Chrome版本一致
        }

        return { engine, version };
    }
}

// 调用检测方法
detectBrowser();
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/打印浏览器及内核版本.html</link><guid isPermaLink="false">开发笔记/前端/打印浏览器及内核版本.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 06 Apr 2024 03:34:36 GMT</pubDate></item><item><title><![CDATA[开发小技巧之调试移开消失的元素]]></title><description><![CDATA[ 
 <br><br>&nbsp;&nbsp;&nbsp;&nbsp;大多数小伙伴都遇到过一种调试情况，想调试页面中的某个元素，查看该元素的样式或者其他信息。鼠标移上去的时候或者点击的时候存在，移开就消失了，以至于不能用选择页面元素工具查看。今天就来整理一下什么功能会出现这种情况，以及该如何调试这种情况的元素。<br><br>最常见的也是最普通的情况就是伪类，其中:hover , :focus是最常见的，很多菜单就是通过这两种伪类做的下拉悬浮，最不易察觉的样式是:focus 伪类选择器中的样式。 比如chrome中元素获取焦点的样式<br><img alt="在这里插入图片描述" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f374a00da0a9~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" referrerpolicy="no-referrer"><br>仔细看的话会发现，input输入框在获取焦点时有个默认的outline 外边轮廓，而图片中选择的div.content在勾选上focus伪类选择时也出现了一个蓝色的outline 外边轮廓。 正常情况下div.content 是无法获取焦点的，所以我们很少见到，但是input 输入框我们经常见到，有很多新手不知道这个默认的outline，想把这个样式修改又不知从何修改，而这里的-webkit-focus-ring-color 指的是chrome 获取焦点的颜色变量，从样式计算结果可以看到这个颜色值是rgb(77, 144, 254)。<br>比如github的登录页输入框就用了:focus 伪类选择器设置了输入框的box-shaodw:的spread(阴影的大小)。<br><img alt="在这里插入图片描述" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f3749ff94d8d~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" referrerpolicy="no-referrer"><br>之前在StackOverflow 上也碰到过有人问像上面提到的样式怎么去掉，其实只要知道了这个样式是获取焦点时才出现，勾选上调试窗口的:focus伪类选择就能知道这个样式的具体信息了。<br>与:focus伪类选择类似的:hover伪类选择也一样，只是触发的条件由获取焦点换成了在元素上悬浮，失去焦点消失变成了移开元素消失，调试这种情况也只需要勾选上调试窗口的:hover伪类选择就行。其他伪类选择也是一样，勾选对应的选择就行。<br><img alt="在这里插入图片描述" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f3749fea555a~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" referrerpolicy="no-referrer"><br><br>通过事件驱动，给DOM增删className控制样式，比如百度网盘的下拉菜单。<br><img alt="在这里插入图片描述" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f374a12720f3~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" referrerpolicy="no-referrer"><br>这里在div.g-dropdown-button这个DOM上增删了.button-open 这个className，用.g-dropdown-button.button-open&gt;.menu选择器控制了.menu这个DOM的展示与隐藏，对于这种情况还是比较容易调试的，因为这里只是控制了DOM的隐藏和显示，DOM还是一直存在与document之中的，想更改样式还是比较容易的。<br><br>调试DOM最麻烦的就是这种，通过事件驱动，对触发的事件创建或者删除对应的DOM，比如一个下拉菜单，移动到按钮上，触发mouseenter事件，然后创建了一个下拉框的DOM，移出这个下拉框，触发mouseleave事件，删除了这个下拉框DOM，这个时候想要调试更改这个下拉框的样式就比较麻烦，因为移开DOM就被实时删除，无法查看这个DOM的样式，更没法调试更改样式，举个例子。<br><img alt="在这里插入图片描述" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f374a1568813~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" referrerpolicy="no-referrer"><br>由于没找到网上例子，目前只找到移入创建DOM，移出不删除的例子，待会儿下面手写一个功能再看，现在这里可以看到移入button 标签时，在document中body标签内最下方创建了一个tooltip提示的DOM，这里很多新手不知道怎么查看以及更改tooltip提示的样式。在移出button未删除的情况下根据提示内容在文档中搜索一下就能找到，但是移出button就删除对应的DOM的情况下就需用用到debugger(断点)调试的方式了，debugger因为可以中断js进程，所以移出button之前进入debugger 就能用调试器更改DOM的样式了。<br>只需要在 Consle 下，用一个计时器 setTimeout(() =&gt; { debugger }, 2000)延时进入断点就好，时长根据页面操作复杂度自行决定，先执行这个计时器，再移到页面中触发事件，弹出临时创建的 DOM，只需等待进入断点即可，最后再调试。<br>下面用断点调试法尝试解决以上谈到的问题<br><img alt="在这里插入图片描述" src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f374a1ea5e1e~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" referrerpolicy="no-referrer"><br>这里就写了一个移入按钮创建提示的DOM，移出就删除。例子可以很明显的看到，移动到测试按钮上创建了一个.test-class的DOM，移出测试按钮就删除 .test-class这个DOM，因为移出就没办法调试，所以使用上诉提到的办法，用计时器延时进入断点，进入断点后可以看到，再次移出测试按钮，.test-class这个DOM不会消失，这样就可以使用样式调试工具，更改样式了。<br><br>总的来讲，页面调试只要掌握了规律，其实很容定位，不同浏览器对样式的解析有较多差异，如何在不同浏览器上写出相同呈现效果的页面，调试是必不可少的一部分，希望每一位同学都能熟练的调试DOM。<br>以上如有疏漏或错误，欢迎指正。<br><br>文章来源: <a rel="noopener" class="external-link" href="https://juejin.cn/post/6844904114069962759" target="_blank">https://juejin.cn/post/6844904114069962759</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/开发小技巧之调试移开消失的元素.html</link><guid isPermaLink="false">开发笔记/前端/开发小技巧之调试移开消失的元素.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate><enclosure url="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f374a00da0a9~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/4/3/1713f374a00da0a9~tplv-t2oaga2asx-jj-mark:3024:0:0:0:q75.awebp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[平滑滚动到顶部或底部]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:js" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#js</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:css" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#css</a> 
 <br><a href="https://wxkj.asia/mynote?query=tag:js" class="tag" target="_blank" rel="noopener">#js</a> <a href="https://wxkj.asia/mynote?query=tag:css" class="tag" target="_blank" rel="noopener">#css</a><br>css样式代码：<br>html {
  scroll-behavior: smooth;
}
复制<br>js代码：<br> function ready(fn) {
      if (document.readyState !== 'loading') {
         fn();
     } else {
         document.addEventListener('DOMContentLoaded', fn);
     }
 }
 
 //自动滚动到顶部
 window.scrollTo(0, 0);
 
 //自动滚动到底部
 ready(function(){
      window.scrollTo(0, document.body.scrollHeight?   document.body.scrollHeight:document.documentElement.scrollHeight);
});

复制]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/平滑滚动到顶部或底部.html</link><guid isPermaLink="false">开发笔记/前端/平滑滚动到顶部或底部.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[一个高级 CSS 面试题：在 CSS 中实现 if-else]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:aa540e，用" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#aa540e，用</a> 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/529550105" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/529550105" target="_blank">zhuanlan.zhihu.com</a>
<br>我的一个朋友在最近的一次面试中遇到了一个有趣的 CSS 面试问题。当我第一次看到这个问题时，我认为这是一个常见的 CSS 问题。然而，经过仔细研究，我发现了这个问题的有趣部分。<br>面试题：请用 CSS 实现如下效果：<br><img src="https://pic3.zhimg.com/v2-5795ae9d60cf4a0d05dede58d279e362_r.jpg" referrerpolicy="no-referrer"><br>页面上有一些数字显示文章阅读的数量。如果数字小于 100，则数字的颜色为灰色。如果数字大于或等于 100，则数字为棕色，而且这种颜色可以动态调整，而不是提前预设。<br><img src="https://pic4.zhimg.com/v2-d7ce81a7f9b3ee0cdedfe1640687618f_r.jpg" referrerpolicy="no-referrer"><br>最后面试官要求用纯 CSS 来解决这个问题，你知道如何达到这个效果吗？<br><br>这个问题的本质是什么？<br>这个问题的本质很简单，也就是说，这实际上是一个 if-else 问题。<br>如果我们用伪代码描述这个问题，它应该是这样的：<br>let color;
if (reads &lt; 100){
  color = 'gray'
} else {
  color = 'brown'
}

复制<br>所以现在问题变成了：我们如何在 CSS 中实现这个 if-else 逻辑？请记住，CSS 中没有 if-else 关键字之类的东西。<br><br>在 CSS 中实现 if-else 的逻辑是本题考查的核心技能。让我们在下面完成这个逻辑。如果你学会了这个技巧，你可以用它来实现许多强大的 CSS 效果。<br>首先，让我们了解一个叫做 clamp 的函数。<br>clamp() CSS 函数将一个值限制在上限和下限之间。clamp() 允许在定义的最小值和最大值之间的值范围内选择中间值。<br>基本语法格式：<br>clamp(min, var, max)

复制<br>我们可以将 clamp 函数理解为这样的伪代码：<br>funciton clamp(min, var, max){
  if(var &lt;= min){
    return min
  }

  if(var &gt;= max){
    return max
  }

  if(var &gt; min &amp;&amp; var &lt; max){
    return var
  }
}

复制<br>所以：<br>clamp(10, 13, 20) → 13<br>clamp(10, 2, 20) → 10<br>clamp(10, 30, 20) → 20<br>用法示例：<br><img src="https://pic1.zhimg.com/v2-c7d73f8045c23cc672a21d77bd7e37c8_r.jpg" referrerpolicy="no-referrer"><br>font-size 的值不会超过 20px，也不会低于 10px。<br>这是 clamp 的基本用法。<br>如果您对 clamp 仍有疑问，可以参考 MDN 文档。<br>接下来，我们在 CSS 中实现这个功能。<br>result 的值根据 var 的值而变化：<br>当 var 的值小于 100 时，结果的值为 10；<br>当 var 的值大于等于 100 时，结果变为 20。<br>如果我们用伪代码描述这个问题，它应该是这样的：<br>let result;
if(var &lt; 100){
  result = 10
} else {
  result = 20
}

复制<br>这个要求和 clamp 函数类似，但又不一样。clamp 可以将 var 的值限制在一个范围内，但我们现在希望结果的值是 10 或 20。<br><br>有一个特殊的技巧：我们可以放大 var 的变化，使其值要么达到区间的上限，要么达到区间的下限。<br>于是：<br>let result = clamp(10, (var-99) * 20, 20)

复制<br>这会产生一个效果：<br>
<br>如果 var 的值为 99，则表达式变为：clamp(10, 0, 20), takes 10.
<br>如果 var 的值为 100，则变为：clamp(10, 20, 20), takes 20.
<br>用一张图解释：<br><img src="https://pic3.zhimg.com/v2-c88d61a1fa0da160d532f835f5ca14fa_r.jpg" referrerpolicy="no-referrer"><br>同样，如果我们希望：<br>当 var 的值小于 50 时，result 的值为 5。<br>当 var 的值大于等于 50 时，result 的值为 15。<br>我们只需要这样写：<br>let result = clamp(5, (var-49) * 15, 15)

复制<br>你有没有注意到：这实际上是 if-else 的效果，我们做到了。<br><img src="https://pic4.zhimg.com/v2-f98dab230e6a25b6dfafcdd2777dadb7_r.jpg" referrerpolicy="no-referrer"><br>在 CSS 中切换颜色<br>回到最初的面试问题。<br>为了让我们后面可以使用 CSS 进行变量计算，我们需要将值放在一个 CSS 变量中，所以 HTML 可以这样写：<br>&lt;num&gt;1&lt;span&gt;reads&lt;/span&gt;&lt;/num&gt;
&lt;num&gt;99&lt;span&gt;reads&lt;/span&gt;&lt;/num&gt;
&lt;num&gt;102&lt;span&gt;reads&lt;/span&gt;&lt;/num&gt;

复制<br>如果我们不需要考虑 HTML 语义或 SEO 因素，这里的 “数字” 和“读取”都可以由伪元素生成：<br>&lt;head&gt;
  &lt;style&gt;
    num::before {
      counter-reset: num var(--num);
      content: counter(num);
    }

    num::after {
      content: 'reads';
    }
&lt;/style&gt;
&lt;/head&gt;

&lt;body&gt;
  &lt;div&gt;
    &lt;num&gt;&lt;/num&gt;
    &lt;num&gt;&lt;/num&gt;
    &lt;num&gt;&lt;/num&gt;
  &lt;/div&gt;
&lt;/body&gt;

复制<br>如果对 content 和 counter-reset 不熟悉，可以查看 MDN 文档。<br>
<br>content ：<a rel="noopener" class="external-link" href="https://developer.mozilla.org/en-US/docs/Web/CSS/content" target="_blank">https://developer.mozilla.org/en-US/docs/Web/CSS/content</a>
<br>counter-reset：<a rel="noopener" class="external-link" href="https://developer.mozilla.org/en-US/docs/Web/CSS/counter-reset" target="_blank">https://developer.mozilla.org/en-US/docs/Web/CSS/counter-reset</a>
<br>具体的演示效果，可以通过以下地址查看：<a rel="noopener" class="external-link" href="https://codepen.io/bytefishmedium/pen/VwQrGEb" target="_blank">https://codepen.io/bytefishmedium/pen/VwQrGEb</a><br>棕色为 <a href="https://wxkj.asia/mynote?query=tag:aa540e，用" class="tag" target="_blank" rel="noopener">#aa540e，用</a> HSL 颜色表示为 hsl(27, 50%, 36%)，如下：<br><img src="https://pic1.zhimg.com/v2-5ec9d97363fd09fdd6b5cb1b13c58858_r.jpg" referrerpolicy="no-referrer"><br>它的饱和度控制颜色的鲜艳程度。饱和度越高，颜色越鲜艳，饱和度越低，颜色越暗。当饱和度降低到 0 时，就变成了完全的灰色，如下：<br><img src="https://pic2.zhimg.com/v2-169d6ddb0e03569ea8ee152dea979949_r.jpg" referrerpolicy="no-referrer"><br>在灰色和棕色之间切换颜色，即在 hsl(27, 85%, 36%) 和 hsl(27, 85%, 36%) 之间切换。<br>于是就有如下代码：<br>num{
  --s: clamp(0%,(var(--num) - 99) * 99%,85%);/* &gt;100 */
  color: hsl(27 var(--s) 36%);
}

复制<br>最终的演示：<a rel="noopener" class="external-link" href="https://codepen.io/bytefishmedium/pen/WNMXabm" target="_blank">https://codepen.io/bytefishmedium/pen/WNMXabm</a><br><br>我们通过 clamp 函数在 CSS 中实现 if-else 效果，最后让颜色根据变量的值进行切换。<br>其实原面试题还有另外一部分，简单来说就是：让颜色在多个值之间切换。仅使用 if-else 不足以满足此要求，有兴趣的话，可以留言交流学习。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/一个高级-css-面试题：在-css-中实现-if-else.html</link><guid isPermaLink="false">开发笔记/前端/一个高级 CSS 面试题：在 CSS 中实现 if-else.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate><enclosure url="https://pic3.zhimg.com/v2-5795ae9d60cf4a0d05dede58d279e362_r.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://pic3.zhimg.com/v2-5795ae9d60cf4a0d05dede58d279e362_r.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[HTML 标签简写及全称]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://www.runoob.com/html/html-tag-name.html" rel="noopener" class="external-link" href="https://www.runoob.com/html/html-tag-name.html" target="_blank">www.runoob.com</a> <a data-tooltip-position="top" aria-label="https://www.runoob.com/html/html-quicklist.html" rel="noopener" class="external-link" title="HTML 速查列表" href="https://www.runoob.com/html/html-quicklist.html" target="_blank">HTML 速查列表</a> <a data-tooltip-position="top" aria-label="https://www.runoob.com/html/html-summary.html" rel="noopener" class="external-link" title="HTML 总结" href="https://www.runoob.com/html/html-summary.html" target="_blank">HTML 总结</a>
<br>下表列出了 HTML 标签简写及全称：<br>]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/html-标签简写及全称.html</link><guid isPermaLink="false">开发笔记/前端/HTML 标签简写及全称.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[js 通过fs.watch实现文件的双向同步]]></title><description><![CDATA[ 
 <br>您提出的基于资源变化监控的文件同步策略是一种更高效且实时的方式。在 Node.js 中，可以使用 fs.watch（或更强大的第三方库如 chokidar）来监听文件系统事件，实现实时监测文件和目录的创建、修改和删除动作。<br>以下是一个基于 fs.watch 的基本文件同步示例框架：<br>const fs = require('fs');
const path = require('path');

// 监控源目录
const sourceDir = '/path/to/source';
// 目标目录
const targetDir = '/path/to/target';

// 初始化文件系统监视器
let watcher = null;

try {
  // 启动监视
  watcher = fs.watch(sourceDir, { recursive: true }, (eventType, filename) =&gt; {
    if (filename) {
      const sourceFilePath = path.join(sourceDir, filename);
      const targetFilePath = path.join(targetDir, filename);

      switch (eventType) {
        case 'rename':
          // 处理重命名事件（创建、删除或移动）
          // 这里可能需要先检查文件是否存在，以区分创建新文件还是删除旧文件
          break;
        case 'change':
          // 文件内容被修改，同步文件
          syncFile(sourceFilePath, targetFilePath);
          break;
        case 'add':
          // 新文件或目录被创建，同步新资源
          if (fs.lstatSync(sourceFilePath).isDirectory()) {
            // 如果是目录，可能需要递归创建目标目录并继续监视
            mkdirp.sync(path.dirname(targetFilePath));
            // 创建目录后，可能还需为新目录启动监视
          } else {
            syncFile(sourceFilePath, targetFilePath);
          }
          break;
        case 'unlink':
          // 文件被删除，相应地在目标目录删除文件或目录
          fs.rmSync(targetFilePath, { force: true, recursive: true });
          break;
        // 其他事件类型...
      }
    }
  });

  watcher.on('error', (error) =&gt; {
    console.error('Watcher error:', error);
  });

  console.log('Watching directory:', sourceDir);
} catch (error) {
  console.error('Failed to start watching:', error);
}

// 同步单个文件的辅助函数
function syncFile(source, target) {
  // 实现文件同步逻辑，例如使用fs.copyFileSync或流式复制
  fs.copyFileSync(source, target);
}
复制<br>请注意，fs.watch 在不同操作系统上的表现可能有所差异，部分事件可能无法准确捕获，或者存在一定的延迟。在实际项目中，可能需要引入更强大和稳定的文件系统监控库如 chokidar，以获得更可靠和全面的文件系统事件通知。同时，文件同步时要考虑并发控制、错误处理等问题，确保数据的一致性和完整性。<br><br>要实现双向同步，即源目录和目标目录互相同步，当任一端有改动时都会反映到另一端，您需要同时在两个目录上设置文件系统监视器，并确保同步操作不会引发死循环（例如，源目录修改同步到目标目录后，目标目录的改动又被同步回源目录）。<br>下面是一个简化的双向同步示例，为了简化说明，这里假设源和目标目录是独立的，互不影响，即源目录的更改仅同步到目标目录，反之亦然：<br>const fs = require('fs');
const path = require('path');
const chokidar = require('chokidar'); // 引入chokidar库，提供更稳定和丰富的文件系统监视功能

const sourceDir = '/path/to/source';
const targetDir = '/path/to/target';

// 初始化双向监视器
const watchers = {
  source: null,
  target: null,
};

// 同步文件的辅助函数
function syncFile(source, target) {
  fs.copyFileSync(source, target);
}

// 监听源目录变化并同步到目标目录
watchers.source = chokidar.watch(sourceDir, { ignoreInitial: true, ignored: /\.DS_Store/, persistent: true, recursive: true });
watchers.source.on('all', (event, filename) =&gt; {
  if (filename) {
    const sourceFilePath = path.join(sourceDir, filename);
    const targetFilePath = path.join(targetDir, filename);

    // 根据事件类型执行同步操作，注意在此处仅同步到目标目录
    switch (event) {
      // 处理创建、修改、删除事件
      // ...
    }
  }
});

// 监听目标目录变化并同步到源目录
watchers.target = chokidar.watch(targetDir, { ignoreInitial: true, ignored: /\.DS_Store/, persistent: true, recursive: true });
watchers.target.on('all', (event, filename) =&gt; {
  if (filename) {
    const targetFilePath = path.join(targetDir, filename);
    const sourceFilePath = path.join(sourceDir, filename);

    // 根据事件类型执行同步操作，注意在此处仅同步到源目录
    switch (event) {
      // 处理创建、修改、删除事件
      // ...
    }
  }
});

// 错误处理
['source', 'target'].forEach(watchType =&gt; {
  watchers[watchType].on('error', (error) =&gt; {
    console.error(`Watcher ${watchType} error:`, error);
  });
});

console.log('Watching directories:', sourceDir, 'and', targetDir);

// 若要避免死循环，可能需要在同步函数中加入某种标识，判断是否刚刚由同步操作引起的文件变更，从而避免再次同步回去。
复制<br>在实际应用中，双向同步需要仔细设计逻辑，避免无限循环同步。一种可能的做法是对同步操作加上标记或队列处理，确保每次同步都是有意义的且不会导致反复同步相同的变化。另外，还需要处理好并发控制和冲突解决等问题，以确保数据一致性。<br><br>使用 chokidar 库实现双向同步时，需要分别对源目录和目标目录进行监视，并确保同步操作不会造成循环同步。以下是一个简化的示例：<br>const chokidar = require('chokidar');
const fs = require('fs-extra');
const path = require('path');

// 源目录和目标目录
const sourceDir = '/path/to/source';
const targetDir = '/path/to/target';

// 用于记录已同步文件路径，防止循环同步
const syncedPaths = new Set();

// 同步单个文件的辅助函数
function syncFile(srcPath, dstPath) {
  // 防止循环同步，只有当srcPath不在已同步路径中才进行同步
  if (!syncedPaths.has(srcPath)) {
    syncedPaths.add(srcPath);

    // 同步文件，此处使用fs-extra的copy方法，具有更好的错误处理和覆盖策略
    fs.copy(srcPath, dstPath)
      .then(() =&gt; console.log(`File ${srcPath} synced to ${dstPath}`))
      .catch(err =&gt; console.error(`Error syncing file: ${err}`));

    // 同步后一段时间（可根据实际情况设定）将路径从已同步集合中移除
    setTimeout(() =&gt; syncedPaths.delete(srcPath), 5000); // 示例延时5秒，实际项目中可能需要调整
  }
}

// 初始化双向监视器
const watchers = {
  source: chokidar.watch(sourceDir, { ignored: /\.DS_Store/, persistent: true, ignoreInitial: true, alwaysStat: true, depth: 0 }),
  target: chokidar.watch(targetDir, { ignored: /\.DS_Store/, persistent: true, ignoreInitial: true, alwaysStat: true, depth: 0 }),
};

// 监听源目录变化并同步到目标目录
watchers.source
  .on('add', srcPath =&gt; syncFile(srcPath, path.join(targetDir, path.relative(sourceDir, srcPath))))
  .on('change', srcPath =&gt; syncFile(srcPath, path.join(targetDir, path.relative(sourceDir, srcPath))))
  .on('unlink', srcPath =&gt; {
    const dstPath = path.join(targetDir, path.relative(sourceDir, srcPath));
    fs.remove(dstPath)
      .then(() =&gt; console.log(`File ${srcPath} removed from target directory.`))
      .catch(err =&gt; console.error(`Error removing file: ${err}`));
  })
  .on('unlinkDir', srcPath =&gt; {
    const dstPath = path.join(targetDir, path.relative(sourceDir, srcPath));
    fs.remove(dstPath)
      .then(() =&gt; console.log(`Directory ${srcPath} removed from target directory.`))
      .catch(err =&gt; console.error(`Error removing directory: ${err}`));
  });

// 监听目标目录变化并同步到源目录
watchers.target
  .on('add', dstPath =&gt; syncFile(path.join(sourceDir, path.relative(targetDir, dstPath)), dstPath))
  .on('change', dstPath =&gt; syncFile(path.join(sourceDir, path.relative(targetDir, dstPath)), dstPath))
  .on('unlink', dstPath =&gt; {
    const srcPath = path.join(sourceDir, path.relative(targetDir, dstPath));
    fs.remove(srcPath)
      .then(() =&gt; console.log(`File ${dstPath} removed from source directory.`))
      .catch(err =&gt; console.error(`Error removing file: ${err}`));
  })
  .on('unlinkDir', dstPath =&gt; {
    const srcPath = path.join(sourceDir, path.relative(targetDir, dstPath));
    fs.remove(srcPath)
      .then(() =&gt; console.log(`Directory ${dstPath} removed from source directory.`))
      .catch(err =&gt; console.error(`Error removing directory: ${err}`));
  });

// 错误处理
['source', 'target'].forEach(dir =&gt; {
  watchers[dir].on('error', (error) =&gt; {
    console.error(`Watcher ${dir} error:`, error);
  });
});

console.log('Watching directories:', sourceDir, 'and', targetDir);
复制<br>此示例中，使用了 fs-extra 库来进行文件和目录的增删改操作，它封装了一些方便的方法，并提供了更好的错误处理机制。同时，使用了 Set 来跟踪已同步的文件路径，避免因连续触发事件导致的循环同步。<br>请注意，真正的双向同步可能需要更为复杂的逻辑来处理各种边界情况和并发问题，以及可能发生的同步冲突。在实际应用中，还需要根据具体业务需求进行更细致的设计和实现。<br><br>明白了，您是想了解如何在使用 fs.watch 或 chokidar 进行双向同步时避免死循环。当一个文件在源目录被修改并同步到目标目录后，如果目标目录的文件更改再次触发同步回源目录，可能会形成死循环。以下是一个避免这种死循环的策略：<br>
<br>设置一个同步过程中的临时标志，当一个文件正在进行同步时，该标志置为真，同步结束后置为假。
<br>let isSyncing = false;

function syncFile(srcPath, dstPath) {
  if (isSyncing) return; // 如果正在同步中，则跳过此次同步

  isSyncing = true;
  
  // 同步文件的逻辑...
  
  // 同步完成后
  isSyncing = false;
}
复制<br>
<br>使用全局同步队列，将待同步的文件放入队列中，而不是立即同步。这样可以确保一次只同步一个文件，避免多个文件更改同时触发同步造成死循环。
<br>const queue = [];

function enqueueSync(srcPath, dstPath) {
  queue.push({ srcPath, dstPath });
  processQueue();
}

function processQueue() {
  if (queue.length === 0 || isSyncing) return;

  const { srcPath, dstPath } = queue.shift();
  isSyncing = true;

  // 同步文件的逻辑...

  // 同步完成后
  isSyncing = false;
  processQueue();
}
复制<br>在使用 fs.watch 或 chokidar 的事件处理函数中，调用 enqueueSync 函数而非直接调用 syncFile，这样可以避免同时处理多个事件导致的循环同步。<br>请注意，以上只是简单示例，实际应用中可能还需要考虑并发控制、文件锁、错误处理、文件内容的差异化对比等因素，以确保同步操作的有效性和数据一致性。同时，这种方法并不能完全避免所有情况下的循环同步，复杂场景下可能需要更精细的设计和实现。<br><br>处理并发控制和解决同步冲突时，特别是在进行双向文件同步时，有几个关键步骤：<br>
<br>
文件锁：

<br>在进行文件读取、写入或移动操作时，可以使用文件锁来确保在同一时间内只有一个进程或线程访问特定文件。在 Node.js 中，可以使用第三方库如 proper-lockfile 或 lockfile 来实现文件锁。

const lockfile = require('lockfile');

function syncFileWithLock(srcPath, dstPath) {
  const lockPath = `${dstPath}.lock`;
  lockfile.lock(lockPath, { retries: 0 }, (err) =&gt; {
    if (err) {
      console.error('Unable to acquire lock:', err);
      return;
    }

    try {
      // 在这里执行同步逻辑，确保同步期间其他进程无法访问该文件
      syncFile(srcPath, dstPath);
    } finally {
      lockfile.unlock(lockPath, (unlockErr) =&gt; {
        if (unlockErr) {
          console.error('Error unlocking file:', unlockErr);
        }
      });
    }
  });
}
复制

<br>
版本控制和冲突检测：

<br>在同步文件之前，比较源文件和目标文件的最后修改时间或文件内容的哈希值，以确定是否真的有必要同步。如果有冲突（即目标文件已被修改），可以采取以下策略：

<br>提供用户选择合并策略，如自动合并、保留一方的最新版本或提示用户手动解决。
<br>在目标目录创建备份文件，然后再同步新的文件版本。
<br>记录冲突，并稍后处理。




<br>
原子操作：

<br>尽可能将文件操作设计成原子操作，例如，在目标目录创建临时文件，完成写入后再重命名替换原文件，确保文件内容完整且一致。


<br>
事务性同步：

<br>对于复杂的同步任务，可以模拟事务的概念，确保在同步过程中即使出现错误也能恢复到初始状态。


<br>
队列和序列化操作：

<br>使用队列（如前述示例）将同步操作序列化，这样可以避免多个并发的同步请求导致的混乱。


<br>在面对两个文件内容不一致的情况时，具体策略取决于你的应用需求。例如，你可能希望保留最近修改的版本，或者对冲突进行合并。无论哪种策略，都应该在同步逻辑中加入适当的冲突检测和处理机制。<br><br>在决定文件优先性时，可以比较两个文件的修改时间（mtime），并选择 mtime 较新的那个文件作为优先同步的对象。以下是一个简单的示例：<br>const fs = require('fs');

function compareFileTimes(filePath1, filePath2) {
  return new Promise((resolve, reject) =&gt; {
    fs.stat(filePath1, (err1, stats1) =&gt; {
      if (err1) {
        reject(err1);
        return;
      }

      fs.stat(filePath2, (err2, stats2) =&gt; {
        if (err2) {
          reject(err2);
          return;
        }

        // 比较两个文件的修改时间
        if (stats1.mtimeMs &gt; stats2.mtimeMs) {
          resolve(filePath1);
        } else if (stats1.mtimeMs &lt; stats2.mtimeMs) {
          resolve(filePath2);
        } else {
          // 若mtime相同，则可根据具体情况决定处理方式，如抛出错误、提示用户或选择其他依据
          reject(new Error('Both files have the same modification time.'));
        }
      });
    });
  });
}

async function syncBasedOnModTime(srcPath, dstPath) {
  try {
    const newerFilePath = await compareFileTimes(srcPath, dstPath);

    // 根据newerFilePath的值决定同步方向
    if (newerFilePath === srcPath) {
      // 同步srcPath到dstPath
      console.log('Syncing from source to destination because source is newer.');
      // 在这里实现具体的同步逻辑
    } else {
      // 同步dstPath到srcPath
      console.log('Syncing from destination to source because destination is newer.');
      // 在这里实现具体的同步逻辑
    }
  } catch (error) {
    console.error('Error comparing file times:', error);
  }
}

// 使用示例
syncBasedOnModTime('/path/to/source/file', '/path/to/destination/file');
复制<br>在实际使用时，记得结合文件锁和队列处理等机制，确保在并发环境下安全地执行同步操作。同时，应对 mtime 相同的情况作出合适处理，比如在无法确定优先级时，可能需要用户介入或采用其他判断依据。<br><br>使用 fswatch 监控文件和目录以及子目录的所有更改（包括创建、修改、删除和重命名），可以采用以下 bash shell 脚本示例。请注意，这里的脚本仅适用于 Unix-like 系统（如 macOS 或 Linux），因为在这些系统上 fswatch 能够有效运行。<br>#!/bin/bash

# 监控的根目录
MONITORED_DIR="/path/to/watch"

# fswatch命令行参数，监控所有类型的事件
EVENTS='--event Created --event Updated --event Removed --event Renamed'

# 处理文件系统事件的函数
process_event() {
  event="$1"
  file="$2"
  
  echo "Detected event: $event on file: $file"
  # 在这里添加处理文件变动的具体逻辑，例如复制、移动、记录日志等
  # ...
}

# 使用fswatch监控目录及其子目录
fswatch "$EVENTS" "$MONITORED_DIR/**/*" | while read -r line
do
  IFS=' ' read -ra EVENT &lt;&lt;&lt; "$line"
  event_type="${EVENT[0]}"
  file_path="${EVENT[@]:1}"
  
  # 去除fswatch打印的额外信息，只保留文件路径
  file_path=$(echo "$file_path" | sed 's/.*-&gt;\(.*\)/\1/')
  
  # 调用处理函数
  process_event "$event_type" "$file_path"
done
复制<br>这段脚本将会启动 fswatch 来监控指定目录及其子目录下的所有文件和目录事件，并在事件发生时调用 process_event 函数来处理这些事件。在实际使用时，请将 /path/to/watch 替换为你要监控的实际目录路径。<br>请注意，fswatch 的命令语法和选项可能随版本变化而有所不同，建议查阅最新的官方文档以获得正确的用法。此外，对于大型目录树或高频率的文件系统事件，可能需要优化处理逻辑以避免性能瓶颈或资源耗尽。]]></description><link>https://wxkj.asia/mynote/开发笔记/前端/js-通过fs.watch实现文件的双向同步.html</link><guid isPermaLink="false">开发笔记/前端/js 通过fs.watch实现文件的双向同步.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:php" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#php</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:js" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#js</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:前端" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#前端</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:加密" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#加密</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:解密" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#解密</a> 
 <br><a href="https://wxkj.asia/mynote?query=tag:php" class="tag" target="_blank" rel="noopener">#php</a> <a href="https://wxkj.asia/mynote?query=tag:js" class="tag" target="_blank" rel="noopener">#js</a> <a href="https://wxkj.asia/mynote?query=tag:前端" class="tag" target="_blank" rel="noopener">#前端</a> <a href="https://wxkj.asia/mynote?query=tag:加密" class="tag" target="_blank" rel="noopener">#加密</a> <a href="https://wxkj.asia/mynote?query=tag:解密" class="tag" target="_blank" rel="noopener">#解密</a><br>项目有个需求，需要对前端提交的密码进行加密传输，防止请求被拦截导致密码的泄露。<br>1、考虑到性能问题，不好太过的占用浏览器资源，我就直接采用了对称加密的方式（aes）来进行处理；<br>2、首先来看看前端加密的情况，我采用的是crypto-js来进行加密的，附上链接<a rel="noopener" class="external-link" href="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js" target="_blank">https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js</a><br>3、前端加密<br>// 需要加密的数据
let data = '123456';
// 我采用的是16位的key，为了方便我前端就把key转成UTF8
let key = CryptoJS.enc.Utf8.parse('GftZqNEoBVdB2kwx'); 

// iv采用的是16位的，同样为了方便转成UTF8
let iv = CryptoJS.enc.Utf8.parse('3zyJFPEzh5rUeUNi'); 

// 加密方式使用CBC，padding偏移量设置成Pkcs7，以便和后端对应解密
let encryptData = CryptoJS.AES.encrypt(data, key, {
                            mode: CryptoJS.mode.CBC,
                            iv: iv,
                            padding: CryptoJS.pad.Pkcs7
                        });
// 这样加密就完成啦，打印下加密后的数据
console.log(encryptData.toString());

复制<br>4、另附上前端解密<br>// 需要加密的数据
let encryptData = 'gb+0Jn9uhOmw21cDeTQRiQ==';

*// 我采用的是16位的key，为了方便我前端就把key转成UTF8
let key = CryptoJS.enc.Utf8.parse('GftZqNEoBVdB2kwx'); 

// iv采用的是16位的，同样为了方便转成UTF8
let iv = CryptoJS.enc.Utf8.parse('3zyJFPEzh5rUeUNi'); 

// 加密方式使用CBC，padding偏移量设置成Pkcs7，以便和后端对应解密
let encryptData = CryptoJS.AES.decrypt(encryptData, key, {
                            mode: CryptoJS.mode.CBC,
                            iv: iv,
                            padding: CryptoJS.pad.Pkcs7
                        });
// 这样解密就完成啦，打印下解密后的数据；记得讲解密会的数据也转成UTF8
console.log(encryptData.toString(CryptoJS.enc.Utf8));

复制<br>5、php服务端解密<br>function aesDecrypt($data) {
        // 密钥key要和前端一致，由于前端转成了UTF8的格式，这边就可以直接使用了
        $cryptKey = 'GftZqNEoBVdB2kwx';
// iv也是一样要和前端一致
        $iv = '3zyJFPEzh5rUeUNi';
// 然后使用openssl\_decrypt来进行解密
        $decrypt = openssl\_decrypt($data, 'AES-128-CBC', $cryptKey, 0, $iv);
        return $decrypt;
}    
复制<br>6、附上php服务端加密代码<br>function aesEncrypt($data) {
	$cryptKey = 'GftZqNEoBVdB2kwx';
	$iv = '3zyJFPEzh5rUeUNi';
	$encrypt = openssl\_encrypt($data, 'AES-128-CBC', $cryptKey, 0, $iv);
	return $encrypt; 
}
复制<br>至此完成了，对前端密码的加密传输，主要麻烦的地方在于前后端的语言不同，需要找对前后端加密方式的匹配，不然前端加密之后，后端会加密不出来。<br>声明：本站部分图片或文章内容来源于网络，版权归原作者所有，如有侵权，请与我联系删除。<br><br>文章来源: <a rel="noopener" class="external-link" href="https://www.cnblogs.com/wish123/p/17262633.html" target="_blank">https://www.cnblogs.com/wish123/p/17262633.html</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.html</link><guid isPermaLink="false">开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[web开发冷知识汇总]]></title><description><![CDATA[ 
 浏览器对input和textarea的最大长度限制各为524,288个字符。Get请求的url长度通常为2048个字符，但浏览器支持程度不一致。Post请求在http协议中没有限制，但浏览器和服务器通常有限制。]]></description><link>https://wxkj.asia/mynote/开发笔记/php/web开发冷知识汇总.html</link><guid isPermaLink="false">开发笔记/php/web开发冷知识汇总.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[JWT用户登录方案-前后端交互说明]]></title><description><![CDATA[ 
 1 前端请求登录接口时后端返回token给前端，前端存储到客户端2 前端每次请求接口时把token放到header中传给后端，后端校验token判断是否登录3 当token即将过期时请求接口（比如还剩10分钟即将过期时），此时后端会检验到token即将过期，会在header中加入token-will-expire=yes键值对]]></description><link>https://wxkj.asia/mynote/开发笔记/php/jwt用户登录方案-前后端交互说明.html</link><guid isPermaLink="false">开发笔记/php/JWT用户登录方案-前后端交互说明.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[IP Lookup in PHP]]></title><description><![CDATA[ 
 <br>A collection of PHP code snippets to get real time information (like location, currency, timezone etc.) for an IP address.<br>A collection of PHP code snippets to get real time information (like location, currency, timezone etc.) for an IP address.<br><br>Get the geolocation (geographic location) of an IP address with an API. The example below uses json as the output format. To switch to a different format, replace json in the URL path below with other supported formats like csv, xml, yaml &amp; jsonp.<br>$ip  = '8.8.8.8';
$loc = file_get_contents('https://ipapi.co/'.$ip.'/json/');
echo $loc;
复制<br>Output<br>{
    "ip": "8.8.8.8",
    "city": "Mountain View",
    "region": "California",
    "region_code": "CA",
    "country": "US",
    "country_name": "United States",
    "continent_code": "NA",
    "in_eu": false,
    "postal": "94035",
    "latitude": 37.386,
    "longitude": -122.0838,
    "timezone": "America/Los_Angeles",
    "utc_offset": "-0700",
    "country_calling_code": "+1",
    "currency": "USD",
    "languages": "en-US,es-US,haw,fr",
    "asn": "AS15169",
    "org": "Google LLC"
}
复制<br><br>If all you need is the city of an IP address, you can use the city endpoint as shown in the example below. The output is a text string with the city name.<br>echo file_get_contents('https://ipapi.co/50.50.50.50/city/');
复制<br>Output<br><br>Similarly, you can find the postal code (zip code) as shown below. The output is a text string indicating the postal code.<br>echo file_get_contents('https://ipapi.co/50.50.50.50/postal/');
复制<br>Output<br><br>To find the region name (state) or region code, you can use the following example.<br>$region = file_get_contents('https://ipapi.co/50.50.50.50/region/');
$region_code = file_get_contents('https://ipapi.co/50.50.50.50/region_code/');
echo $region;
echo $region_code;
复制<br>Output<br><br>$country_name = file_get_contents('https://ipapi.co/50.50.50.50/country_name/');
$country = file_get_contents('https://ipapi.co/50.50.50.50/country/');
echo $country_name;
echo $country;
复制<br>Output<br><br>$continent_code = file_get_contents('https://ipapi.co/50.50.50.50/continent_code/');
echo $continent_code;
复制<br>Output<br><br>$latitude = file_get_contents('https://ipapi.co/50.50.50.50/latitude/');
$longitude = file_get_contents('https://ipapi.co/50.50.50.50/longitude/');
$latlong = file_get_contents('https://ipapi.co/50.50.50.50/latlong/');
echo $latitude;
echo $longitude;
echo $latlong;
复制<br>Output<br>45.704500
-89.386600
45.704500,-89.386600
复制<br><br>$timezone = file_get_contents('https://ipapi.co/50.50.50.50/timezone/');
echo $timezone;
复制<br>Output<br><br>$utc_offset = file_get_contents('https://ipapi.co/50.50.50.50/utc_offset/');
echo $utc_offset;
复制<br>Output<br>// automatically adjusts with daylight saving time
-0500
复制<br><br>$country_calling_code = file_get_contents('https://ipapi.co/50.50.50.50/country_calling_code/');
echo $country_calling_code;
复制<br>Output<br><br>$currency = file_get_contents('https://ipapi.co/50.50.50.50/currency/');
echo $currency;
复制<br>Output<br><br>$languages = file_get_contents('https://ipapi.co/50.50.50.50/languages/');
echo $languages;
复制<br>Output<br><br>$in_eu = file_get_contents('https://ipapi.co/50.50.50.50/in_eu/');
echo $in_eu;
复制<br>Output<br><br>$asn = file_get_contents('https://ipapi.co/50.50.50.50/asn/');
echo $asn;
复制<br>Output<br>// ASN : autonomous system number
AS5650
复制<br><br>$org = file_get_contents('https://ipapi.co/50.50.50.50/org/');
echo $org;
复制<br>Output<br>Frontier Communications of America, Inc.
复制<br><br>$ip  = '8.8.8.8';
$loc = file_get_contents('https://ipapi.co/'.$ip.'/json/');
$obj = json_decode($loc);
echo $obj-&gt;city.", ".$obj-&gt;region.", ".$obj-&gt;country_name;
复制<br>Output<br>Mountain View, California, United States
复制<br><br>文章来源: <a rel="noopener" class="external-link" href="https://blog.ipapi.co/ip_lookup_php/" target="_blank">https://blog.ipapi.co/ip_lookup_php/</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/php/ip-lookup-in-php.html</link><guid isPermaLink="false">开发笔记/php/IP Lookup in PHP.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[使用Shell脚本实现FTP自动上传和下载文件]]></title><description><![CDATA[ 
 <br><br>FTP服务器：10.11.10.11<br>
FTP路径：Down<br>
本地路径： ./<br>
将文件从FTP下载到本地的脚本如下：<br><br>#从FTP上批量下载文件到本地
#!/bin/sh
ftp -v -n 10.11.10.11&lt;&lt;EOF
user ftpuser ftppwd
binary
cd Down
lcd ./
prompt
mget *
bye
EOF
echo "download from ftp successfully"
复制<br><br>#从FTP上下载单文件到本地
#!/bin/sh
ftp -v -n 10.11.10.11&lt;&lt;EOF
user ftpuser ftppwd
binary
cd Down
lcd ./
prompt
#get down.txt
get down.txt note.txt
bye
EOF
echo "download from ftp successfully"
复制<br><br>FTP服务器：10.11.10.11<br>
FTP路径：Up<br>
本地路径： ./<br>
将文件从本地传到FTP的脚本如下：<br><br>#从本地向FTP批量上传文档
#!/bin/sh
ftp -v -n 10.11.10.11&lt;&lt;EOF
user ftpuser ftppwd
binary
hash
cd Up
lcd ./
prompt
mput *
bye
#here document
EOF
echo "commit to ftp successfully"
复制<br><br>#从本地向FTP上传单个文档
#!/bin/sh
PUTFILE = up.txt
ftp -v -n 10.11.10.11&lt;&lt;EOF
user ftpuser ftppwd
binary
cd Up
lcd ./
prompt
put $PUTFILE
bye
#here document
EOF
echo "commit to ftp successfully"
复制<br><br><br>ftp -i -n 10.11.10.11 &lt;&lt; EOF
复制<br>&lt;&lt; 是使用即时文件重定向输入<br>
EOF是即时文件的标志它必须成对出现，以标识即时文件的开始和结尾。<br>
ftp常见的几个标志有：<br>
-d：使用调试模式，但必须编辑 /etc/syslog.conf 文件并添加以下中的一项：user.info FileName 或 user.debug FileName。<br>
-g：禁用文件名中的元字符拓展，即取消全局文件名。<br>
-i ：关闭多文件传输中的交互式提示。<br>
-n：防止在起始连接中的自动登录。否则， ftp 命令会搜索 $HOME/.netrc 登录项，该登录项描述了远程主机的登录和初始化过程。<br>
-v：显示远程服务器的全部响应，并提供数据传输的统计信息，即在程序运行时显示详细的处理信息。
<br><br>user ftpuser ftppwd
复制<br>ftpuser：登录FTP时的用户名<br>
ftppwd：登录FTP时的密码<br><br>binary
复制<br>FTP文件传输类型有： ascii、binary、ebcdic、image、local M 和 tenex。<br>
– ascii：将文件传输类型设置为网络 ASCII。此类型为缺省值，即默认使用ascii方式进行传输。<br>
– binary：将文件传输类型设置为二进制映像。需要使用binary方式传输的文件类型有ISO文件、可执行文件、压缩文件、图片等。此类型可能比 ASCII 传送更有效。<br>
– ebcdic：将文件传输类型设为 EBCDIC。<br>
– image：将文件传输类型设置为二进制映像。此类型可能比 ASCII 传送更有效。<br>
– local M：将文件传输类型设置为本地。M 参数定义每计算机字位的十进制数。此参数没有缺省值。<br>
– tenex：将文件传输类型设为 TENEX 机器需要的类型。
<br><br>hash
复制<br>当用get或put命令传送一个数据块时，让FTP显示一个#，这是看得见的确定数据在传输的信号，在用户不确信网络是否工作时有用。当传输很大的文件时，如果FTP已显示这种信息，表示传输正在进行。hash命令是一个布尔变量式的命令，用hash命令打开显示#开关，再用hash命令关闭显示。<br><br>分别在本地和FTP上进入对应文件夹下：<br>
到FTP上对应路径（这里表示进入Dwon文件夹下）：<br>cd ./Down
复制<br>到本地的对应路径（这里表示在当前文件夹下）：<br>lcd ./
复制<br><br>prompt
复制<br>使用mget或mput时，prompt命令让FTP在传输每个文件前进行提示，这样防止覆盖已有的文件。若发出prompt命令时已经启动了提示，FTP将把提示关掉，此时再传输所有的文件则不会有任何提问。<br><br><br>下载多个文件：<br>
格式：mget [remote-files]<br>
例如：获取远端所在文件夹下所有文件<br>mget *
#或
mget *.*
复制<br>注：mget . 每下载一个文件，都会有提示。如果要除掉提示，则在mget . 命令前先执行:prompt off。<br>下载单个文件：<br>
格式：get [remote-file] [local-file]<br>
例如：获取远端FTP上的a.txt文件<br>get a.txt
复制<br><br>上传多个文件：<br>
格式：mput local-files<br>
例如：将所在文件夹下所有文件上传到FTP上<br>mput *
复制<br>上传单个文件：<br>
格式：put local-file [remote-file]<br>
例如：将本地a.txt文件上传到远端FTP上<br>put a.txt
复制<br><br>bye
复制<br>结束文件传输会话并退出 ftp 命令，与quit命令相同。<br><br>... &lt;&lt; EOF
#execute shell
EOF
复制<br>EOF只是一个分界符标志，完全可以用abc, ! 等替换，也一样的功能，只是大家都习惯用EOF来表示。<br>
&lt;&lt;用法：当shell看到&lt;&lt;的时候，它就会知道下一个词是一个分界符。在该分界符以后的内容都被当作输入，直到shell又看到该分界符(位于单独的一行)。因此分界符可以是定义的任何字符串。<br><br>文章来源: <a rel="noopener" class="external-link" href="https://blog.csdn.net/u012842255/article/details/66969501" target="_blank">https://blog.csdn.net/u012842255/article/details/66969501</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/使用shell脚本实现ftp自动上传和下载文件.html</link><guid isPermaLink="false">开发笔记/linux/使用Shell脚本实现FTP自动上传和下载文件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？]]></title><description><![CDATA[ 
 <br>在终端中直接输入 gsed 能够正常执行，而在 crontab 脚本中需要使用全路径 /usr/local/bin/gsed 的原因是环境变量 PATH 的设置不同。<br>当我们在终端中运行命令时，操作系统会根据环境变量 $PATH 寻找可执行文件。通常情况下，用户的主 Shell（如 bash）初始化时会将多个目录添加到 PATH 中，包括 /usr/local/bin 这样的常用目录，因此你可以在不指定完整路径的情况下找到并执行 gsed。<br>然而，cron 守护进程运行 crontab 脚本时，其环境与用户登录 shell 的环境有所不同，它继承的 PATH 可能没有包含 /usr/local/bin 等非标准系统二进制目录。为了确保在 cron 任务中能正确找到和执行 gsed，你需要提供完整的绝对路径。<br>为了解决这个问题，有两种方法：<br>
<br>在 crontab 脚本中明确指定所有外部命令的全路径。
<br>在 crontab 文件的开头定义一个合适的 PATH 变量，使其包含执行所需的所有程序的目录：
<br>PATH=/usr/local/bin:/usr/bin:/bin
* * * * * command_to_run_with_gsed
复制<br>通过这种方式，在定义了正确的 PATH 后，你就可以在 cron 脚本内部像在终端里一样仅使用 gsed 命令了。不过，由于 cron 环境的差异性，推荐还是在 crontab 脚本中始终使用绝对路径以保证命令的稳定性和可移植性。]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.html</link><guid isPermaLink="false">开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[shell获取文件夹下所有目录路径，包括子目录]]></title><description><![CDATA[ 
 <br>在Shell中，要获取一个文件夹及其所有子目录的路径，你可以使用find命令配合 -type d 参数，这个参数用来查找类型为目录（directory）的项。下面是一个简单的例子：<br>Bash<br>
find /path/to/directory -type d<br>
这条命令会列出 /path/to/directory 下的所有子目录的相对路径。如果你想获取每个目录的完整（绝对）路径，可以在前面添加. 或者使用 pwd 命令结合 -exec 参数来实现：<br>Bash<br>
find /path/to/directory -type d -exec printf "%s/\n" {} \;<br>
或者<br>Bash<br>
find /path/to/directory -type d -exec realpath {} \; <br>
上面的命令中：<br>find 是查找命令。<br>
/path/to/directory 是你想要查找的目录路径。<br>
-type d 指定只查找目录。<br>
-exec 后面跟着命令，这里使用 printf "%s/\n" 或 realpath 来打印出每个找到的目录的绝对路径。<br>
printf "%s/\n" 会打印目录名并确保每个目录名后面都有一个斜杠（适用于大多数情况）。<br>
realpath 会给出目录的真实、绝对路径，尤其对于符号链接特别有用，它会解析出实际指向的目录。<br>
如果在没有realpath命令的情况下，可以组合使用pwd和dirname来达到类似效果：<br>Bash<br>
find /path/to/directory -type d -exec bash -c 'echo "$(pwd)/$1"' _ {} \;<br>
这会在每个找到的目录上下文中运行一个子 shell，打印出包含当前工作目录(pwd)与找到的目录名组合而成的绝对路径。其中_是一个占位符，{}会被替换为 find 找到的每个目录名。<br>如果需要跳过某些文件夹呢，比如隐藏文件夹和指定的文件夹，比如 media 文件夹?<br>如果你想在查找过程中跳过隐藏目录（即名称以. 开头的目录）和指定的文件夹（如 media），可以使用-not -path 条件进行排除。下面是一个示例：<br>Bash<br>Find /path/to/directory \( \
    -not -path '*/\.*' -and \
    -not -path '*/media*' \
\) -type d -exec printf "%s/\n" {} \;
复制<br>或者，如果你只想排除隐藏目录<br>
Find /path/to/directory -not -path '*/\.*' -type d -exec printf "%s/\n" {} \;<br>
这里：<br>-not -path '/.' 表示排除任何路径中包含以. 开头的目录（隐藏目录）。<br>
-not -path '/media' 表示排除任何路径中包含 media 的目录。<br>
两者之间使用-and 连接，表示同时满足这两个条件的才会被筛选出来。<br>然后，-exec printf "%s/\n" {} ; 或 -exec realpath {} ; 依旧用于输出目录的完整路径。<br>请注意，-path 匹配的是整个路径，所以 media*会匹配任何包含 media 的路径部分，包括子目录。如果你只想排除名为 media 的顶级目录，可以改为-not -path '/path/to/directory/media'（根据实际情况替换/path/to/directory）。]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.html</link><guid isPermaLink="false">开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[Shell之判断程序是否运行]]></title><description><![CDATA[ 
 <br>#!/bin/bash

#这个第一种判定方式不准确
#ps -ef |grep nginx 查看所有nginx名称相关的服务
#grep -v "grep" 去掉grep查询的那一条
#wc -l 计数
COUNT=$(ps -ef |grep nginx |grep -v "grep" |wc -l)
echo "ps -ef |方法: "$COUNT


#第二种，准确判断pid的信息，
#-C 表示的是nginx完整命令，不带匹配的操作
#--no-header 表示不要表头的数据
#wc -l 表示计数
COUNT=$(ps -C nginx --no-header |wc -l)
echo "ps -c|方法:"$COUNT

#shell 关键字都需要有空格
if [ $COUNT -eq 0 ]
then
        echo no run
else
        echo is run
fi
echo $COUNT

复制<br>详细：<a data-tooltip-position="top" aria-label="https://blog.csdn.net/yelllowcong/article/details/78424329" rel="noopener" class="external-link" href="https://blog.csdn.net/yelllowcong/article/details/78424329" target="_blank">Fetching Title#suot</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/shell之判断程序是否运行.html</link><guid isPermaLink="false">开发笔记/linux/Shell之判断程序是否运行.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[shell 下 urlencode和urldecode 编码解码的方法]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:echo" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#echo</a> 
 <br>UrlEncode:<br>echo '你好中国' | tr -d '\n' | xxd -plain | sed 's/\(..\)/%\1/g'<br>
<a href="https://wxkj.asia/mynote?query=tag:echo" class="tag" target="_blank" rel="noopener">#echo</a> '你好中国' |tr -d '\n' |od -An -tx1|tr ' ' %<br>输出：%e4%bd%a0%e5%a5%bd%e4%b8%ad%e5%9b%bd<br>对输入数据进行十六进制的转换，并在每个转换结果前面加上%(一般urlencode会在到后台服务器的时候，自动解码)<br>UrlDecode:<br>printf $(echo -n "%e4%bd%a0%e5%a5%bd%e4%b8%ad%e5%9b%bd" | sed 's/\\/\\\\/g;s/\(%\)\([0-9a-fA-F][0-9a-fA-F]\)/\\x\2/g')"\n"<br>输出：你好中国<br><br>文章来源: <a rel="noopener" class="external-link" href="https://www.cnblogs.com/fnlingnzb-learner/p/13064885.html" target="_blank">https://www.cnblogs.com/fnlingnzb-learner/p/13064885.html</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/shell-下-urlencode和urldecode-编码解码的方法.html</link><guid isPermaLink="false">开发笔记/linux/shell 下 urlencode和urldecode 编码解码的方法.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[shell if语句中的并列 - 诗意的栖居 - ITeye博客]]></title><description><![CDATA[ 
 <br><br>

格式如下，在比较时，数字和字符串用不同的比较符号  1.如果a&gt;b且a&lt;c  &nbsp;&nbsp; if (( a &gt; b )) &amp;&amp; (( a &lt; c )) &nbsp;  &nbsp;&nbsp; 或者  &nbsp;&nbsp; if <a data-href="$a > $b" href="https://wxkj.asia/mynote/$a > $b" class="internal-link" target="_self" rel="noopener">$a &gt; $b</a> &amp;&amp; <a data-href="$a < $c" href="https://wxkj.asia/mynote/$a < $c" class="internal-link" target="_self" rel="noopener">$a &lt; $c</a>  &nbsp;&nbsp;&nbsp; 或者 &nbsp;&nbsp;&nbsp;  &nbsp;&nbsp;&nbsp;&nbsp; if [ $a -gt $b -a $a -lt $c ]  ...
<br><br>格式如下，在比较时，数字和字符串用不同的比较符号<br>1.如果a&gt;b且a&lt;c<br>&nbsp;&nbsp; if (( a &gt; b )) &amp;&amp; (( a &lt; c ))<br>&nbsp; &nbsp;&nbsp; 或者<br>&nbsp;&nbsp; if [[ $a &gt; $b ]] &amp;&amp; [[ $a &lt; $c ]]<br>&nbsp;&nbsp;&nbsp; 或者<br>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; if [ $a -gt $b -a $a -lt $c ]<br>2.如果a&gt;b或a&lt;c<br>if (( a &gt; b )) || (( a &lt; c ))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 或者<br>
if [[ $a &gt; $b ]] || [[ $a &lt; $c ]]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 或者<br>
if [ $a -gt $b -o $a -lt $c ]<br>3. -o = or , -a = and , 但我一向只用 || 或者 &amp;&amp;<br>4."||"和"&amp;&amp;"在SHELL里可以用吗?也就是第一个写成if [ a&gt;b &amp;&amp; a&lt;c ]也可以吗?<br>&nbsp; 可用, 但是要两个独立的 [ ] , [[ ]] 或 (( ))&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 看 1<br>5 -ne 比较数字 (numberic) ; != 比较字符 (string), 但后者拿来<br>
比较数字也可,只是不是标准用法<br>
-lt 是等同 &lt; , 但 &lt; 只能在 shell 的数值操作符 (( )) 或<br>
者 逻缉操作符 [[ ]] 才可使用, -lt , -eq , -gt , -ge<br>
-le , 这些是 test , 就是 [ ] 这个内建命令使用的条件操<br>
作符, 数字用, = , != 字符用, == 这个该是 [[ ]] 用的,<br>
可用来比对正规表示式, 但用在 [ ] 也可,只是不太正统用法<br>分享到： “https://www.iteye.com/images/sina.jpg” could not be found. “https://www.iteye.com/images/tec.jpg” could not be found.<br>
<br>2011-07-21 17:38
<br>浏览 29330
<br><a data-tooltip-position="top" aria-label="https://www.iteye.com/blog/fyan-1130034#comments" rel="noopener" class="external-link" href="https://www.iteye.com/blog/fyan-1130034#comments" target="_blank">评论(1)</a>
<br>分类:<a data-tooltip-position="top" aria-label="https://www.iteye.com/blogs/category/language" rel="noopener" class="external-link" href="https://www.iteye.com/blogs/category/language" target="_blank">编程语言</a>
<br><a data-tooltip-position="top" aria-label="https://www.iteye.com/wiki/blog/1130034" rel="noopener" class="external-link" href="https://www.iteye.com/wiki/blog/1130034" target="_blank">查看更多</a>
]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/shell-if语句中的并列-诗意的栖居-iteye博客.html</link><guid isPermaLink="false">开发笔记/linux/shell if语句中的并列 - 诗意的栖居 - ITeye博客.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[rsync 用法教程]]></title><description><![CDATA[ 
 <br><br>rsync 是一个常用的 Linux 应用程序，用于文件同步。<br>它可以在本地计算机与远程计算机之间，或者两个本地目录之间同步文件（但不支持两台远程计算机之间的同步）。它也可以当作文件复制工具，替代cp和mv命令。<br><img src="https://www.wangbase.com/blogimg/asset/202008/bg2020082602.jpg" referrerpolicy="no-referrer"><br>它名称里面的r指的是 remote，rsync 其实就是"远程同步"（remote sync）的意思。与其他文件传输工具（如 FTP 或 scp）不同，rsync 的最大特点是会检查发送方和接收方已有的文件，仅传输有变动的部分（默认规则是文件大小或修改时间有变动）。<br><br>如果本机或者远程计算机没有安装 rsync，可以用下面的命令安装。<br>

# Debian
$ sudo apt-get install rsync

# Red Hat
$ sudo yum install rsync

# Arch Linux
$ sudo pacman -S rsync
复制
<br>注意，传输的双方都必须安装 rsync。<br><br><br>本机使用 rsync 命令时，可以作为cp和mv命令的替代方法，将源目录同步到目标目录。<br>

$ rsync -r source destination
复制
<br>上面命令中，-r表示递归，即包含子目录。注意，-r是必须的，否则 rsync 运行不会成功。source目录表示源目录，destination表示目标目录。<br>如果有多个文件或目录需要同步，可以写成下面这样。<br>

$ rsync -r source1 source2 destination
复制
<br>上面命令中，source1、source2都会被同步到destination目录。<br><br>-a参数可以替代-r，除了可以递归同步以外，还可以同步元信息（比如修改时间、权限等）。由于 rsync 默认使用文件大小和修改时间决定文件是否需要更新，所以-a比-r更有用。下面的用法才是常见的写法。<br>

$ rsync -a source destination
复制
<br>目标目录destination如果不存在，rsync 会自动创建。执行上面的命令后，源目录source被完整地复制到了目标目录destination下面，即形成了destination/source的目录结构。<br>如果只想同步源目录source里面的内容到目标目录destination，则需要在源目录后面加上斜杠。<br>

$ rsync -a source/ destination
复制
<br>上面命令执行后，source目录里面的内容，就都被复制到了destination目录里面，并不会在destination下面创建一个source子目录。<br><br>如果不确定 rsync 执行后会产生什么结果，可以先用-n或--dry-run参数模拟执行的结果。<br>

$ rsync -anv source/ destination
复制
<br>上面命令中，-n参数模拟命令执行的结果，并不真的执行命令。-v参数则是将结果输出到终端，这样就可以看到哪些内容会被同步。<br><br>默认情况下，rsync 只确保源目录的所有内容（明确排除的文件除外）都复制到目标目录。它不会使两个目录保持相同，并且不会删除文件。如果要使得目标目录成为源目录的镜像副本，则必须使用--delete参数，这将删除只存在于目标目录、不存在于源目录的文件。<br>

$ rsync -av --delete source/ destination
复制
<br>上面命令中，--delete参数会使得destination成为source的一个镜像。<br><br><br>有时，我们希望同步时排除某些文件或目录，这时可以用--exclude参数指定排除模式。<br>

$ rsync -av --exclude='*.txt' source/ destination
# 或者
$ rsync -av --exclude '*.txt' source/ destination
复制
<br>上面命令排除了所有 TXT 文件。<br>注意，rsync 会同步以"点"开头的隐藏文件，如果要排除隐藏文件，可以这样写--exclude=".*"。<br>如果要排除某个目录里面的所有文件，但不希望排除目录本身，可以写成下面这样。<br>

$ rsync -av --exclude 'dir1/*' source/ destination
复制
<br>多个排除模式，可以用多个--exclude参数。<br>

$ rsync -av --exclude 'file1.txt' --exclude 'dir1/*' source/ destination
复制
<br>多个排除模式也可以利用 Bash 的大扩号的扩展功能，只用一个--exclude参数。<br>

$ rsync -av --exclude={'file1.txt','dir1/*'} source/ destination
复制
<br>如果排除模式很多，可以将它们写入一个文件，每个模式一行，然后用--exclude-from参数指定这个文件。<br>

$ rsync -av --exclude-from='exclude-file.txt' source/ destination
复制
<br><br>--include参数用来指定必须同步的文件模式，往往与--exclude结合使用。<br>

$ rsync -av --include="*.txt" --exclude='*' source/ destination
复制
<br>上面命令指定同步时，排除所有文件，但是会包括 TXT 文件。<br><br><br>rsync 除了支持本地两个目录之间的同步，也支持远程同步。它可以将本地内容，同步到远程服务器。<br>

$ rsync -av source/ username@remote_host:destination
复制
<br>也可以将远程内容同步到本地。<br>

$ rsync -av username@remote_host:source/ destination
复制
<br>rsync 默认使用 SSH 进行远程登录和数据传输。<br>由于早期 rsync 不使用 SSH 协议，需要用-e参数指定协议，后来才改的。所以，下面-e ssh可以省略。<br>

$ rsync -av -e ssh source/ user@remote_host:/destination
复制
<br>但是，如果 ssh 命令有附加的参数，则必须使用-e参数指定所要执行的 SSH 命令。<br>

$ rsync -av -e 'ssh -p 2234' source/ user@remote_host:/destination
复制
<br>上面命令中，-e参数指定 SSH 使用2234端口。<br><br>除了使用 SSH，如果另一台服务器安装并运行了 rsync 守护程序，则也可以用rsync://协议（默认端口873）进行传输。具体写法是服务器与目标目录之间使用双冒号分隔::。<br>

$ rsync -av source/ 192.168.122.32::module/destination
复制
<br>注意，上面地址中的module并不是实际路径名，而是 rsync 守护程序指定的一个资源名，由管理员分配。<br>如果想知道 rsync 守护程序分配的所有 module 列表，可以执行下面命令。<br>

$ rsync rsync://192.168.122.32
复制
<br>rsync 协议除了使用双冒号，也可以直接用rsync://协议指定地址。<br>

$ rsync -av source/ rsync://192.168.122.32/module/destination
复制
<br><br>rsync 的最大特点就是它可以完成增量备份，也就是默认只复制有变动的文件。<br>除了源目录与目标目录直接比较，rsync 还支持使用基准目录，即将源目录与基准目录之间变动的部分，同步到目标目录。<br>具体做法是，第一次同步是全量备份，所有文件在基准目录里面同步一份。以后每一次同步都是增量备份，只同步源目录与基准目录之间有变动的部分，将这部分保存在一个新的目标目录。这个新的目标目录之中，也是包含所有文件，但实际上，只有那些变动过的文件是存在于该目录，其他没有变动的文件都是指向基准目录文件的硬链接。<br>--link-dest参数用来指定同步时的基准目录。<br>

$ rsync -a --delete --link-dest /compare/path /source/path /target/path
复制
<br>上面命令中，--link-dest参数指定基准目录/compare/path，然后源目录/source/path跟基准目录进行比较，找出变动的文件，将它们拷贝到目标目录/target/path。那些没变动的文件则会生成硬链接。这个命令的第一次备份时是全量备份，后面就都是增量备份了。<br>下面是一个脚本示例，备份用户的主目录。<br>

#!/bin/bash

# A script to perform incremental backups using rsync

set -o errexit
set -o nounset
set -o pipefail

readonly SOURCE_DIR="${HOME}"
readonly BACKUP_DIR="/mnt/data/backups"
readonly DATETIME="$(date '+%Y-%m-%d_%H:%M:%S')"
readonly BACKUP_PATH="${BACKUP_DIR}/${DATETIME}"
readonly LATEST_LINK="${BACKUP_DIR}/latest"

mkdir -p "${BACKUP_DIR}"

rsync -av --delete \
  "${SOURCE_DIR}/" \
  --link-dest "${LATEST_LINK}" \
  --exclude=".cache" \
  "${BACKUP_PATH}"

rm -rf "${LATEST_LINK}"
ln -s "${BACKUP_PATH}" "${LATEST_LINK}"
复制
<br>上面脚本中，每一次同步都会生成一个新目录${BACKUP_DIR}/${DATETIME}，并将软链接${BACKUP_DIR}/latest指向这个目录。下一次备份时，就将${BACKUP_DIR}/latest作为基准目录，生成新的备份目录。最后，再将软链接${BACKUP_DIR}/latest指向新的备份目录。<br><br>-a、--archive参数表示存档模式，保存所有的元数据，比如修改时间（modification time）、权限、所有者等，并且软链接也会同步过去。<br>--append参数指定文件接着上次中断的地方，继续传输。<br>--append-verify参数跟--append参数类似，但会对传输完成后的文件进行一次校验。如果校验失败，将重新发送整个文件。<br>-b、--backup参数指定在删除或更新目标目录已经存在的文件时，将该文件更名后进行备份，默认行为是删除。更名规则是添加由--suffix参数指定的文件后缀名，默认是~。<br>--backup-dir参数指定文件备份时存放的目录，比如--backup-dir=/path/to/backups。<br>--bwlimit参数指定带宽限制，默认单位是 KB/s，比如--bwlimit=100。<br>-c、--checksum参数改变rsync的校验方式。默认情况下，rsync 只检查文件的大小和最后修改日期是否发生变化，如果发生变化，就重新传输；使用这个参数以后，则通过判断文件内容的校验和，决定是否重新传输。<br>--delete参数删除只存在于目标目录、不存在于源目标的文件，即保证目标目录是源目标的镜像。<br>-e参数指定使用 SSH 协议传输数据。<br>--exclude参数指定排除不进行同步的文件，比如--exclude="*.iso"。<br>--exclude-from参数指定一个本地文件，里面是需要排除的文件模式，每个模式一行。<br>--existing、--ignore-non-existing参数表示不同步目标目录中不存在的文件和目录。<br>-h参数表示以人类可读的格式输出。<br>-h、--help参数返回帮助信息。<br>-i参数表示输出源目录与目标目录之间文件差异的详细情况。<br>--ignore-existing参数表示只要该文件在目标目录中已经存在，就跳过去，不再同步这些文件。<br>--include参数指定同步时要包括的文件，一般与--exclude结合使用。<br>--link-dest参数指定增量备份的基准目录。<br>-m参数指定不同步空目录。<br>--max-size参数设置传输的最大文件的大小限制，比如不超过200KB（--max-size='200k'）。<br>--min-size参数设置传输的最小文件的大小限制，比如不小于10KB（--min-size=10k）。<br>-n参数或--dry-run参数模拟将要执行的操作，而并不真的执行。配合-v参数使用，可以看到哪些内容会被同步过去。<br>-P参数是--progress和--partial这两个参数的结合。<br>--partial参数允许恢复中断的传输。不使用该参数时，rsync会删除传输到一半被打断的文件；使用该参数后，传输到一半的文件也会同步到目标目录，下次同步时再恢复中断的传输。一般需要与--append或--append-verify配合使用。<br>--partial-dir参数指定将传输到一半的文件保存到一个临时目录，比如--partial-dir=.rsync-partial。一般需要与--append或--append-verify配合使用。<br>--progress参数表示显示进展。<br>-r参数表示递归，即包含子目录。<br>--remove-source-files参数表示传输成功后，删除发送方的文件。<br>--size-only参数表示只同步大小有变化的文件，不考虑文件修改时间的差异。<br>--suffix参数指定文件名备份时，对文件名添加的后缀，默认是~。<br>-u、--update参数表示同步时跳过目标目录中修改时间更新的文件，即不同步这些有更新的时间戳的文件。<br>-v参数表示输出细节。-vv表示输出更详细的信息，-vvv表示输出最详细的信息。<br>--version参数返回 rsync 的版本。<br>-z参数指定同步时压缩数据。<br><br>
<br><a data-tooltip-position="top" aria-label="https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps" rel="noopener" class="external-link" href="https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps" target="_blank">How To Use Rsync to Sync Local and Remote Directories on a VPS</a>, Justin Ellingwood
<br><a data-tooltip-position="top" aria-label="https://www.howtoforge.com/mirroring_with_rsync" rel="noopener" class="external-link" href="https://www.howtoforge.com/mirroring_with_rsync" target="_blank">Mirror Your Web Site With rsync</a>, Falko Timme
<br><a data-tooltip-position="top" aria-label="https://linuxconfig.org/examples-on-how-to-use-rsync-for-local-and-remote-data-backups-and-synchonization" rel="noopener" class="external-link" href="https://linuxconfig.org/examples-on-how-to-use-rsync-for-local-and-remote-data-backups-and-synchonization" target="_blank">Examples on how to use Rsync</a>, Egidio Docile
<br><a data-tooltip-position="top" aria-label="https://linuxconfig.org/how-to-create-incremental-backups-using-rsync-on-linux" rel="noopener" class="external-link" href="https://linuxconfig.org/how-to-create-incremental-backups-using-rsync-on-linux" target="_blank">How to create incremental backups using rsync on Linux</a>, Egidio Docile
<br>（完）<br><br>文章来源: <a rel="noopener" class="external-link" href="https://www.ruanyifeng.com/blog/2020/08/rsync.html" target="_blank">https://www.ruanyifeng.com/blog/2020/08/rsync.html</a><br>其他教程：<a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/103916857" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/103916857" target="_blank">rsync + inotify 实现文件实时双向自动同步 - 知乎</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/rsync-用法教程.html</link><guid isPermaLink="false">开发笔记/linux/rsync 用法教程.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate><enclosure url="https://www.wangbase.com/blogimg/asset/202008/bg2020082602.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://www.wangbase.com/blogimg/asset/202008/bg2020082602.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[rsync + inotify 实现文件实时双向自动同步]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/103916857" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/103916857" target="_blank">zhuanlan.zhihu.com</a>
<br>技术博客： <a rel="noopener" class="external-link" href="https://github.com/yongxinz/tech-blog" target="_blank">https://github.com/yongxinz/tech-blog</a><br>同时，也欢迎关注我的微信公众号 AlwaysBeta，更多精彩内容等你来。  <br><a rel="noopener" class="external-link" href="http://weixin.qq.com/r/jDgRCcrEDZdyrY5q922e" target="_blank">http://weixin.qq.com/r/jDgRCcrEDZdyrY5q922e</a> (二维码自动识别)<br><br>随着应用系统规模的不断扩大，对数据的安全性和可靠性也提出更好的要求，rsync 在高端业务系统中也逐渐暴露出了很多不足。<br>首先，rsync 在同步数据时，需要扫描所有文件后进行比对，进行差量传输。如果文件数量达到了百万甚至千万量级，扫描所有文件将是非常耗时的，并且正在发生变化的往往是其中很少的一部分，这是非常低效的方式。<br>其次，rsync 不能实时的去监测、同步数据，虽然它可以通过 linux 守护进程的方式进行触发同步，但是两次触发动作一定会有时间差，这样就导致了服务端和客户端数据可能出现不一致，无法在应用故障时完全的恢复数据。<br>基于以上两种情况，可以使用 rsync+inotify 的组合来解决，可以实现数据的实时同步。<br>inotify 是一种强大的、细粒度的、异步的文件系统事件控制机制。linux 内核从 2.6.13 起，加入了 inotify 支持。通过 inotify 可以监控文件系统中添加、删除、修改、移动等各种事件，利用这个内核接口，第三方软件就可以监控文件系统下文件的各种变化情况，而 inotify-tools 正是实施监控的软件。在使用 rsync 首次全量同步后，结合 inotify 对源目录进行实时监控，只要有文件变动或新文件产生，就会立刻同步到目标目录下，非常高效实用。<br><br><br>yum -y install rsync


复制<br>源码方式安装这里不介绍了。<br><br>-v :展示详细的同步信息
-a :归档模式，相当于 -rlptgoD
-r :递归目录
-l :同步软连接文件
-p :保留权限
-t :将源文件的"modify time"同步到目标机器
-g :保持文件属组
-o :保持文件属主
-D :和--devices --specials一样，保持设备文件和特殊文件
-z :发送数据前，先压缩再传输
-H :保持硬链接
-n :进行试运行，不作任何更改
-P same as --partial --progress
    --partial :支持断点续传
    --progress :展示传输的进度
--delete :如果源文件消失，目标文件也会被删除
--delete-excluded :指定要在目的端删除的文件
--delete-after :默认情况下，rsync是先清理目的端的文件再开始数据同步；如果使用此选项，则rsync会先进行数据同步，都完成后再删除那些需要清理的文件。
--exclude=PATTERN :排除匹配PATTERN的文件
--exclude-from=FILE :如果要排除的文件很多，可以统一写在某一文件中
-e ssh :使用SSH加密隧道传输


复制<br><br>
<br>服务器 A： 192.168.0.1
<br>服务器 B： 192.168.0.2
<br>这里有两台 linux 服务器，我们可以先假定 A 作为服务端，B 作为客户端。<br>1、服务端配置：<br>修改服务端的配置文件：/etc/rsyncd.conf，内容如下：<br># rsync 守护进程的用户
uid = www
# 运行 rsync 守护进程的组
gid = www
# 允许 chroot，提升安全性，客户端连接模块，首先 chroot 到模块 path 参数指定的目录下，chroot 为 yes 时必须使用 root 权限，且不能备份 path 路径外的链接文件
use chroot = yes
# 只读
read only = no
# 只写
write only = no
# 设定白名单，可以指定IP段（172.18.50.1/255.255.255.0）,各个Ip段用空格分开
hosts allow = 192.168.0.2
hosts deny = *
# 允许的客户端最大连接数
max connections = 4
# 欢迎文件的路径，非必须
motd file = /etc/rsyncd.motd
# pid文件路径
pid file = /var/run/rsyncd.pid
# 记录传输文件日志
transfer logging = yes
# 日志文件格式
log format = %t %a %m %f %b
# 指定日志文件
log file = /var/log/rsync.log
# 剔除某些文件或目录，不同步
exclude = lost+found/
# 设置超时时间
timeout = 900
ignore nonreadable = yes
# 设置不需要压缩的文件
dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2

# 模块，可以配置多个
[sync_file]
# 模块的根目录，同步目录，要注意权限
path = /home/test
# 是否允许列出模块内容
list = no
# 忽略错误
ignore errors
# 添加注释
comment = ftp export area
# 模块验证的用户名称，可使用空格或者逗号隔开多个用户名
auth users = sync
# 模块验证密码文件 可放在全局配置里
secrets file = /etc/rsyncd.secrets


复制<br>编辑 /etc/rsyncd.secrets 文件，内容如下：<br>### rsyncd.secrets 文件的配置
# 用户名:密码
sync:123456


复制<br>编辑 /etc/rsyncd.motd 文件，内容如下：<br>### rsyncd.motd  文件配置
++++++++++++++++++
sync zhang : rsync start
++++++++++++++++++


复制<br>设置文件权限，这一步不能少：<br>chmod 600 /etc/rsyncd.secrets


复制<br>启动：<br>rsync --daemon --config=/etc/rsyncd.conf


复制<br>加入开机自启：<br>echo 'rsync --daemon --config=/etc/rsyncd.conf' &gt;&gt; /etc/rc.d/rc.local


复制<br>2、客户端配置：<br>创建密码文件 /etc/rsyncd.pass，直接写密码即可，内容如下：<br>### rsyncd.pass 文件的配置
123456


复制<br>设置文件权限，这一步不能少：<br>chmod 600 /etc/rsyncd.pass


复制<br>现在就可以在客户端执行命令来同步文件了。<br>从 服务端 =&gt; 客户端 同步数据：<br>rsync -avzP --delete sync@192.168.0.1::sync_file /home/test --password-file=/etc/rsyncd.pass


复制<br>从 客户端 =&gt; 服务端 同步数据：<br>rsync -avzP --delete /home/test sync@192.168.0.1::sync_file --password-file=/etc/rsyncd.pass


复制<br>到目前为止，rsync 就配置完成了，如果想实现双向同步，只要将 B 配置成服务端，A 配置成客户端，分别启对应的服务即可。<br>接下来介绍 inotify 监控文件变动，来实现实时同步。<br><br><br>yum install -y inotify-tools


复制<br><br>1、inotifywait 参数说明：<br>-m,–monitor：始终保持事件监听状态   # 重要参数
-r,–recursive：递归查询目录     # 重要参数
-q,–quiet：只打印监控事件的信息     # 重要参数
–excludei：排除文件或目录时，不区分大小写
-t,–timeout：超时时间
–timefmt：指定时间输出格式  # 重要参数
–format：指定时间输出格式       # 重要参数
-e,–event：后面指定删、增、改等事件 # 重要参数


复制<br>2、inotifywait events 事件说明：<br>access：读取文件或目录内容
modify：修改文件或目录内容
attrib：文件或目录的属性改变
close_write：修改真实文件内容   # 重要参数
close_nowrite：文件或目录关闭，在只读模式打开之后关闭的
close：文件或目录关闭，不管读或是写模式
open：文件或目录被打开
moved_to：文件或目录移动到
moved_from：文件或目录从移动
move：移动文件或目录移动到监视目录  # 重要参数
create：在监视目录下创建文件或目录  # 重要参数
delete：删除监视目录下的文件或目录  # 重要参数
delete_self：文件或目录被删除，目录本身被删除
unmount：卸载文件系统


复制<br><br>1、创建事件<br>inotifywait -mrq  /data --timefmt "%d-%m-%y %H:%M" --format "%T %w%f 事件信息: %e" -e create


复制<br>2、删除事件<br>inotifywait -mrq  /data --timefmt "%d-%m-%y %H:%M" --format "%T %w%f 事件信息: %e" -e delete


复制<br>3、修改事件<br>inotifywait -mrq  /data --timefmt "%d-%m-%y %H:%M" --format "%T %w%f 事件信息: %e" -e close_write


复制<br><br>#!/bin/bash

Path=/home/test
Server=192.168.0.2
User=sync
module=sync_file

monitor() {
  /usr/bin/inotifywait -mrq --format '%w%f' -e create,close_write,delete $1 | while read line; do
    if [ -f $line ]; then
      rsync -avz $line --delete ${User}@${Server}::${module} --password-file=/etc/rsyncd.pass
    else
      cd $1 &amp;&amp;
        rsync -avz ./ --delete ${User}@${Server}::${module} --password-file=/etc/rsyncd.pass
    fi
  done
}

monitor $Path;


复制<br>直接将脚本在后台启动，就可以监控文件的变化了，从而实现服务器之间的文件同步。<br>那么，如果想同步多个目录该怎么办呢？我能想到的办法就是写多个 shell 脚本，每个脚本负责一个目录，但总感觉这种方法不是很好，大家有何高见？<br>参考文章：<br><a rel="noopener" class="external-link" href="https://www.jianshu.com/p/bd3ae9d8069c" target="_blank">https://www.jianshu.com/p/bd3ae9d8069c</a><br>
<a rel="noopener" class="external-link" href="http://www.mengzhaoxu.xyz/2018/12/24/rsync%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/" target="_blank">http://www.mengzhaoxu.xyz/2018/12/24/rsync%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</a><br>
<a rel="noopener" class="external-link" href="https://www.cnblogs.com/bigberg/p/7886486.html" target="_blank">https://www.cnblogs.com/bigberg/p/7886486.html</a><br>
<a rel="noopener" class="external-link" href="https://cloud.tencent.com/developer/article/1008061" target="_blank">https://cloud.tencent.com/developer/article/1008061</a><br>
<a rel="noopener" class="external-link" href="https://blog.csdn.net/chenghuikai/article/details/50668805" target="_blank">https://blog.csdn.net/chenghuikai/article/details/50668805</a><br>
<a rel="noopener" class="external-link" href="https://www.devopssec.cn/2018/08/23/%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7-RSYNC%E7%BB%93%E5%90%88INOTIFY-TOOLS%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/" target="_blank">https://www.devopssec.cn/2018/08/23/%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E5%B7%A5%E5%85%B7-RSYNC%E7%BB%93%E5%90%88INOTIFY-TOOLS%E5%AE%9E%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%AE%9E%E6%97%B6%E5%90%8C%E6%AD%A5/</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/rsync-+-inotify-实现文件实时双向自动同步.html</link><guid isPermaLink="false">开发笔记/linux/rsync + inotify 实现文件实时双向自动同步.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[Linux中如何锁定文件？flock命令一定要了解！]]></title><description><![CDATA[ 
 <br><br>【摘要】 在Linux操作系统中，flock是一个用于文件锁定的命令。文件锁定是一种机制，用于在多任务和多用户环境中管理对共享资源（如文件）的访问。flock允许你在代码中设置锁，以确保在任何给定时刻只有一个进程可以访问被锁定的文件。 flock的基本语法和选项flock [选项] 文件名 命令常用选项-c, --command：指定在锁定时执行的命令。-n, --nonblock：以非阻塞模式运行，...<br>在Linux操作系统中，flock是一个用于文件锁定的命令。文件锁定是一种机制，用于在多任务和多用户环境中管理对共享资源（如文件）的访问。flock允许你在代码中设置锁，以确保在任何给定时刻只有一个进程可以访问被锁定的文件。<br><img src="https://img-wljslmz-1259086031.cos.ap-nanjing.myqcloud.com/picgo/202312202337373.png" referrerpolicy="no-referrer"><br><br>flock [选项] 文件名 命令
复制<br>常用选项<br>
<br>-c, --command：指定在锁定时执行的命令。
<br>-n, --nonblock：以非阻塞模式运行，如果无法锁定文件，则立即退出。
<br>-u, --unlock：解锁指定的文件。
<br><br>在理解flock命令之前，我们需要了解文件锁定的基本概念。文件锁定是一种同步机制，用于确保在任何给定时刻只有一个进程可以访问共享文件。这是在多任务环境中防止资源冲突和数据不一致的重要手段。<br>在一个多任务的环境中，同时访问共享资源可能导致数据不一致和竞态条件的问题。flock提供了一种简单而强大的方式来管理这种共享资源的访问，避免潜在的问题。使用flock可以确保在关键部分的代码块中只有一个进程可以执行，从而提高系统的稳定性和一致性。<br><br>在大多数Linux发行版中，flock命令通常是预装的，无需额外安装。你可以通过以下命令检查flock的版本：<br>flock --version
复制<br><br>使用flock命令可以轻松实现文件锁定。以下是一个简单的示例，演示如何使用flock锁定文件：<br># 锁定文件
flock /path/to/file.lock echo "Locked! This command will only run when the file is locked."

# 在锁定状态下运行的命令
flock -n /path/to/file.lock echo "This command will run even if the file is locked."
复制<br>在上面的例子中，第一行通过flock命令锁定了指定的文件。只有当文件被成功锁定时，才会执行echo命令。第二行使用了 -n 选项，表示以非阻塞模式运行。即使文件被锁定，该命令仍然会执行。<br><br><br>flock还支持使用文件描述符进行锁定。这为你提供了更多的灵活性和控制。以下是一个例子：<br>exec 200&gt;/path/to/file.lock   # 创建文件描述符
flock -n 200 echo "Locked using file descriptor!"
复制<br><br>使用 -e 参数可以创建独占锁，确保只有一个进程可以拥有锁。这对于某些场景非常重要，例如在写入文件时。<br>flock -e /path/to/file.lock echo "Exclusive lock! Only one process can write at a time."
复制<br><br>在多用户或多进程环境中，脚本同步变得至关重要。脚本同步确保同一时间只有一个实例的脚本在运行，避免竞态条件和数据不一致。<br>使用flock在脚本中实现同步是相对简单的。以下是一个基本的示例，演示如何在脚本中嵌入flock命令：<br>#!/bin/bash
(
    flock -n 9 || exit 1
    # 被锁定时执行的代码
    echo "Script is running..."
    sleep 10
) 9&gt;/var/lock/myscript.lock
复制<br>在这个例子中，整个脚本被包裹在 ( ) 中，flock命令锁定文件描述符9。如果锁定失败（表示另一个进程正在运行），脚本将退出。否则，它将执行脚本的主体部分。<br><br><br>考虑一个场景，多个进程需要同时访问一个文件。使用flock可以确保只有一个进程可以在任何时候写入文件，避免数据损坏和不一致。<br>(
    flock -e 9
    # 进程在此执行写入文件的操作
    echo "Data to be written" &gt;&gt; /path/to/shared/file.txt
) 9&gt;/var/lock/file-access.lock
复制<br><br>假设有一个需要定时运行的脚本，但我们希望确保同一时刻只有一个实例在运行。使用flock可以轻松实现这个目标。<br>#!/bin/bash
(
    flock -n 9 || exit 1
    # 定时任务的主体代码
    echo "Running scheduled task..."
    # ...其他任务逻辑...
) 9&gt;/var/lock/scheduled-task.lock
复制<br><br>Crontab 中任务的描述形式如下：<br>* * * * * flock -xn /tmp/mytest.lock -c 'php /home/fdipzone/php/test.php'<br>Mac 不支持 flock 的解决方案<br>
<a data-tooltip-position="top" aria-label="https://github.com/discoteq/flock" rel="noopener" class="external-link" href="https://github.com/discoteq/flock" target="_blank">GitHub - discoteq/flock: flock(1) locks files</a><br>文章来源: <a rel="noopener" class="external-link" href="https://bbs.huaweicloud.com/blogs/419073" target="_blank">https://bbs.huaweicloud.com/blogs/419073</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/linux中如何锁定文件？flock命令一定要了解！.html</link><guid isPermaLink="false">开发笔记/linux/Linux中如何锁定文件？flock命令一定要了解！.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate><enclosure url="https://img-wljslmz-1259086031.cos.ap-nanjing.myqcloud.com/picgo/202312202337373.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://img-wljslmz-1259086031.cos.ap-nanjing.myqcloud.com/picgo/202312202337373.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux 文件搜索神器 find 实战详解]]></title><description><![CDATA[ 
 <br>在 Linux 系统使用中，作为一个管理员，我希望能查找系统中所有的大小超过 200M 文件，查看近 7 天系统中哪些文件被修改过，找出所有子目录中的可执行文件，这些任务需求 find 命令都可以轻松胜任。<br><img src="https://pic4.zhimg.com/v2-194e2b9b93162de1c6511dd2f746c5fb_r.jpg" referrerpolicy="no-referrer"><br>在 Linux 系统文件中常用的属性可以分为以下内容：名称、大小、权限、属主、修改时间、访问时间等，find 命令可以按照指定的属性为条件进行查找。<br>废话不多，直接开干，下边进入案例实战。<br><br>（一）按文件名称查找<br>按照文件名称查找是 find 最常见的用法，需要注意的是，搜索的文件名必须完全匹配，才能找到对应的文件。<br>1. 查找当前目录下所有 go 文件<br>2. 在 etc 目录下，查找大写字母开头的 txt 文件<br>$ find /etc -name "[A-Z]*.txt" -print
复制<br>3. 在当前目录下查找不是 out 开头的 txt 文件<br>$ find . -name "out*" -prune -o -name "*.txt" -print
复制<br>4. 在当前目录除 git 子目录外查找 txt 文件<br>$ find . -path "./git" -prune -o -name "*.txt" -print
复制<br>5. 找出某个文件的所有硬链接，ls 命令 -i 选项可以查看文件的 inode 号<br>$ ls -i 1.txt
138956 1.txt
$ find . -num 138956
复制<br>这里补充一个小技巧，搜索文件时使用 -iname 参数可以忽略文件名称大小写<br>（二）按文件类型查找<br>1. 在当前目录下，查找软连接文件<br>2. 在当前目录下，查找 log 结尾的普通文件，f 表示普通文件类型<br>$ find . -type f -name "*.log"
复制<br>（三）按文件大小查找<br>1. 查找小于 64k 的文件<br>$ find . -size -64k -print
复制<br>2. 查找大小超过 200M 的文件<br>$ find . -size +200M -type f -print
复制<br>（四）按时间查找<br>1. 查找 2 天内被修改过的文件<br>$ find . -mtime -2 -type f -print
复制<br>2. 查找 2 天前被更改过的文件，-mtime 表示内容修改时间<br>$ find . -mtime +2 -type f -print
复制<br>3. 查找一天内被访问的文件，-atime 表示访问时间<br>$ find . -atime -1 -type f -print
复制<br>4. 查找一天内状态被改变的文件，-ctime 表示元数据被变化时间<br>$ find . -ctime -1 -type f -print
复制<br>5. 查找比 chopin.txt 新的文件<br>$ find . -newer "chopin.txt" -type f -print
$ find . ! -newer "chopin.txt" -type f -print # 旧
复制<br>（五）根据权限查找<br>1. 查找当前目录权限为 644 的文件<br>$ find . -type f -perm 644
复制<br>2. 查找 etc 目录下至少有一个用户有写权限的文件<br>$ find /etc -type f -perm /222
复制<br>3. 查找 etc 目录下所有用户都有执行权限的文件<br>$ find /etc -perm -111 -ls
复制<br>（六）组合条件<br>1. 查找当前目录下属于 chopin 用户的普通文件，-a 可以省略<br>$ find . -type f -a -user chopin -print
复制<br>2. 查找当前目录下大于 2M 或 2 天前被修过的文件<br>$ find . -size +2M -o -mtime +2 -print
复制<br>3. 查找当前目录下不是普通文件<br>$ find . -not -type f
$ find . ! -type f
复制<br>4. 查找非空文件<br>（七）处理动作<br>find 根据上述各种条件查找后，支持执行相关的处理动作，可以让我们的更方便和灵活，而不只是打印出来<br>1. -print 默认为打印，可省略<br>$ find . -name "*.log" -print
$ find . -name "*.log" # 等价
复制<br>2. -ls 以 ls 长文件的格式形式输出<br>$ find . -name "*.txt" -ls
138957      4 -rw-r--r--   1 root     root           16 Jan 24 23:20 ./a.txt
138959      4 -rw-r--r--   1 root     root          172 Jan 24 13:06 ./T.txt
138956      4 -rw-r--r--   1 root     root           27 Jan 24 23:28 ./1.txt
复制<br>3. -delete 删除查找到的文件<br>$ find . -size +100M -delete
复制<br>4. -exec 将查找到的文件传递给 command 命令。下边例子是将查找到的文件传递给了 ls 命令，同理我们可以传递给任何一个 Linux 命令，功能十分强大，也很灵活。<br>$ find . -name "*.txt" -exec ls -lh {} \;
-rw-r--r-- 1 root root 16 Jan 24 23:20 ./a.txt
-rw-r--r-- 1 root root 172 Jan 24 13:06 ./T.txt
-rw-r--r-- 1 root root 27 Jan 24 23:28 ./1.txt
复制<br>5. -ok 与 -exec 功能一样，只是操作时会提示用户确认，仅此而已。当然，在生产环境上，我们还是推荐使用 ok<br>（八）经典案例<br>如果存在一个名称乱码的文件，想要删除它，该怎么办？即使我们复制乱码名称到命令行，很有可能终端不能正确识别。不用担心，下边来展示下 find 是如何优雅的解决问题的。<br>$ ls  -i
138957 a.txt  138959 T.txt  132395  ��.txt

$ find . -inum 132395 -exec rm {} \;
复制<br>命令中，-inum 指定的是文件的 inode 号，它是系统中每个文件对应的唯一编号，find 通过编号找到后，执行删除操作。<br><br>find 命令是 Linux 命令中最有用的命令之一，它的功能非常强大，且语法复杂。其实我们不一定需要了解它的所有细节，掌握上述实战案例中的常见用法，足够满足日常工作中的大部分需求。<br>下边我们一起来总结下 find 命令常见用法，加深对 find 使用方法的理解。<br>命令格式<br>find path -option [-exec ...]<br>按文件名查找<br>
<br>-name：按照文件名称查找，准确匹配；
<br>-iname：不区分文件名的大小写；
<br>-inode：按照文件 inode 号查找；
<br>按照文件类型查找<br>按照文件类型查找，可以使用 -type 选项，具体支持的文件类型如下：<br>
<br>f：普通文件
<br>d：目录文件
<br>l：链接文件
<br>s：套接字文件
<br>p：管道文件
<br>b：块设备文件，比如：磁盘
<br>c：字符设备文件，比如：键盘、鼠标、网卡
<br>按照文件从属关系查找<br>
<br>-user：以用户名查找
<br>-group：以组名查找
<br>-uid：以用户 ID 查找
<br>-gid：以组 ID 查找
<br>-nouser：查找没有属主的文件
<br>-nogroup：查找没有属组的文件
<br>按照文件大小查找<br>按照文件大小查找功能十分常用，用 -size 选项，选项后边指定大小 1024M，表示大小的格式有如下几种：<br>
<br>-5M：查找小于 5M 的文件
<br>+5M：查找大于 5M 的文件
<br>5M：查找大小为 5M 的文件
<br>单位支持的有 c（字节）、k、M、G 等，需要注意的是默认单位并不是字节，而是 b，大小为 512 字节。<br>按照时间查找<br>按照时间查找的功能对系统管理员来说，十分常用，find 支持如下几种时间类型：<br>
<br>atime：以访问时间查找
<br>mtime：以数据修改时间查找
<br>ctime：以元数据修改时间查找
<br>newer：以文件为条件，判断比它新的文件
<br>按时间查找时，使用格式如下：<br>
<br>-atime -5：表示 5 天内访问过的文件；
<br>-atime +5：表示 6 天前访问过的文件；
<br>-atime 5：表示前 5-6 那一天访问的文件；
<br>这个 +5 含义总是被人理解错，误认为是 5 天后修改的文件，如果能知道未来 5 天的事情，小编早就去买彩票了！可能这么说还不是很清楚，直接看图吧！<br><img src="https://pic3.zhimg.com/v2-1b3501883283ca8cba297159a0250d8e_r.jpg" referrerpolicy="no-referrer"><br>find 不仅可以按 天 为单位来查找文件，可以按照 amin、mmin、cmin 来查找，区别只是 min 选项单位为分钟。<br>按照权限查找<br>按权限查找是通过 -perm 选项，可以按照如下方式使用：<br>
<br>-perm 644：精确权限查找
<br>-perm /666：任何一类用户中的任何一位符合条件即满足
<br>-perm -222：每一类用户的每一位同时符合条件即满足
<br>组合条件<br>find 可以使用多个条件的组合，支持 -a、-o、-not 或 !，比较简单，不再详细描述其含义。<br>处理动作<br>find 根据各种条件查找后，支持执行相关的处理动作，可以让我们的更方便和灵活，而不只是打印出来。<br>
<br>-print：打印，默认动作，可省略
<br>-ls：以 ls 长文件格式输出
<br>-delete：删除查找到的文件
<br>-exec：查找到的文件传递给任何 Linux 命令
<br>-ok：与 exec 功能相同，区别是需要用户确认每次的操作
<br>再啰嗦一下，find 命令支持的参数和选项比较多，文中只是总结出最常用、核心的参数选项。如果上述命令确实不满足需求，可以请教你的男人 man find。<br>这里需要提一下，find 搜索文件时通过扫描磁盘来进行的，尽可能不要大范围的搜索文件，尤其是在 / 目录下搜索，会长时间消耗服务器的 cpu 资源。如果是生产环境的机器，执行前要考虑是否会对业务造成影响。<br><br>虽然 find 功能非常强大，但要知道的是，find 执行过程是通过扫描磁盘文件来进行查找的，如果大范围的查找文件，需要花费的时间很长，且消耗服务器 cpu 资源。<br>这里推荐另一个 Linux 文件查找神器 locate，类似于 win 平台下的 everything。它基于索引表进行查询，查询速度非常快，基本不占用 cpu 资源。<br>使用方法非常简单<br>$ locate file.txt
$ locate /etc/httpd
复制<br>需要注意，如果是当天新创建的文件，通过 locate 默认是查不到的，因为它的数据库默认是每天自动更新一次。如果希望查询到当天创建的新文件，需要执行 updatedb 即可。<br>查找速度快是 locate 的优势，但它的缺点也非常明显：<br>
<br>模糊查询
<br>查找匹配模式单一
<br>查询的名称匹配路径命令
<br>索引表的建立会占用磁盘空间
<br>非实时查询，当天数据可能查不到
<br>好了，到这里关于 find 命令的全部内容已经结束，希望文中的案例和总结能够帮助你更好的使用它。同时也强烈建议收藏本文，以作为 Linux 常用命令手册。<br>好了，本次分享就到这里了！谢谢大家，我是肖邦，欢迎关注后续的精彩内容。<br>推荐阅读：<br>
<br><a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/htfmMF0A1CdITvdlfgasCg" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/htfmMF0A1CdITvdlfgasCg" target="_blank">写给 Linux 初学者的一封信</a>
<br><a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/LnDMO-uREA8kGArnxFIE1w" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/LnDMO-uREA8kGArnxFIE1w" target="_blank">全网最详尽的负载均衡原理图解</a>
<br><a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/XvTrfKfYZHnG-ZQ1O1K9lg" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/XvTrfKfYZHnG-ZQ1O1K9lg" target="_blank">上古神器 sed 教程详解，小白也能看的懂</a>
<br><a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/FwU5Q7HqmqBFSEJZosuyOg" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/FwU5Q7HqmqBFSEJZosuyOg" target="_blank">Linux 三剑客之 grep 教程详解</a>
<br><br>文章来源: <a rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/349369812" target="_blank">https://zhuanlan.zhihu.com/p/349369812</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/linux-文件搜索神器-find-实战详解.html</link><guid isPermaLink="false">开发笔记/linux/Linux 文件搜索神器 find 实战详解.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate><enclosure url="https://pic4.zhimg.com/v2-194e2b9b93162de1c6511dd2f746c5fb_r.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://pic4.zhimg.com/v2-194e2b9b93162de1c6511dd2f746c5fb_r.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux find 模拟 tree 命令]]></title><description><![CDATA[ 
 在没有tree命令的服务器上，可以使用find命令模拟tree命令的效果，并通过设置别名来快速执行该命令。]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/linux-find-模拟-tree-命令.html</link><guid isPermaLink="false">开发笔记/linux/Linux find 模拟 tree 命令.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/pastedimage20240221051749.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/pastedimage20240221051749.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[1 . windows 上遍历目录，包含子目录，但不包含文件，不包含隐藏文件，把结果通过 gui 下来列表框输出，怎么实现？]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:或其他" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#或其他</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:或其他" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#或其他</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:或VB" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#或VB</a> 
 Windows上遍历目录，排除隐藏文件，通过GUI展示在列表框中，点击后响应事件，移动文件到选择的目录，关闭窗口的操作，其他程序调用的方法。]]></description><link>https://wxkj.asia/mynote/开发笔记/脚本插件/powershell监控文件夹创建md文件并移动位置.html</link><guid isPermaLink="false">开发笔记/脚本插件/Powershell监控文件夹创建md文件并移动位置.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[bat避免重复运行]]></title><description><![CDATA[ 
 <br>方法一：<br>@echo off 2&gt;nul 3&gt;&gt;"%~f0"
type "%~f0"

rem 脚本内容...

复制<br>方法二：<br>@echo off

set SCRIPT_NAME=%~nx0
set COUNT=
for /F "delims=" %%i in ('wmic process get Caption^,CommandLine ^| find /i "%SCRIPT_NAME%" ^| find /v /c "find.exe"') do (
    set COUNT=%%i
)
if %COUNT% GTR 1 (
    echo 监控进程已存在
    exit /B 1
)

rem 脚本主体内容...
复制<br>方法三：<br>@echo off
set SCRIPT_NAME=%~nx0
set MARK_FILE="%TEMP%\%SCRIPT_NAME%.lock"

:: 创建守护进程
start "" cmd /c "%~dp0cleanup.bat" "%MARK_FILE%"
:: 检查 lock 文件
if exist "%MARK_FILE%" (
    echo 脚本 %SCRIPT_NAME% 已经启动！
    exit /B 1
)

echo 脚本开始运行 &gt; "%MARK_FILE%"
rem 脚本主体内容...

:: 脚本结束时通知守护进程清理 lock 文件
echo 脚本结束 &gt;&gt; "%MARK_FILE%"

goto :eof

:: 清理守护进程脚本 cleanup.bat
:: 守护进程持续监测 lock 文件，当发现文件中有“脚本结束”字样时，删除 lock 文件
:: 并终止自身进程
:cleanup
set MARK_FILE=%1
:loop
timeout /T 1 /NOBREAK &gt; nul
if exist "%MARK_FILE%" (
    for /F "tokens=*" %%i in (%MARK_FILE%) do (
        if "%%i"=="脚本结束" (
            del "%MARK_FILE%"
            exit
        )
    )
)
goto loop
复制<br>这段代码仅供参考，因为 cleanup.bat 还要判断主进程是否结束，只有主进程结束后才能清理 MARK_FILE，可以和方法二结合，达到更健壮的目的。]]></description><link>https://wxkj.asia/mynote/开发笔记/脚本插件/bat避免重复运行.html</link><guid isPermaLink="false">开发笔记/脚本插件/bat避免重复运行.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[多端文件同步原理和算法概述]]></title><description><![CDATA[ 
 <br>第一步：遍历服务所有文件传到客户端<br>第二步：获取本地所有文件，并与服务器端的文件进行比较，找出本地新建文件和服务器新建文件。这部分只需要上传和下载即可。<br>第三步：对于双方都有的文件按照下面方法处理：<br>
<br>远程文件和本地文件应该分块计算 hash 值，可以参考 rsync 的 RollingChecksum + MD5（强 hash 算法）。
<br>远程始终保存最后一次客户端的同步时块的 hash 值及与每个客户端最后一次同步时的 hash 值，客户端则保存自己最近一次同步时的 hash 值。
<br>同步时，本地与远程最新的 hash 比较，如果 hash 值相同，说明文件没变，不同步；如果 hash 值不同，则本地与自己上一次的 hash 值比较，如果没变，说明服务器变动，应该使用服务器文件；如果变动，说明本地修改了，这时再让服务器与它上一次的 hash 比较，如果服务器没变，说明本地变动，应该使用本地文件；如果本地和服务器都变动了，说明双方都改动了，这时以修时间为准，使用最后修改的那个文件，并把这次冲突的两个文件放到冲突历史中。
<br>您的描述中提出的多端文件同步原理和算法概述大体上是合理的，但有几个地方可以进一步优化和完善：<br>
<br>
分块计算 hash 值：对于大文件，采用 RollingChecksum 或者其他的增量比较算法配合强 Hash 算法（如 MD5、SHA-1）进行数据块级别的校验是非常有效的。这有助于减少不必要的完整文件传输。

<br>
版本管理与冲突解决：

<br>您提到的使用 hash 值来判断文件是否发生变化以及依据最后修改时间来决定最终使用哪个版本的方法在一定程度上可行，但在分布式环境下可能需要更复杂的策略。例如，不同客户端的时钟可能有偏差，单纯依赖修改时间可能会导致不准确的结果。
<br>对于双方都改动了同一文件的情况，除了考虑最后修改时间外，通常还需要提供一种机制让用户手动解决冲突或选择自动合并策略（如果文件类型支持）。有些同步工具会创建冲突副本，并通知用户处理冲突。


<br>
高效遍历和服务端信息保存：

<br>遍历服务所有文件并传到客户端不是最高效的方案，应尽量避免一次性全量同步，而是只同步差异部分。
<br>服务器端应该存储每个文件及其各个块的最新 hash 值，并且针对每个客户端分别记录它们的同步状态，这样可以降低通信开销并提高同步效率。


<br>
实时监测与推送更新：

<br>为了实时同步，服务端可以采用监听文件系统事件的方式来实时发现文件变化，而不是每次同步都要遍历所有文件。
<br>客户端也可以定期向服务器请求是否有新的更改，或者通过长连接、WebSocket 等技术实现即时通信，以实现实时的文件变动通知。


<br>综上所述，您的方案基本合理，但在实际应用中还需考虑时钟同步问题、文件冲突解决、网络条件下的优化及实时性要求等因素。同时，还可以结合现有的成熟同步协议（比如 rsync 的部分特性、Git 的提交模型等）来进行设计和优化。]]></description><link>https://wxkj.asia/mynote/开发笔记/算法/多端文件同步原理和算法概述.html</link><guid isPermaLink="false">开发笔记/算法/多端文件同步原理和算法概述.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[python3实现将本地文件夹全部内容上传到FTP]]></title><description><![CDATA[ 
 <br>需求：<br>1、将本地文件夹的内容上传到 FTP 指定目录下，包括子目录及文件，要求支持中文文件名。<br>2、如果 FTP 上文件存在，对比大小不一致则覆盖上传，如果一致则不用上传。<br>3、要有日志功能方便查看<br>4、尽量以函数的方式实现<br>思路：<br>1、先上传一级目录，子目录使用递归的方式层层上传。FTP 上如果目录不存在则新建。<br>2、上传单个文件时进行文件大小对比。如果大小不一致则覆盖上传。<br>3、完成后统计上传文件的类型和数量，并打印上传结果。<br>本程序的改进：<br>此程序是我参考了网上多个实现方式，花了半个月时间改进过来的。对以前的功能进行了大幅完善。<br>1、解决了复制文件夹时目录顺序错乱的问题。<br>
2、解决了不支持复制中文文件名的文件的问题。<br>
3、优化了日志系统，将日志改为了中文，增加了显示上传结果，日志文件为单个文件，大小循环限制为 5 M。<br>
4、大量的代码优化<br>代码如下：<br># power by luo_tao 20211111
import os
from ftplib import FTP
import traceback
import logging
import sys
from logging.handlers import RotatingFileHandler
 
 
# 如需要支持中文名文件传输，需要将ftplib.py文件中的  encoding = "latin-1"  改为   encoding = "utf-8"
class FTP1(FTP):     # 继承FTP类，修改解码参数，解决不识别文件名中文的问题
    encoding = "utf-8"
 
 
# 比对本地文件和上传文件的大小
def is_same_size(ftp, local_file, remote_file, app_log):
    try:
        remote_file_size = ftp.size(remote_file)       # 获取远端文件大小
    except Exception as err:
        #app_log.debug("获取远程文件大小失败, 原因为:%s" % err)
        remote_file_size = -1     # 如果获取FTP文件失败，则返回-1
    try:
        local_file_size = os.path.getsize(local_file)     # 获取本地文件大小
    except Exception as err:
        app_log.debug("获取本地文件大小失败, 原因为:%s" % err)
        local_file_size = -1      # 如果获取本地文件失败，则返回-1
    # 三目运算符
    result = True if (remote_file_size == local_file_size) else False    # 文件大小对比
    return result, remote_file_size, local_file_size    # 返回对比结果，FTP文件和本地文件的大小
 
 
# 上传单个文件的函数,里面调用了比对本地文件和上传文件的大小的函数
def upload_file(ftp, local_file, remote_file, app_log):
    global upload_file_count
    global fail_count
    # 检查本地是否有此文件
    if not os.path.exists(local_file):     # 如果不存在本地文件，记录日志并返回False
        app_log.debug(f'上传文件：本地待上传的文件:{local_file}不存在。')
    result, remote_file_size, local_file_size = is_same_size(ftp, local_file, remote_file, app_log)  # FTP如果文件已存在，则对比大小
    if True != result:     # 如果对比大小不一致，则上传文件
        print(f'上传文件：远程文件 {remote_file} 不存在，现在开始上传...')
        app_log.debug(f'上传文件：远程文件 {remote_file} 不存在，现在开始上传...')
        global FTP_PERFECT_BUFF_SIZE    # 把全局变量传进来
        try:    # 上传文件到FTP
            with open(local_file, 'rb') as f:   # 打开本地文件
                # ftp.retrbinary('RETR %s' % remote_file, f.write, buffsize)    #下载FTP文件
                if ftp.storbinary('STOR ' + remote_file, f):   # 上传本地文件到FTP
                    result, remote_file_size, local_file_size = is_same_size(ftp, local_file, remote_file, app_log)
                # 打印上传失败或成功的日志
                app_log.debug(f'{remote_file}文件上传成功, 远程文件大小 = {remote_file_size}, 本地文件大小 = {local_file_size}')
                print(f'{remote_file}文件上传成功, 远程文件大小 = {remote_file_size}, 本地文件大小 = {local_file_size}')
                upload_file_count += 1
        except Exception as err:
            app_log.debug(f'上传文件有错误发生:{local_file}, 错误:{err}')
            print(f'上传文件有错误发生:{local_file}, 错误:{err}')
            fail_count += 1
            result = False
    else:
        print(f'{local_file}文件已存在，无需上传!')
        app_log.debug(f'{local_file}文件已存在，无需上传!')
 
 
# 上传目录的函数，里面有调用上传单个文件的函数
def upload_file_tree(local_path, remote_path, ftp, IsRecursively, app_log):
    global fail_count
    # 有远端目录的话进入目录，没有目录的话创建目录
    print(f'upload_file_tree函数开始运行！FTP远程目录为:{remote_path}')
    # 切换到FTP的目标目录，如果没有的话则创建
    try:
        ftp.cwd(remote_path)  # 进入FTP工作目录
    except Exception as e:
        print(f'FTP目录：{remote_path}文件夹不存在，错误信息:', e)
        app_log.debug(f'FTP目录：{remote_path}文件夹不存在，错误信息:{e}')
        base_dir, part_path = ftp.pwd(), remote_path.split('/')
        for subpath in part_path:
            # 针对类似  '/home/billing/scripts/zhf/send' 和 'home/billing/scripts/zhf/send' 两种格式的目录
            # 如果第一个分解后的元素是''这种空字符，说明根目录是从/开始，如果最后一个是''这种空字符，说明目录是以/结束
            # 例如 /home/billing/scripts/zhf/send/ 分解后得到 ['', 'home', 'billing', 'scripts', 'zhf', 'send', ''] 首位和尾都不是有效名称
            if '' == subpath:     # 如果是空字符，跳出此循环，执行下一个。
                continue
            base_dir = os.path.join(base_dir, subpath)  # base_dir + subpath  # 拼接子目录
            try:
                ftp.cwd(base_dir)  # 进入目录
            except Exception as e:
                print(f'创建FTP目录:{base_dir}')
                app_log.debug(f'创建FTP目录:{base_dir}')
                ftp.mkd(base_dir)  # 不存在创建当前子目录 直到创建所有
                continue
        ftp.cwd(remote_path)   # 进入FTP工作目录
    # 本地目录切换
    try:
        # 远端目录通过ftp对象已经切换到指定目录或创建的指定目录
        file_list = os.listdir(local_path)     # 列出本地文件夹第一层目录的所有文件和目录
        for file_name in file_list:
            if os.path.isdir(os.path.join(local_path, file_name)):   # 判断是文件还是目录，是目录为真
                if IsRecursively:  # 递归变量，默认为Ture
                    # 使用FTP进入远程目录，如果没有远程目录则创建它
                    try:   # 如果是目录，则尝试进入到这个目录，再退出来。
                        cwd = ftp.pwd()     # 获取FTP当前路径
                        ftp.cwd(file_name)  # 如果cwd成功 则表示该目录存在 退出到上一级
                        ftp.cwd(cwd)       # 再返回FTP之前的目录
                    except Exception as e:
                        print(f'检查FTP远程目录{file_name}不存在, 现在创建，错误信息:{e}')
                        ftp.mkd(file_name)  # 建立目录
                        print(f'在{remote_path}目录中新建子目录 {file_name} ...')
                        app_log.debug(f'在{remote_path}目录中新建子目录 {file_name} ...')
                    p_local_path = os.path.join(local_path, file_name)    # 拼接本地第一层子目录，递归时进入下一层
                    p_remote_path = os.path.join(ftp.pwd(), file_name)    # 拼接FTP第一层子目录，递归时进入下一层
                    upload_file_tree(p_local_path, p_remote_path, ftp, IsRecursively, app_log)  # 递归
                    ftp.cwd("..")     # 对于递归 ftp 每次传输完成后需要切换目录到上一级
                else:
                    app_log.debug('传输模式是非递归模式,不会创建多级目录!')
                    continue
            else:
                # 是文件 直接上传
                local_file = os.path.join(local_path, file_name)
                remote_file = os.path.join(remote_path, file_name)
                upload_file(ftp, local_file, remote_file, app_log)
 
    except:
        app_log.debug(f'上传文件时有一些错误发生 :{file_name},错误:{traceback.format_exc()}')
        print(f'上传文件时有一些错误发生 :{file_name},错误:{traceback.format_exc()}')
        fail_count += 1
    return
 
 
# 计算本地文件夹中文件个数
def file_count(local_path, type_dict):
    global local_file_count                 # 声明全局变量
    file_list = os.listdir(local_path)  # 列出本地文件夹第一层目录的所有文件和目录
    for file_name in file_list:
        if os.path.isdir(os.path.join(local_path, file_name)):  # 判断是文件还是目录，是目录为真
            type_dict.setdefault("文件夹", 0)      # 如果字典key不存在，则添加并设置为初始值
            type_dict["文件夹"] += 1
            p_local_path = os.path.join(local_path, file_name)  # 拼接本地第一层子目录，递归时进入下一层
            file_count(p_local_path, type_dict)
        else:
            ext = os.path.splitext(file_name)[1]  # 获取到文件的后缀
            type_dict.setdefault(ext, 0)          # 如果字典key不存在，则添加并设置为初始值
            type_dict[ext] += 1
            local_file_count += 1                     # 计算总文件数量
    return local_file_count
 
 
# 日志函数
def log_fun(log_file):
    log_formatter = logging.Formatter('%(levelname)s %(asctime)s &lt;----&gt; %(message)s')
    log_handler = RotatingFileHandler(log_file, mode='a', maxBytes=5*1024*1024, backupCount=0,
                                      encoding=None, delay=False)
    # 生成一个RotatingFileHandler对象，限制日志文件大小为5M
    log_handler.setFormatter(log_formatter)     # 对象载入日志格式
    log_handler.setLevel(logging.DEBUG)          # 对象载入级别
    app_log = logging.getLogger('luo_tao')     # 初始化logging模块
    app_log.setLevel(logging.DEBUG)          # 设置初始化模块级别
    app_log.addHandler(log_handler)        # 载入RotatingFileHandler对象
    return app_log
 
if __name__ == '__main__':
    # 标注为$$$的地方需要修改参数才能正常运行
    # 配置log日志文件
    luo_tao = sys.path[0] + '\\log.log'    # 设置log日志保存的路径
    app_log = log_fun(luo_tao)             # 生成log实例
 
    # 配置连接FTP的参数
    host = '10.1.1.1'    # $$$ 配置FTP服务器IP
    port = 21
    username = 'username'      # $$$ 配置FTP帐号
    password = 'password'      # $$$ 配置FTP密码
    ftp = FTP1()
    ftp.connect(host, port)
    ftp.login(username, password)
 
    # 定义变量
    local_path = 'c:\\abc'          # $$$ 配置本地文件夹的路径
    remote_path = '\\abc'           # $$$ 配置远端FTP的文件夹路径
    IsRecursively = True            # 是否复制子目录下文件的开关，不需要可配置为False
    type_dict = dict()              # 定义一个保存文件类型及数量的空字典
    local_file_count = 0                # 计算本地总文件数,初始为0
    upload_file_count = 0               # 计算有多少文件上传到了FTP
    fail_count = 0                     # 失败计数
 
    # 本地文件计数和上传文件
    file_count(local_path, type_dict)   # 运行计算本地文件夹文件数量的函数
    upload_file_tree(local_path, remote_path, ftp, IsRecursively, app_log)
 
    # 打印文件上传结果
    for each_type in type_dict:
        if each_type == '文件夹':
            continue
        print(f"目录[{local_path}]中文件类型为[{each_type}]的数量有：{type_dict[each_type]} 个")
        app_log.info(f"目录[{local_path}]中文件类型为[{each_type}]的数量有：{type_dict[each_type]} 个")
    print(f"目录[{local_path}]本地文件数量为:{local_file_count}，本次FTP文件上传数量为:{upload_file_count}")
    app_log.info(f"目录[{local_path}]本地文件数量为:{local_file_count}，本次FTP文件上传数量为:{upload_file_count}")
    if not fail_count:
        print("本地文件上传FTP全部成功！")
        app_log.info("本地文件上传FTP全部成功！")
    else:
        print("本地文件上传FTP有失败记录，请检查日志！")
        app_log.info("本地文件上传FTP有失败记录，请检查日志！")
    app_log.info('==========================================================================')
 
复制<br>运行结果：<br>upload_file_tree函数开始运行！FTP远程目录为:/abc/123/789\ggg
上传文件：远程文件 /abc/123/789\ggg\111.doc 不存在，现在开始上传...
/abc/123/789\ggg\111.doc文件上传成功, 远程文件大小 = 9216, 本地文件大小 = 9216
上传文件：远程文件 \abc\2.txt 不存在，现在开始上传...
\abc\2.txt文件上传成功, 远程文件大小 = 14, 本地文件大小 = 14
上传文件：远程文件 \abc\3.txt 不存在，现在开始上传...
\abc\3.txt文件上传成功, 远程文件大小 = 34, 本地文件大小 = 34
检查FTP远程目录456不存在, 现在创建，错误信息:550 CWD failed. "/abc/456": directory not found.
在\abc目录中新建子目录 456 ...
upload_file_tree函数开始运行！FTP远程目录为:/abc\456
上传文件：远程文件 /abc\456\1.log 不存在，现在开始上传...
/abc\456\1.log文件上传成功, 远程文件大小 = 288650, 本地文件大小 = 288650
上传文件：远程文件 /abc\456\2.txt 不存在，现在开始上传...
/abc\456\2.txt文件上传成功, 远程文件大小 = 0, 本地文件大小 = 0
上传文件：远程文件 /abc\456\3.txt 不存在，现在开始上传...
/abc\456\3.txt文件上传成功, 远程文件大小 = 0, 本地文件大小 = 0
上传文件：远程文件 \abc\中天国富安全助手1.3（办公网）_0.log 不存在，现在开始上传...
\abc\中天国富安全助手1.3（办公网）_0.log文件上传成功, 远程文件大小 = 18, 本地文件大小 = 18
上传文件：远程文件 \abc\我爱你.txt 不存在，现在开始上传...
\abc\我爱你.txt文件上传成功, 远程文件大小 = 0, 本地文件大小 = 0
目录[c:\abc]中文件类型为[.log]的数量有：4 个
目录[c:\abc]中文件类型为[.txt]的数量有：13 个
目录[c:\abc]中文件类型为[.doc]的数量有：1 个
目录[c:\abc]本地文件数量为:18，本次FTP文件上传数量为:18
本地文件上传FTP全部成功！
 
进程已结束，退出代码为 0
复制<br>文章来源：<a data-tooltip-position="top" aria-label="https://blog.csdn.net/netlt/article/details/121281608" rel="noopener" class="external-link" href="https://blog.csdn.net/netlt/article/details/121281608" target="_blank">python3实现将本地文件夹全部内容上传到FTP</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/python/python3实现将本地文件夹全部内容上传到ftp.html</link><guid isPermaLink="false">开发笔记/python/python3实现将本地文件夹全部内容上传到FTP.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[ftp获取远程文件时间]]></title><description><![CDATA[ 
 <br>from ftplib import FTP
from dateutil import parser

# ... (connection to FTP)

timestamp = ftp.voidcmd("MDTM /remote/path/file.txt")[4:].strip()

time = parser.parse(timestamp)

print(time)

复制<br>或<br>from ftplib import FTP
from dateutil import parser

# ... (connection to FTP)

files = ftp.mlsd("/remote/path")

for file in files:
    name = file[0]
    timestamp = file[1]['modify']
    time = parser.parse(timestamp)
    print(name + ' - ' + str(time))
复制<br>或<br>lines = []
ftp.dir("/remote/path", lines.append)

for line in lines:
    tokens = line.split(maxsplit = 9)
    name = tokens[8]
    time_str = tokens[5] + " " + tokens[6] + " " + tokens[7]
    time = parser.parse(time_str)
    print(name + ' - ' + str(time))
复制<br>参加：<a data-tooltip-position="top" aria-label="https://stackoverflow.com/questions/29026709/how-to-get-ftp-files-modify-time-using-python-ftplib" rel="noopener" class="external-link" href="https://stackoverflow.com/questions/29026709/how-to-get-ftp-files-modify-time-using-python-ftplib" target="_blank">How to get FTP file's modify time using Python ftplib - Stack Overflow</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/python/ftp获取远程文件时间.html</link><guid isPermaLink="false">开发笔记/python/ftp获取远程文件时间.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[ftp获取文件的md5]]></title><description><![CDATA[ 
 <br>import ftplib
import hashlib

def get_ftp_md5(ftp, remote_path):
    m = hashlib.md5()
    ftp.retrbinary('RETR %s' % file_remote_path, m.update)
    return m.hexdigest()
复制<br>或<br>ftp.voidcmd("XSHA1 " + filename)<br>参加：<a data-tooltip-position="top" aria-label="https://stackoverflow.com/questions/62081849/md5-value-for-file-in-a-remote-ftp-server-using-python-ftplib" rel="noopener" class="external-link" href="https://stackoverflow.com/questions/62081849/md5-value-for-file-in-a-remote-ftp-server-using-python-ftplib" target="_blank">MD5 value for file in a remote FTP server using Python ftplib</a><br>本地文件获取 md5<br>hashlib.md5(open('filename.exe','rb').read()).hexdigest()<br>字符串获取 md5<br>Hashlib. Md 5 ("example string"). Hexdigest ()<br>参加：<a data-tooltip-position="top" aria-label="https://stackoverflow.com/questions/16874598/how-do-i-calculate-the-md5-checksum-of-a-file-in-python" rel="noopener" class="external-link" href="https://stackoverflow.com/questions/16874598/how-do-i-calculate-the-md5-checksum-of-a-file-in-python" target="_blank">How do I calculate the MD5 checksum of a file in Python?</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/python/ftp获取文件的md5.html</link><guid isPermaLink="false">开发笔记/python/ftp获取文件的md5.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[检测git中是否有文件发生了冲突]]></title><description><![CDATA[ 
 <br>检测 Git 中是否有文件发生冲突，你可以通过以下几个步骤来进行：<br>
<br>
运行 git status：当你尝试合并或变基（rebase）时，如果 Git 检测到冲突，首先应该运行 git status 命令。这个命令会显示当前工作目录的状态，包括哪些文件存在冲突。冲突的文件会以"unmerged"状态列出。

<br>
查看冲突标记：冲突的文件中会包含特殊的冲突标记，这些标记看起来像这样：
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
// 这里是你的本地分支的代码
=======
// 这里是你要合并或变基进来的代码
&gt;&gt;&gt;&gt;&gt;&gt;&gt; branch_name
复制
这些标记指示了冲突的开始和结束位置，以及来自不同分支的冲突内容。

<br>
使用 git diff：你也可以使用 git diff 命令查看具体哪些部分存在冲突。例如，git diff --name-only --diff-filter=U 会列出所有存在冲突的文件名，而 git diff &lt;filename&gt; 会展示指定文件中的具体冲突差异。
比如，以下语句判断是否存在冲突的文件：
if [ -n "$(git diff --name-only --diff-filter=U)" ]; then
   echo "There are unmerged paths."
fi
复制

<br>
查看 MERGE_HEAD：在合并过程中，Git 会设置一个名为 MERGE_HEAD 的引用，指向你正在尝试合并的分支。这个信息可以帮助确认当前正在进行的合并操作。

<br>
冲突解决提示：在合并或变基操作因冲突而暂停时，Git 通常会在终端输出信息，明确指出哪些文件有冲突，这是最直接的冲突检测方式。

<br>综上所述，通过观察 git status 的输出、检查冲突文件中的特殊标记、使用 git diff 查看差异以及留意 Git 命令行的直接提示，你可以有效检测并识别 Git 中发生冲突的文件。]]></description><link>https://wxkj.asia/mynote/开发笔记/git/检测git中是否有文件发生了冲突.html</link><guid isPermaLink="false">开发笔记/git/检测git中是否有文件发生了冲突.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 07 May 2024 00:50:13 GMT</pubDate></item><item><title><![CDATA[检测git变化并提交]]></title><description><![CDATA[ 
 <br>比如：<br>新建一个名为 autocommit.sh 的脚本，内容为：<br>#!/bin/bash

cd /path/project

# 检查是否有待暂存的更改
CHANGES=$(git status --porcelain)

if [ -n "$CHANGES" ]; then
    echo "Changes detected. Committing..."
    # 添加所有变更到暂存区
    git add .
    # 提交所有暂存的变更，这里你可以自定义提交信息
    git commit -m "Automatic commit at $(date)"
fi
复制<br>-n 是一个测试操作符，用于测试字符串是否不为空。<br>具体来说：<br>
<br>-n STRING：如果STRING的长度非零（即字符串不为空），则返回真（true），退出状态码为0。
<br>"$VARIABLE"：双引号包围变量$VARIABLE是为了防止空格或特殊字符导致的错误解析。
<br>然后定时执行就可以了，比如：<br>while true; do 
  bash /path/autocommit.sh
  sleep 60;
done
复制<br>或者直接把 autocommit.sh 放到定时任务执行，比如：<br>* * * * * /bin/bash /path/autocommit.sh &gt;/dev/null 2&gt;&amp;1 &amp;
复制<br>这里每分钟执行一次。<br>当然，这里前提还要先拉取下，并检测是否有冲突等，再决定是否提交。<br>检测 git 文件是否发生了冲突可参考 <a class="internal-link" data-href="检测git中是否有文件发生了冲突.md" href="https://wxkj.asia/mynote/开发笔记/git/检测git中是否有文件发生了冲突.html" target="_self" rel="noopener">检测git中是否有文件发生了冲突</a>。<br>实例：<br>#!/usr/bin/env bash

# * * * * * /bin/bash /path/bin/mynotes_autocommit.sh &gt;/dev/null 2&gt;&amp;1 &amp;
# nohup bash /path/bin/mynotes_autocommit.sh &gt;/dev/null 2&gt;&amp;1 &amp;

# 监控的根目录和批处理文件
src_dir="/path/Documents/我的笔记"
git="/usr/bin/git"

cd "$src_dir";

# 检查是否有待暂存的更改
CHANGES=$($git status --porcelain)

if [ -n "$CHANGES" ]; then
    # $git pull origin main

    #if [ -n "$($git diff --name-only --diff-filter=U)" ]; then
    #  osascript -e "display notification \"自动提交时发现有冲突文件，请手动处理！\" with title \"提示：\""
    #  exit 1
    #fi

    # 添加所有变更到暂存区
    $git add .
    # 提交所有暂存的变更，这里你可以自定义提交信息
    $git commit -m "Automatic commit at $(date)"

    #$git push origin main
fi
复制<br>为什么这里 git 路径要赋值给变量 git="/usr/bin/git"，参考 <a class="internal-link" data-href="../linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md" href="https://wxkj.asia/mynote/开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.html" target="_self" rel="noopener">为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？</a>。]]></description><link>https://wxkj.asia/mynote/开发笔记/git/检测git变化并提交.html</link><guid isPermaLink="false">开发笔记/git/检测git变化并提交.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 03 May 2024 01:25:58 GMT</pubDate></item><item><title><![CDATA[fork的项目如何更新]]></title><description><![CDATA[ 
 <br>Forked 的项目不会自动与源项目保持同步更新。当你在 GitHub 或其他平台上 Fork 一个项目，你创建的是源项目的一个副本，这个副本存放在你的账户下。此后，源项目和你的 Fork 是完全独立的两个仓库，它们之间的关系在初始 Fork 时刻建立，但后续的更新不会自动传播。<br>若要使你的 Fork 保持与源仓库同步，你需要手动进行以下几个步骤：<br>
<br>
添加上游远程仓库：首先，在本地 Fork 的仓库中添加源仓库作为一个新的远程仓库，通常命名为 upstream。
git remote add upstream https://github.com/original-user/original-repo.git
复制

<br>
检查上游更新：定期检查源仓库是否有更新。
git fetch upstream
复制

<br>
合并更新：将源仓库的更新合并到你的本地分支中。这通常涉及将 upstream 的相应分支（比如 main 或 master）合并到你的本地分支。
git merge upstream/main
复制

<br>
推送更新：如果合并成功，将你的 Fork 仓库更新的内容推送到你的 GitHub 仓库。
git push origin main
复制

<br>另外，GitHub 提供了一个便利的功能叫做“Sync fork”，可以直接在网页界面上点击按钮来简化这个过程，它会自动执行上述的 fetch 和 merge 操作，帮助你的 Fork 仓库与源仓库同步。但即便如此，这也需要你手动触发，并非全自动后台更新。]]></description><link>https://wxkj.asia/mynote/开发笔记/git/fork的项目如何更新.html</link><guid isPermaLink="false">开发笔记/git/fork的项目如何更新.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 02 May 2024 23:23:54 GMT</pubDate></item><item><title><![CDATA[git 导出变动文件，包括目录结构]]></title><description><![CDATA[ 
 <br><br>git 下执行以下命令：<br>git diff --name-only | xargs zip diff-changes.zip
复制<br>也可以使用 tar -cvf<br>如果比较两个提交点，可以这样：<br>git diff --name-only 51828d5e34534dfgsfgsdfgsdfgea72bbb0bd3d7 ceeacb036db34534dfgsdgsfdgsdfcc0290a76aa | xargs zip diff_343443.zip
复制<br>如果直接导入到某个文件夹，可以这样：<br>git diff --name-only | xargs zip /tmp/tmp.zip
unzip -o /tmp/tmp.zip -d  /path/target
rm -f /tmp/tmp.zip
复制<br>unzip -o 当目标文件已存在则覆盖，-n 则不覆盖 <br>也可以导入前先清空目标文件，比如：<br>git diff --name-only | xargs zip /tmp/tmp.zip
rm -rf /path/target/*
unzip -o /tmp/tmp.zip -d /path/target
rm -f /tmp/tmp.zip
复制<br><br>注意：以上命令只适用于修改的文件，如果是新增的和重命名的就不行了，修改，新增和重名可以用下面的命令（推荐）：<br>git status --porcelain | awk '{if ($1 == "M" || $1 == "A" || $1 == "??") print $2}' | xargs zip diff-changes.zip
复制<br><br>如果仅导出删除的文件，可以使用以下命令：<br>git status --porcelain | awk '{if ($1 == "D") print $2}' | xargs zip diff-changes.zip
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/git/git-导出变动文件，包括目录结构.html</link><guid isPermaLink="false">开发笔记/git/git 导出变动文件，包括目录结构.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 25 Apr 2024 15:35:22 GMT</pubDate></item><item><title><![CDATA[Git 创建一个裸仓库，作为简易的 Git 服务器]]></title><description><![CDATA[ 
 <br>可以使用 Git 命令行工具在本地创建一个裸仓库（bare repository），作为简易的 Git 服务器。这种做法适用于小型团队或临时场景，不涉及到复杂的服务器配置和管理。以下是如何使用 Git 命令创建一个本地裸仓库作为服务器：<br>
<br>
创建一个目录用于存放裸仓库：
mkdir /path/to/server/repo.git
复制
选择一个合适的路径（例如 /srv/git/project.git 或 C:\GitServer\project.git），创建一个目录来存放裸仓库。

<br>
初始化裸仓库：
cd /path/to/server/repo.git
git init --bare
复制
进入刚创建的目录，使用 git init --bare 命令初始化一个裸仓库。裸仓库不包含工作目录，仅包含 Git 元数据和历史记录，适合作为共享的远程仓库。

<br>
设置仓库权限（可选，仅限 Unix-like 系统）：
如果您希望其他用户能够通过 SSH 访问这个仓库，需要确保仓库目录对其他用户有足够的读写权限。可以使用以下命令（以 git 用户为例）：
chown -R git:git /path/to/server/repo.git
chmod -R 770 /path/to/server/repo.git
复制
这里假设您有一个名为 git 的系统用户专门用于管理 Git 仓库。请根据实际情况调整用户和组名以及权限设置。

<br>
配置用户 SSH 访问（可选）：
如果您选择了 SSH 访问方式，需要为每个需要访问此仓库的用户配置 SSH 公钥访问。每个用户在其本地计算机上生成 SSH 公钥（一般为 ~/.ssh/id_rsa.pub），然后将公钥内容追加到服务器上仓库目录的 authorized_keys 文件中：
cat ~/.ssh/id_rsa.pub | ssh git@your_server 'cat &gt;&gt; /path/to/server/repo.git/.ssh/authorized_keys'
复制
这里假设您的服务器用户名为 git，your_server 是服务器地址，/path/to/server/repo.git 是裸仓库路径。请根据实际情况调整。

<br>完成以上步骤后，您就在本地创建了一个可以用作 Git 服务器的裸仓库。其他用户可以使用以下命令将其克隆为远程仓库：<br>git clone git@your_server:/path/to/server/repo.git
复制<br>或者，如果裸仓库对外暴露 HTTP(S)服务：<br>git clone http(s)://your_server/path/to/server/repo.git
复制<br>请注意，这种方式虽然简单，但对于生产环境或大型团队，通常建议使用专业的 Git 服务器软件（如 Gitea、Gogs、GitLab、GitHub Enterprise 等）或云服务（如 GitHub、GitLab.com、Azure DevOps 等），它们提供了更丰富的管理功能、安全保障和性能优化。]]></description><link>https://wxkj.asia/mynote/开发笔记/git/git-创建一个裸仓库，作为简易的-git-服务器.html</link><guid isPermaLink="false">开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 25 Apr 2024 12:46:40 GMT</pubDate></item><item><title><![CDATA[解决git status不能显示中文]]></title><description><![CDATA[ 
 <br>解决 git status 不能显示中文<br>
现象：<br>git status 查看有改动但未提交的文件时总只显示数字串，显示不出中文文件名，非常不方便。如下图：<br><img alt="解决git status不能显示中文-20240307002636285.webp" src="https://wxkj.asia/mynote/lib/media/解决git-status不能显示中文-20240307002636285.webp"><br>原因：<br>在默认设置下，中文文件名在工作区状态输出，中文名不能正确显示，而是显示为八进制的字符编码。<br>解决办法：<br>将 git 配置文件 core.quotepath 项设置为 false。quotepath 表示引用路径，加上--global 表示全局配置<br>git bash 终端输入命令：<br>git config --global core.quotepath false]]></description><link>https://wxkj.asia/mynote/开发笔记/git/解决git-status不能显示中文.html</link><guid isPermaLink="false">开发笔记/git/解决git status不能显示中文.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/解决git-status不能显示中文-20240307002636285.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/解决git-status不能显示中文-20240307002636285.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[快速解决 Resource not accessible by integration]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://blog.csdn.net/linZinan_/article/details/133916547" rel="noopener" class="external-link" href="https://blog.csdn.net/linZinan_/article/details/133916547" target="_blank">blog.csdn.net</a>
<br><br>最近好久没有写博客了，今天在写开源项目 <a data-tooltip-position="top" aria-label="https://github.com/Undertone0809/python-package-template" rel="noopener" class="external-link" href="https://github.com/Undertone0809/python-package-template" target="_blank">python-package-template</a> 的时候，正好遇到一个问题，记录一下吧。本文将介绍 Resource not accessible by integration 的几种解决方案。<br>
也欢迎大家体验一下 <a data-tooltip-position="top" aria-label="https://github.com/Undertone0809/python-package-template" rel="noopener" class="external-link" href="https://github.com/Undertone0809/python-package-template" target="_blank">python-package-template</a> 这个项目，一个十分标准化的 python project 模板，内置 black 代码格式化、单元测试、github actions 等方便和强大的工具，个人认为认真学完 <a data-tooltip-position="top" aria-label="https://github.com/Undertone0809/python-package-template" rel="noopener" class="external-link" href="https://github.com/Undertone0809/python-package-template" target="_blank">python-package-template</a> 里面的东西，在工程规范上已经可以媲美一个从业几年的专业的 python 软开工程师了。
<br><br>问题是我在 github actions 执行 <a data-tooltip-position="top" aria-label="https://github.com/Undertone0809/python-package-template/actions/runs/6545151606/job/17773034301" rel="noopener" class="external-link" href="https://github.com/Undertone0809/python-package-template/actions/runs/6545151606/job/17773034301" target="_blank">Greetings</a> 的这个 workflow 的时候发生了 Resource not accessible by integration 的问题，这个 Greetings 里面用到了 <a data-tooltip-position="top" aria-label="https://github.com/actions/first-interaction" rel="noopener" class="external-link" href="https://github.com/actions/first-interaction" target="_blank">actions/first-interaction</a> , 其是一个筛选初次贡献者的拉取请求和问题的操作。<br>我遇到的这个问题，简单来说，就是 github actions 没有对应的权限，无法访问相关的资源，在我的项目中，Greetings 的<a data-tooltip-position="top" aria-label="https://github.com/Undertone0809/python-package-template/blob/v0.1.3/.github/workflows/greetings.yml" rel="noopener" class="external-link" href="https://github.com/Undertone0809/python-package-template/blob/v0.1.3/.github/workflows/greetings.yml" target="_blank">代码</a>需要 bot 在 pr 和 issue 中有写的权限，而这个权限 github repo 默认并不提供，需要手动修改。<br><img alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/a21a32cea5594e1a9d6efa5413e81a76.png" referrerpolicy="no-referrer"><br>在 <a data-tooltip-position="top" aria-label="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions" rel="noopener" class="external-link" href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions" target="_blank">github docs</a> 中对 workflows 的 permissions 有详细的描述，大家可以先了解一下相关的概念。<br>
您可以使用权限来修改授予GITHUB_TOKEN的默认权限，根据需要添加或删除访问权限，以便只允许最低所需的访问权限。有关更多信息，请参阅“自动令牌身份验证”。
<br>
您可以将权限作为顶级键使用，应用于工作流中的所有作业，或者在特定作业中使用。当您在特定作业中添加权限键时，使用GITHUB_TOKEN的所有操作和运行命令将获得您指定的访问权限。有关更多信息，请参阅<a data-tooltip-position="top" aria-label="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idpermissions" rel="noopener" class="external-link" href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idpermissions" target="_blank">jobs.&lt;job_id&gt;.permissions</a>。
<br>
对于下表中显示的每个可用范围，您可以分配其中一种权限：读取、写入或无。如果您为其中任何范围指定了访问权限，则所有未指定的范围将被设置为无。<br>
<img alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/1a801785bb244277bbcf376188b94334.png" referrerpolicy="no-referrer"><br>
<img alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/1096c6c7dbf74bad863f60dad7554249.png" referrerpolicy="no-referrer">
<br>上面说了那么多，简单来说就是 workflow 中使用的 GITHUB_TOKEN 是有一些默认权限的，其并不是一个 root，因此如果你的 workflow 中有一些更加复杂的操作，就需要额外进行授权。<br>在 <a data-tooltip-position="top" aria-label="https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token" rel="noopener" class="external-link" href="https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token" target="_blank">Permissions for the GITHUB_TOKEN</a> 中，我们可以看到 GITHUB_TOKEN 的默认权限。<br><img alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/94ae94ba35ae472a87afce9f0cb243fa.png" referrerpolicy="no-referrer"><br><br>逛了一下 <a data-tooltip-position="top" aria-label="https://github.com/actions/first-interaction" rel="noopener" class="external-link" href="https://github.com/actions/first-interaction" target="_blank">actions/first-interaction</a> 中的 issue，还是有人有遇到相同的问题，<a rel="noopener" class="external-link" href="https://github.com/actions/first-interaction/issues/10" target="_blank">https://github.com/actions/first-interaction/issues/10</a> 这个 issue 激烈讨论了这个事情，所以最后我也没看出什么东西来，最后在 <a rel="noopener" class="external-link" href="https://github.com/orgs/community/discussions/60820" target="_blank">https://github.com/orgs/community/discussions/60820</a> 中找到了解决方案。<br>
<img alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/cb9fcce5e49b4b168aa2481f339021ea.png" referrerpolicy="no-referrer"><br>上面这个用户虽然和我用的不是一个 action，但是问题如出一辙，解决方案如下：<br>
<img alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/dbb87ff82b3c496b87cefa0d176f35c4.png" referrerpolicy="no-referrer"><br><img alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/4db5d569217c42f08911d7e50476f174.png" referrerpolicy="no-referrer"><br>
给权限之后就没问题了。<br><br>
<br><a data-tooltip-position="top" aria-label="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions" rel="noopener" class="external-link" href="https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions" target="_blank">github docs</a>
<br><a data-tooltip-position="top" aria-label="https://github.com/Undertone0809/python-package-template" rel="noopener" class="external-link" href="https://github.com/Undertone0809/python-package-template" target="_blank">python-package-template</a>
<br><a rel="noopener" class="external-link" href="https://github.com/orgs/community/discussions/60820" target="_blank">https://github.com/orgs/community/discussions/60820</a>
]]></description><link>https://wxkj.asia/mynote/开发笔记/git/快速解决-resource-not-accessible-by-integration.html</link><guid isPermaLink="false">开发笔记/git/快速解决 Resource not accessible by integration.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate><enclosure url="https://img-blog.csdnimg.cn/a21a32cea5594e1a9d6efa5413e81a76.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://img-blog.csdnimg.cn/a21a32cea5594e1a9d6efa5413e81a76.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[【mac】shell小技巧将`终]]></title><description><![CDATA[ 
 <br>【mac】shell小技巧:将终端输出复制到剪贴板Mac OS X<br><br><br>如果您要在终端和任何其他应用程序之间来回切换，那么从命令行访问系统剪贴板内容将非常有用。如果您使用的是Mac，则有内置命令pbcopy和pbpaste。<br>ls | pbcopy
复制<br>或者<br>echo "Copy this into Mac's clipboard" | pbcopy
复制<br>如果随后还需要使用终端将其粘贴到文件中，请使用<br>pbpastepbpaste &gt; ~/some-file.txt
复制<br><br>但是在Ubuntu中，这些功能不可用。您需要安装一个名为xclip的小型实用程序。继续安装。<br><br>sudo apt-get install xclip
复制<br><br>现在，您可以使用xclip将任何文本（或输出一个命令）复制到剪贴板中。要将fruits.txt的内容复制到剪贴板，<br>cat fruits.txt | xclip
复制<br>如果要查看剪贴板的内容，可以使用<br>xclip -o
复制<br>此复制和粘贴将仅在终端中可用，如果您切换到另一个应用程序并尝试粘贴到该应用程序中，它将无法工作。<br>如果要粘贴到另一个应用程序中，则需要像这样复制<br>cat fruits.txt | xclip -selection clipboard
复制<br>现在，您可以切换到任何其他应用程序，也可以粘贴（CTRL + V）内容。<br><br>文章来源: <a rel="noopener" class="external-link" href="https://blog.csdn.net/qq_43331089/article/details/129479814" target="_blank">https://blog.csdn.net/qq_43331089/article/details/129479814</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/mac/【mac】shell小技巧将`终.html</link><guid isPermaLink="false">开发笔记/mac/【mac】shell小技巧将`终.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[一、使用场景]]></title><description><![CDATA[ 
 LaunchDaemon是MacOS的一套统一的开源服务管理框架，用于启动、停止和管理后台程序、应用程序、进程和脚本。通过创建.plist文件并添加相关配置，可以实现开机自启动脚本。可以通过命令加载、卸载、启动和停止LaunchDaemon。]]></description><link>https://wxkj.asia/mynote/开发笔记/mac/mac开机启动配置详解.html</link><guid isPermaLink="false">开发笔记/mac/Mac开机启动配置详解.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[mac下shell弹出下拉选择框]]></title><description><![CDATA[ 
 <br>#!/bin/bash
osascript -e '
tell application "System Events"
    activate
    set userChoice to choose from list {"Option 1", "Option 2", "Option 3"} with title "Select an Option" with prompt "Please select:"
    return userChoice
end tell'

read -r selectedOption &lt; &lt;(osascript -e '...') # 将AppleScript返回的结果存入bash变量
echo "You chose: $selectedOption"
复制<br><img alt="mac下shell弹出下拉选择框-20240302035305773.webp" src="https://wxkj.asia/mynote/lib/media/mac下shell弹出下拉选择框-20240302035305773.webp">]]></description><link>https://wxkj.asia/mynote/开发笔记/mac/mac下shell弹出下拉选择框.html</link><guid isPermaLink="false">开发笔记/mac/mac下shell弹出下拉选择框.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/mac下shell弹出下拉选择框-20240302035305773.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/mac下shell弹出下拉选择框-20240302035305773.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[mac上shell扫描目录并放到弹框列表中]]></title><description><![CDATA[ 
 <br>result=$(Find /Users/wish/_data/我的笔记 -not -path '*/\.*' -type d -exec printf "%s/\n" {} \;)
result=$(echo $result)


# 使用 IFS 空格来分割字符串，并将结果赋值给数组
IFS=' ' read -ra options &lt;&lt;&lt; "$result"

# 将Bash数组转换为AppleScript可接受的格式
escaped_options=$(IFS=','; echo "${options[*]}" | sed 's/,/","/g;s/^/"/;s/$/"/')

# 使用AppleScript弹出选择列表
read -r selectedOption &lt; &lt;(osascript -e "
    tell application \"System Events\"
        activate
        set userChoice to choose from list (${escaped_options}) with title \"请选择目标文件夹\" with prompt \"请选择：\"
        return userChoice as text
    end tell
")

if [ "$selectedOption" == "false" ]; then
    echo '你放弃了本次移动，请您手动去下载文件夹选择移动！';
else
    echo "You chose: $selectedOption"
fi

# 获取进程ID
pid=$(pgrep -f myprocess)

# 检查是否找到了进程
if [ -n "$pid" ]; then
    # 杀死进程
    kill "$pid"
fi
复制<br>Shell 弹窗确认框<br># alert
osascript -e 'display alert "您放弃了本次移动，您可以去下载文件夹手动移动！" buttons {"好的"} default button 1'

# 重要通知
osascript -e 'display dialog "您放弃了本次移动，您可以去下载文件夹手动移动！" buttons {"好的"} default button 1 with title "温馨提醒"'

复制<br>Shell 通知<br>osascript -e "display notification \"$filename 已保存成功！\" with title \"提示：\""
复制<br>shelll 杀死进程<br># 获取进程ID
pid=$(pgrep -f fswatch)

# 检查是否找到了进程
if [ -n "$pid" ]; then
    # 杀死进程
    kill "$pid"
fi

复制]]></description><link>https://wxkj.asia/mynote/开发笔记/mac/mac上shell扫描目录并放到弹框列表中.html</link><guid isPermaLink="false">开发笔记/mac/mac上shell扫描目录并放到弹框列表中.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[<strong>简介</strong>]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://juejin.cn/post/7221089899280384059" rel="noopener" class="external-link" href="https://juejin.cn/post/7221089899280384059" target="_blank">juejin.cn</a>
<br><br><a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Fpoloyy%2Fp%2F15170944.html" rel="noopener" class="external-link" title="https://www.cnblogs.com/poloyy/p/15170944.html" href="https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Fpoloyy%2Fp%2F15170944.html" target="_blank">brew 常用命令</a><br>Homebrew 是一款自由及开放源代码的软件包管理系统，用以简化 macOS 和 linux 系统上的软件安装过程。它拥有安装、卸载、更新、查看、搜索等很多实用的功能，通过简单的一条指令，就可以实现包管理，十分方便快捷。<br>Homebrew 主要有四个部分组成: brew、homebrew-core 、homebrew-bottles、homebrew-cask。<br><br><br>官网方法：macOS（或 Linux）缺失的软件包的管理器 — Homebrew<br>/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"


复制<br>注：国内安装 homebrew<br>由于众所周知的原因，国内使用官方安装方法有问题，网上搜的帖子，找到方便的安装方法，感谢网友分享：<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Fliyihua%2Fp%2F12753163.html" rel="noopener" class="external-link" title="https://www.cnblogs.com/liyihua/p/12753163.html" href="https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Fliyihua%2Fp%2F12753163.html" target="_blank">Mac 安装 brew（最新教程，绝对可行，一行代码搞定，不报错） - LeeHua - 博客园</a><br>感谢脚本大侠：<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F111014448" rel="noopener" class="external-link" title="https://zhuanlan.zhihu.com/p/111014448" href="https://link.juejin.cn?target=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F111014448" target="_blank">金牛肖马</a><br>国内安装 brew(如果已经安装会顺便卸载就得 brew)，直接执行脚本：<br>/bin/zsh -c "$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"


复制<br>需要输入密码授权一下，并且会让你选择镜像源，我选择的中科大的，1。<br><br><br># 替换各个源
$ git -C "$(brew --repo)" remote set-url origin https://mirrors.ustc.edu.cn/brew.git
$ git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git
$ git -C "$(brew --repo homebrew/cask)" remote set-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git

# zsh 替换 brew bintray 镜像
$ echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' &gt;&gt; ~/.zshrc
$ source ~/.zshrc

# bash 替换 brew bintray 镜像
$ echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles' &gt;&gt; ~/.bash_profile
$ source ~/.bash_profile

# 刷新源
$ brew update


复制<br><br># 替换各个源
$ git -C "$(brew --repo)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git
$ git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git
$ git -C "$(brew --repo homebrew/cask)" remote set-url origin https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git

# zsh 替换 brew bintray 镜像
$ echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles' &gt;&gt; ~/.zshrc
$ source ~/.zshrc

# bash 替换 brew bintray 镜像
$ echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles' &gt;&gt; ~/.bash_profile
$ source ~/.bash_profile

# 刷新源
$ brew update


复制<br><br># 查看 brew.git 当前源
$ cd "$(brew --repo)" &amp;&amp; git remote -v
origin    https://github.com/Homebrew/brew.git (fetch)
origin    https://github.com/Homebrew/brew.git (push)

# 查看 homebrew-core.git 当前源
$ cd "$(brew --repo homebrew/core)" &amp;&amp; git remote -v
origin    https://github.com/Homebrew/homebrew-core.git (fetch)
origin    https://github.com/Homebrew/homebrew-core.git (push)

# 修改 brew.git 为阿里源
$ git -C "$(brew --repo)" remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git

# 修改 homebrew-core.git 为阿里源
$ git -C "$(brew --repo homebrew/core)" remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git

# zsh 替换 brew bintray 镜像
$ echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles' &gt;&gt; ~/.zshrc
$ source ~/.zshrc

# bash 替换 brew bintray 镜像
$ echo 'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles' &gt;&gt; ~/.bash_profile
$ source ~/.bash_profile

# 刷新源
$ brew update


复制<br><br># 重置 brew.git 为官方源
$ git -C "$(brew --repo)" remote set-url origin https://github.com/Homebrew/brew.git

# 重置 homebrew-core.git 为官方源
$ git -C "$(brew --repo homebrew/core)" remote set-url origin https://github.com/Homebrew/homebrew-core.git

# 重置 homebrew-cask.git 为官方源
$ git -C "$(brew --repo homebrew/cask)" remote set-url origin https://github.com/Homebrew/homebrew-cask

# zsh 注释掉 HOMEBREW_BOTTLE_DOMAIN 配置
$ vi ~/.zshrc
# export HOMEBREW_BOTTLE_DOMAIN=xxxxxxxxx

# bash 注释掉 HOMEBREW_BOTTLE_DOMAIN 配置
$ vi ~/.bash_profile
# export HOMEBREW_BOTTLE_DOMAIN=xxxxxxxxx

# 刷新源
$ brew update


复制<br><br>
Mac 全自动安装 brew 一键配置国内镜像源：<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2FCaptainJava%2Farticle%2Fdetails%2F109132783" rel="noopener" class="external-link" title="https://blog.csdn.net/CaptainJava/article/details/109132783" href="https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2FCaptainJava%2Farticle%2Fdetails%2F109132783" target="_blank">blog.csdn.net/CaptainJava…</a>
]]></description><link>https://wxkj.asia/mynote/开发笔记/mac/mac-下-brew-切换为国内源.html</link><guid isPermaLink="false">开发笔记/mac/Mac 下 brew 切换为国内源.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[fswatch的使用]]></title><description><![CDATA[ 
 <br>fswatch -0 -x -r -e /Users/wish/_data/webpage/.DS_Store /Users/wish/_data/webpage/| xargs -0 -n1 -I {} /Users/wish/bin/ftp_upload/ftpupload.sh "{}"
复制<br>fswatch  -0  ~/motion-detection | xargs -0 -n1 -I {} ./detectmotion.sh "{}"<br><a data-tooltip-position="top" aria-label="https://stackoverflow.com/questions/42410454/accepting-name-of-changed-file-in-fswatch-with-xargs-in-osx" rel="noopener" class="external-link" href="https://stackoverflow.com/questions/42410454/accepting-name-of-changed-file-in-fswatch-with-xargs-in-osx" target="_blank">Fetching Title#fo66</a><br>fswatch --batch-marker=EOF -xn . | while read file event; do 
   echo $file $event
   if [ $file = "EOF" ]; then 
      echo TRIGGER
   fi
done
复制<br>If you want to save the names of the affected files in a list, you can do that like this:<br>#!/bin/bash
fswatch --batch-marker=EOF -xn . | while read file event; do
    if [ $file = "EOF" ]; then
       echo TRIGGER
       echo Files: "${list[@]}"
       list=()
    else
       echo $file $event
       list+=($file)
    fi
done
复制<br><a data-tooltip-position="top" aria-label="https://stackoverflow.com/questions/35395699/how-to-print-file-path-that-caused-fswatch-to-do-something" rel="noopener" class="external-link" href="https://stackoverflow.com/questions/35395699/how-to-print-file-path-that-caused-fswatch-to-do-something" target="_blank">linux - How to print file path that caused fswatch to do something - Stack Overflow</a><br>#!/bin/bash

# Usage:
# file-event-watch command-to-run path1 [path2, ...]
# TODO: Add fswatch event option to enable/disable different event types

cmd=$1
shift
files=$@
$cmd &amp;&amp; fswatch -0 -x -r $files | {
  while read -d "" event; do
    case $event in
      *Created|*Updated|*Removed|*Renamed|*OwnerModified|*AttributeModified|*MovedFrom|*MovedTo )
        # https://github.com/emcrisostomo/fswatch/blob/master/src/fswatch.cpp
        # If it's one of these events, run cmd, else ignore it
        $cmd
        ;;
    esac
  done
}
复制<br><a data-tooltip-position="top" aria-label="https://gist.github.com/cmbankester/48a44fa55b2db85827ef" rel="noopener" class="external-link" href="https://gist.github.com/cmbankester/48a44fa55b2db85827ef" target="_blank">Filter fswatch events by type · GitHub</a>]]></description><link>https://wxkj.asia/mynote/开发笔记/mac/fswatch的使用.html</link><guid isPermaLink="false">开发笔记/mac/fswatch的使用.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[AppleScript 隐藏执行shell脚本文件]]></title><description><![CDATA[ 
 <br>-- 假设您的脚本文件名为 "MyScript.scpt" 并且存放在桌面上
set scriptFile to POSIX path of (path to desktop as string) &amp; "MyScript.scpt"

-- 加载脚本文件
set loadedScript to load script file scriptFile

-- 运行加载后的脚本
try
    run script loadedScript
on error errorMessage number errorNumber
    display dialog "执行脚本时发生错误: " &amp; errorMessage &amp; " (错误号: " &amp; errorNumber &amp; ")"
end try
复制]]></description><link>https://wxkj.asia/mynote/开发笔记/mac/applescript-隐藏执行shell脚本文件.html</link><guid isPermaLink="false">开发笔记/mac/AppleScript 隐藏执行shell脚本文件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item><item><title><![CDATA[mysql 数据库并发控制的内部实现机制和原理是什么]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:mysql" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#mysql</a> 
 <br><a href="https://wxkj.asia/mynote?query=tag:mysql" class="tag" target="_blank" rel="noopener">#mysql</a><br>MySQL 数据库并发控制主要依赖于锁机制和多版本并发控制（MVCC）来实现。以下是 MySQL 数据库并发控制的内部实现机制和原理的详细说明：<br>
<br>
锁机制：<br>
MySQL 提供了不同级别的锁，包括全局锁、表级锁和行级锁。

<br>全局锁：影响整个数据库系统，例如 FLUSH TABLES WITH READ LOCK 命令会锁定所有表，使得整个数据库处于只读状态。
<br>表级锁：影响整个表，MyISAM 和 MEMORY 存储引擎使用表级锁。表级锁的并发性不如行级锁，但在某些读多写少的场景下效率较高。
<br>行级锁：影响单个行，InnoDB 存储引擎使用行级锁，提供了最高级别的并发性，但管理开销也最大。行级锁分为共享锁（S 锁）和排他锁（X 锁），共享锁允许多个事务读取同一数据，排他锁则只允许一个事务对数据进行写操作。

锁的粒度越小，系统的并发能力越强，但同时管理锁的开销也越大。

<br>
多版本并发控制（MVCC）：<br>
MVCC 是 InnoDB 存储引擎用来实现高级别并发控制的技术。它通过保留数据的旧版本来允许读写操作并发执行，而不会相互阻塞。

<br>
MVCC 工作原理：<br>
当一个事务开始时，它会得到一个唯一的事务 ID。在 MVCC 中，每行数据都可能有多个版本，每个版本都有一个创建版本号和删除版本号。这些版本号对应于事务 ID。
当事务读取数据时，它只会看到创建版本号小于等于自己事务 ID 的数据，并且这些数据的删除版本号要么未定义，要么大于自己的事务 ID。这样，事务就可以读取到它开始时刻的一致性视图，而不会被其他并发执行的事务所影响。
当事务更新数据时，它会生成数据的新版本，并设置新版本的创建版本号为当前事务 ID。同时，旧版本的删除版本号会被设置为当前事务 ID。

<br>
快照读与当前读：<br>
快照读（Snapshot Read）是指读取的是数据的旧版本，即事务开始时的数据快照，不需要等待其他事务释放锁。<br>
当前读（Current Read）是指读取的是数据的最新版本，这通常涉及到获取锁，比如 UPDATE、DELETE 操作。

<br>
可见性规则：<br>
在 InnoDB 中，一个事务对于另一个事务的修改是否可见，取决于两个事务的 ID 以及修改的版本号。这个规则确保了事务的隔离级别得以实现。



<br>
隔离级别：<br>
MySQL 支持四种事务隔离级别：READ UNCOMMITTED、READ COMMITTED、REPEATABLE READ 和 SERIALIZABLE。不同的隔离级别对应不同的锁策略和 MVCC 行为，以平衡一致性和并发性之间的关系。

<br>READ UNCOMMITTED：最低的隔离级别，允许事务读取未提交的数据变动，可能会导致脏读。
<br>READ COMMITTED：允许事务只读取已经提交的数据变动，解决了脏读问题。
<br>REPEATABLE READ：保证在同一个事务中多次读取同样记录的结果是一致的，除非数据是由本事务自己修改的。这是 MySQL 的默认隔离级别。
<br>SERIALIZABLE：最高的隔离级别，强制事务串行执行，避免了幻读。


<br>并发控制的目的是为了保证数据库系统在多用户环境下的数据一致性和事务的隔离性，同时尽可能地提高系统的并发性能。MySQL 通过组合使用锁机制和 MVCC 来实现这一目标。]]></description><link>https://wxkj.asia/mynote/开发笔记/数据库/mysql-数据库并发控制的内部实现机制和原理是什么.html</link><guid isPermaLink="false">开发笔记/数据库/mysql 数据库并发控制的内部实现机制和原理是什么.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[色轮_色环_色彩搭配 - Canva 可画]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://www.canva.cn/colors/color-wheel/" rel="noopener" class="external-link" href="https://www.canva.cn/colors/color-wheel/" target="_blank">www.canva.cn</a>
<br>
色轮展示了颜色之间的关系，让色彩搭配变得更轻松。
<br><br>有没有想过，设计师和艺术家是怎么找到完美配色的？<br>他们使用色彩理论。色彩理论是艺术和科学的结合，用来确定哪些颜色搭配在一起看起来会和谐又美观。1666 年，英国科学家牛顿在三棱镜分光实验中得到一条色带排列成的色彩环。<br>色轮是色彩理论的基础，用于表示每种颜色之间的相互关系。<br>搭配起来非常好看的颜色叫做色彩组合。艺术家和设计师们用这些颜色来创造特定的外观或氛围，你也可以利用色轮和色彩组合的规则来寻找和谐的配色。<br>色轮分为两种，艺术家经常使用 RYB 色轮或者红、黄、蓝色轮来找到颜料的最佳组合。在线设计领域常用 RGB 色轮或者红、绿、蓝色轮，Canva 提供的色轮就是一个 RGB 色轮。设计师可以用这种色轮来找到显示在电子屏幕中效果最好的配色。<br><br>色轮的基础是红、黄和蓝这三种颜色，这些颜色叫做三原色，因为它们是唯一无法混合其他颜色调配出来的颜色。<br>将色轮上相邻的颜色等量地混合，可以得到三间色。例如，黄色加蓝色得到绿色，蓝色加红色得到紫色，红色加黄色得到橙色。<br>将色轮空白两边的颜色按等量混合，可以得到第三色。例如，黄色加橙色可以得到橙黄色，蓝色和绿色可以得到蓝绿色。<br>用第三色填满所有空白，色轮就制作完成了。如果你再往不同的纯色中添加黑色或白色，还可以得到颜色的暗色或亮色版本，这样可以大大丰富色轮。<br><br>有了色轮之后，我们可以根据色轮来创建色彩搭配组合，下面是几种常见的配色组合方式。<br><br>同类色，指的是色轮中相距 45° 的色彩搭配。同类色搭配比同色系搭配显得颜色更丰富一些，同时色相上的变化比较柔和，颜色过渡看起来也很自然细腻。<br><br>对比色，指的是色轮中相距 120° 的色彩搭配。对比色搭配能够突出视觉中心，小面积使用对比色可以增强画面带给人的视觉冲击力。<br><br>互补色，指的是色轮中相距 180° 的色彩搭配。互补色搭配是所有色彩搭配中对比度最高、冲击力最强烈的一种，常见的使用方法是一种作为主色，另一种用于强调。<br><br>色彩不仅是现实存在，还是文化领域中的一种存在，因此从某种意义来说，关于色彩的介绍永无止境。如果你想了解更多色彩背后的秘密，请浏览我们的色彩意义页面，这里为你奉上百种颜色的历史、含义以及搭配。如果你正在寻找能够激发灵感的配色组合，请查看我们的图片调色板生成器，或浏览数以千计的色卡。]]></description><link>https://wxkj.asia/mynote/开发笔记/ui设计/色轮_色环_色彩搭配-canva-可画.html</link><guid isPermaLink="false">开发笔记/UI设计/色轮_色环_色彩搭配 - Canva 可画.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate></item><item><title><![CDATA[优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://mastergo.com/help/common-problem/configure-webgl/" rel="noopener" class="external-link" href="https://mastergo.com/help/common-problem/configure-webgl/" target="_blank">mastergo.com</a>
<br>
如何解决在 MasterGo 查看或编辑设计稿时，因 WebGL 被禁用导致的卡顿或无法打开等问题。
<br>如果你使用 Chrome 浏览器访问 MasterGo，不论查看或是编辑设计稿，强烈建议按照下属指引，优化浏览器的设置项。 这样做，可以确保更加稳定的使用 MasterGo，以及有效改善应用的性能表现：<br>
<br>解决文件无法打开的问题。
<br>显著改善在画布操作时的流畅度，减少卡顿感。
<br>建议始终使用最新版本的 Chrome 浏览器，<a data-tooltip-position="top" aria-label="https://support.google.com/chrome/answer/95414" rel="noopener" class="external-link" href="https://support.google.com/chrome/answer/95414" target="_blank">了解如何更新 Chrome。</a><br><br>如果打开文件时，弹出这个弹窗，表示未启用硬件加速模式。 <img src="https://static.mastergo.com/help-center/d6f5292b/img/webgl01.png" referrerpolicy="no-referrer"><br>
<br>在浏览器地址栏输入这个地址并按回车：chrome://settings/system。
<br>在系统设置界面，确保  使用硬件加速模式（如果可用） 的开关被打开。

<br>注意：打开此开关，需要重新启动浏览器才能生效，按浏览器提示操作即可，或者手动重启浏览器。


<br><img src="https://static.mastergo.com/help-center/d6f5292b/img/webgl02.png" referrerpolicy="no-referrer"><br>完成上述步骤后，重新试试能否正常打开文件，如果问题依然存在，请往下看。<br>
<br>在浏览器地址栏输入这个地址并按回车：chrome://flags。
<br>找到 Override software rendering list 这一项，将其设置为 Enabled。
<br><img src="https://static.mastergo.com/help-center/d6f5292b/img/webgl03.png" referrerpolicy="no-referrer"><br>
<br>注意：修改此项设置，需要重新启动浏览器才能生效。
<br>注意：激活此项设置后，如果发现经常出现花屏现象，影响正常使用，请重新改回 Disabled，同时可以向我们反馈遇到的具体现象。
<br>完成上述步骤后，重新试试能否正常打开文件。<br><br>如果打开文件时，看到这个提示，表示当前未使用 OpenGL 图形 API。 <img src="https://static.mastergo.com/help-center/d6f5292b/img/webgl04.png" referrerpolicy="no-referrer"><br>
<br>在浏览器地址栏输入这个地址并按回车：chrome://flags。
<br>找到 Choose ANGLE graphics backend 这一项，将其设置为 OpenGL。
<br><img src="https://static.mastergo.com/help-center/d6f5292b/img/webgl05.png" referrerpolicy="no-referrer"><br>
<br>注意：修改此项设置，需要重新启动浏览器才能生效。
<br>完成上述步骤后，提示不再出现，且性能会有显著改善。<br>再次提醒，开启硬件加速模式以及修改图形接口，均需要重启浏览器才能生效。<br><br>如果遇到应用界面被异常放大或缩小，导致界面遮挡或者显示模糊，请检查以下设置：<br>
<br>在浏览器地址栏输入这个地址并按回车：chrome://settings/appearance。
<br>确保网页缩放比例为 100%，否则可能出现界面遮挡或者模糊等问题
<br><img src="https://static.mastergo.com/help-center/d6f5292b/img/webgl06.png" referrerpolicy="no-referrer"><br>注意：<br>
<br>上述设置优化仅适用于 Chrome 浏览器，建议始终使用最新版本的 Chrome 浏览器。
<br>如果需要使用其他浏览器比如 Edge 或 360，请确保安装使用相应的 Chrome 内核版本。
<br>使用 Chrome 内核的浏览器，设置方式与 Chrome 浏览器大同小异，具体方法可以在搜索引擎查找，或询问浏览器官方客服。
<br>如果无法使用任何 Chrome 内核的浏览器，推荐下载使用 <a data-tooltip-position="top" aria-label="https://mastergo.com/resource" rel="noopener" class="external-link" href="https://mastergo.com/resource" target="_blank">MasterGo 客户端</a>。
<br>👉本篇文章对你是否有帮助？<a data-tooltip-position="top" aria-label="https://wenjuan.feishu.cn/m/cfm?t=sPyetzv9n0Ji-s7r0" rel="noopener" class="external-link" href="https://wenjuan.feishu.cn/m/cfm?t=sPyetzv9n0Ji-s7r0" target="_blank">👍🏻 有帮助 👎🏻 无帮助</a>，我们期待着你的反馈。]]></description><link>https://wxkj.asia/mynote/开发笔记/ui设计/优化浏览器设置以提升性能和使用体验-mastergo-帮助中心.html</link><guid isPermaLink="false">开发笔记/UI设计/优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate><enclosure url="https://static.mastergo.com/help-center/d6f5292b/img/webgl01.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://static.mastergo.com/help-center/d6f5292b/img/webgl01.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[seo优化工具]]></title><description><![CDATA[ 
 <br><br><a data-tooltip-position="top" aria-label="https://chrome.google.com/webstore/detail/view-rendered-source/ejgngohbdedoabanmclafpkoogegdpob?hl=en" rel="noopener" class="external-link" href="https://chrome.google.com/webstore/detail/view-rendered-source/ejgngohbdedoabanmclafpkoogegdpob?hl=en" target="_blank">View Rendered Source</a>&nbsp;可以看到网页的渲染前和渲染后的 HTML 代码，并给出两者的差异。不光如此，还可支持 PC 和 Msite，可模拟 Googlebot。让我看了不禁感叹：这才是真正的 SEO 产品工具！<br><br><a data-tooltip-position="top" aria-label="https://chrome.google.com/webstore/detail/seo-pro-extension/lajfdngpocmchpihjecojjllfjeehgnl" rel="noopener" class="external-link" href="https://chrome.google.com/webstore/detail/seo-pro-extension/lajfdngpocmchpihjecojjllfjeehgnl" target="_blank">SEO Pro extension</a>&nbsp;是个查看网页 SEO 元素的插件，并且使用的是网页渲染后的 HTML 源码，并不是渲染前的。所以可以手动点击，查看网页元素的加载情况。]]></description><link>https://wxkj.asia/mynote/开发笔记/seo优化/seo优化工具.html</link><guid isPermaLink="false">开发笔记/SEO优化/seo优化工具.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 02 May 2024 01:03:29 GMT</pubDate></item><item><title><![CDATA[TinyWebServer——从0到服务器开发！]]></title><description><![CDATA[ 
 <br><br>修改、完整注释、添加功能的项目代码：<br><a rel="noopener" class="external-link" href="https://github.com/white0dew/WebServer" target="_blank">https://github.com/white0dew/WebServer</a><br>它是个什么项目？——Linux下C++轻量级Web服务器，助力初学者快速实践网络编程，搭建属于自己的服务器。<br>
<br>使用 线程池 + 非阻塞socket + epoll(ET和LT均实现) + 事件处理(Reactor和模拟Proactor均实现) 的并发模型
<br>使用状态机解析HTTP请求报文，支持解析GET和POST请求
<br>访问服务器数据库实现web端用户注册、登录功能，可以请求服务器图片和视频文件
<br>实现同步/异步日志系统，记录服务器运行状态
<br>经Webbench压力测试可以实现上万的并发连接数据交换
<br>项目原代码：<a rel="noopener" class="external-link" href="https://github.com/qinguoyi/TinyWebServer" target="_blank">https://github.com/qinguoyi/TinyWebServer</a><br>强无敌！这篇文章是我在学习这个项目时所写的笔记。<br>
<br>基础知识
<br>要开始这个项目，需要对linux编程、网络编程有一定的了解，这方面书籍推荐《Unix网络编程》和《Linux高性能服务器编程》。<br><br>Web服务器一般指网站服务器，是指驻留于因特网上某种类型计算机的程序，可以处理浏览器等Web客户端的请求并返回相应响应——可以放置网站文件，让全世界浏览；可以放置数据文件，让全世界下载。目前最主流的三个Web服务器是Apache、 Nginx 、IIS。服务器与客户端的关系如下：<br><img src="https://pic2.zhimg.com/v2-5f44ef48d790438e604d42def406b38d_r.jpg" referrerpolicy="no-referrer"><br>在本项目中，web请求主要是指HTTP协议，有关HTTP协议知识可以参考<a data-tooltip-position="top" aria-label="https://www.cnblogs.com/an-wen/p/11180076.html" rel="noopener" class="external-link" href="https://www.cnblogs.com/an-wen/p/11180076.html" target="_blank">介绍</a>，HTTP基于TCP/IP，进一步了解请百度。<br><br>客户端与主机之间是如何通信的？——Socket<br>socket起源于Unix，而Unix/Linux基本哲学之一就是“一切皆文件”，都可以用“打开open –&gt; 读写write/read –&gt; 关闭close”模式来操作。Socket就是该模式的一个实现，socket即是一种特殊的文件，一些socket函数就是对其进行的操作（读/写IO、打开、关闭），我们以下客户端获取服务端的时间的例子，来理解socket的使用过程：<br>服务器端代码<br>// 《unix网络编程》的公共头文件
#include    "unp.h"
#include    &lt;time.h&gt;
int main(int argc, char **argv)
{
    int                 listenfd, connfd;
    struct sockaddr_in  servaddr;
    char                buff[MAXLINE];
    time_t              ticks;
    // 创建socket套接字文件描述符
    listenfd = Socket(AF_INET, SOCK_STREAM, 0); 
    bzero(&amp;servaddr, sizeof(servaddr));
    servaddr.sin_family      = AF_INET;
    // 将套接字绑定到所有可用的接口
    // 注htol是主机序转网络字节序，请百度了解
    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
    servaddr.sin_port        = htons(13);   
    // 绑定该socket和地址
    Bind(listenfd, (SA *) &amp;servaddr, sizeof(servaddr));
    // 服务器开始监听这个端口上（创建监听队列）
    Listen(listenfd, LISTENQ);
    // 服务器处理代码
    for ( ; ; ) {
        // 从监听队列中，取出一个客户端连接
        connfd = Accept(listenfd, (SA *) NULL, NULL);
        ticks = time(NULL);
        snprintf(buff, sizeof(buff), "%.24s\r\n", ctime(&amp;ticks));
        Write(connfd, buff, strlen(buff));
        Close(connfd);
    }
}
复制<br>客户端程序<br>// 《unix网络编程》的公共头文件
#include "unp.h"
int main(int argc, char **argv)
{
    int                 sockfd, n;
    char                recvline[MAXLINE + 1];
    struct sockaddr_in  servaddr;
    if (argc != 2)
        err_quit("usage: a.out &lt;IPaddress&gt;");
    // 创建客户端socket
    if ( (sockfd = socket(AF_INET, SOCK_STREAM, 0)) &lt; 0)
        err_sys("socket error");
​
    bzero(&amp;servaddr, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    servaddr.sin_port   = htons(13);    /* daytime server */
    if (inet_pton(AF_INET, argv[1], &amp;servaddr.sin_addr) &lt;= 0)
        err_quit("inet_pton error for %s", argv[1]);
    //尝试连接对应地址的服务器端口
    if (connect(sockfd, (SA *) &amp;servaddr, sizeof(servaddr)) &lt; 0)
        err_sys("connect error");
    // 读取socket中的内容
    while ( (n = read(sockfd, recvline, MAXLINE)) &gt; 0) {
        recvline[n] = 0;    /* null terminate */
        if (fputs(recvline, stdout) == EOF)
            err_sys("fputs error");
    }
    if (n &lt; 0)
        err_sys("read error");
    exit(0);
}
复制<br>TCP服务器与TCP客户端的工作流程见下：<br><img src="https://pic4.zhimg.com/v2-b6ad19238b66284c8b2c9618a88b41cb_r.jpg" referrerpolicy="no-referrer"><br>进一步了解socket可以<a data-tooltip-position="top" aria-label="https://www.cnblogs.com/clschao/articles/9593164.html#part_2" rel="noopener" class="external-link" href="https://www.cnblogs.com/clschao/articles/9593164.html#part_2" target="_blank">参考</a>。<br>试想，如果有多个客户端都想connect服务器，那么服务器如何对这些客户端进行处理？这就需要介绍一下IO复用。<br><br>IO复用指的是在单个进程中通过记录跟踪每一个Socket(I/O流)的状态来同时管理多个I/O流. 发明它的原因，是尽量多的提高服务器的吞吐能力，<a data-tooltip-position="top" aria-label="https://www.zhihu.com/question/32163005/answer/55772739" rel="noopener" class="external-link" href="https://www.zhihu.com/question/32163005/answer/55772739" target="_blank">参考链接</a>。<br>如上文所说，当多个客户端与服务器连接时，这就涉及如何“同时”给每个客户端提供服务的问题。服务器的基本框架如下：<br><img src="https://pic2.zhimg.com/v2-d8b20e486c044d3543eb8ea432492c3d_r.jpg" referrerpolicy="no-referrer"><br>图中的逻辑单元，就是上例中“写入服务器时间”这一功能。要解决多客户端连接的问题，首先得有一个队列来对这个连接请求进行排序存放，而后需要通过并发多线程的手段对已连接的客户进行应答处理。<br>本项目是利用epollIO复用技术实现对监听socket（listenfd）和连接socket（客户请求连接之后的socket）的同时监听。注意I/O复用虽然可以同时监听多个文件描述符，但是它本身是阻塞的，所以为提高效率，这部分通过线程池来实现并发，为每个就绪的文件描述符分配一个逻辑单元（线程）来处理。<br>Unix有五种基本的IO模型：<br>
<br>阻塞式IO（守株待兔）
<br>非阻塞式IO（没有就返回，直到有，其实是一种轮询（polling）操作）
<br>IO复用（select、poll等，使系统阻塞在select或poll调用上，而不是真正的IO系统调用（如recvfrom），等待select返回可读才调用IO系统，其优势就在于可以等待多个描述符就位）
<br>信号驱动式IO（sigio，即利用信号处理函数来通知数据已完备且不阻塞主进程）
<br>异步IO（posix的aio_系列函数，与信号驱动的区别在于，信号驱动是内核告诉我们何时可以进行IO，而后者是内核通知何时IO操作已完成）
<br>对于到来的IO事件（或是其他的信号/定时事件），又有两种事件处理模式：<br>
<br>Reactor模式：要求主线程（I/O处理单元）只负责监听文件描述符上是否有事件发生（可读、可写），若有，则立即通知工作线程，将socket可读可写事件放入请求队列，读写数据、接受新连接及处理客户请求均在工作线程中完成。(需要区别读和写事件)
<br>Proactor模式：主线程和内核负责处理读写数据、接受新连接等I/O操作，工作线程仅负责业务逻辑（给予相应的返回url），如处理客户请求。
<br>通常使用同步I/O模型（如epoll_wait）实现Reactor，使用异步I/O（如aio_read和aio_write）实现Proactor，但是异步IO并不成熟，本项目中使用同步IO模拟proactor模式。有关这一部分的进一步介绍请参考第四章、线程池。<br>PS：什么是同步I/O，什么是异步I/O呢？<br>
<br>同步（阻塞）I/O：等待IO操作完成，才能继续进行下一步操作。这种情况称为同步IO。
<br>异步（非阻塞）I/O：当代码执行IO操作时，它只发出IO指令，并不等待IO结果，然后就去执行其他代码了。一段时间后，当IO返回结果时（内核已经完成数据拷贝），再通知CPU进行处理。（异步操作的潜台词就是你先做，我去忙其他的，你好了再叫我）
<br>IO复用需要借助select/poll/epoll，本项目之所以采用epoll，参考问题（<a data-tooltip-position="top" aria-label="https://stackoverflow.com/questions/17355593/why-is-epoll-faster-than-select" rel="noopener" class="external-link" href="https://stackoverflow.com/questions/17355593/why-is-epoll-faster-than-select" target="_blank">Why is epoll faster than select?</a>）<br>
<br>对于select和poll来说，所有文件描述符都是在用户态被加入其文件描述符集合的，每次调用都需要将整个集合拷贝到内核态；epoll则将整个文件描述符集合维护在内核态，每次添加文件描述符的时候都需要执行一个系统调用。系统调用的开销是很大的，而且在有很多短期活跃连接的情况下，epoll可能会慢于select和poll由于这些大量的系统调用开销。
<br>select使用线性表描述文件描述符集合，文件描述符有上限；poll使用链表来描述；epoll底层通过红黑树来描述，并且维护一个ready list，将事件表中已经就绪的事件添加到这里，在使用epoll_wait调用时，仅观察这个list中有没有数据即可。
<br>select和poll的最大开销来自内核判断是否有文件描述符就绪这一过程：每次执行select或poll调用时，它们会采用遍历的方式，遍历整个文件描述符集合去判断各个文件描述符是否有活动；epoll则不需要去以这种方式检查，当有活动产生时，会自动触发epoll回调函数通知epoll文件描述符，然后内核将这些就绪的文件描述符放到之前提到的ready list中等待epoll_wait调用后被处理。
<br>select和poll都只能工作在相对低效的LT模式下，而epoll同时支持LT和ET模式。
<br>综上，当监测的fd数量较小，且各个fd都很活跃的情况下，建议使用select和poll；当监听的fd数量较多，且单位时间仅部分fd活跃的情况下，使用epoll会明显提升性能。
<br>其中提到的LT与ET是什么意思？<br>
<br>LT是指电平触发（level trigger），当IO事件就绪时，内核会一直通知，直到该IO事件被处理；
<br>ET是指边沿触发（Edge trigger），当IO事件就绪时，内核只会通知一次，如果在这次没有及时处理，该IO事件就丢失了。
<br><br>上文提到了并发多线程，在计算机中程序是作为一个进程存在的，线程是对进程的进一步划分，即在一个进程中可以有多个不同的代码执行路径。相对于进程而言，线程不需要操作系统为其分配资源，因为它的资源就在进程中，并且线程的创建和销毁相比于进程小得多，所以多线程程序效率较高。<br>但是在服务器项目中，如果频繁地创建/销毁线程也是不可取的，这就引入了线程池技术，即提前创建一批线程，当有任务需要执行时，就从线程池中选一个线程来进行任务的执行，任务执行完毕之后，再将该线程丢进线程池中，以等待后续的任务。<br>关于这部分的详细介绍可以参考：<a data-tooltip-position="top" aria-label="https://blog.csdn.net/ll15982534415/article/details/109151982" rel="noopener" class="external-link" href="https://blog.csdn.net/ll15982534415/article/details/109151982" target="_blank">多线程与并发</a>。<br><br>完成了基础知识的了解之后，现在就来进行项目代码的学习，这就有一个问题了，究竟，怎样才算是看懂了一个开源项目？把所有代码都复现一遍？<br>如果真是复现一遍，性价比太小了。如果这个开源项目是工作需要，或者说就是在它的基础上进行修改，那么对其代码整体进行浏览是必不可少的。但若是只是为了学习这个项目的架构和思想，那么从整体入手，细究某一个功能，再瞄准感兴趣的代码块就可以了。<br>对于本文的服务器项目，笔者主要是为了学习web服务器的相关知识，不需要全部了解，但是大部分代码都得理清脉络，于是我就采用了这种方式来学习：<br>
<br>代码架构，每一个目录负责什么模块（这个部分可以结合开源项目的文档，可以加快对项目的理解速度）
<br>编译运行，看看有什么功能；
<br>挑某一个功能，细究其代码实现，我就先挑“用户登录注册”功能来进行研究，再考虑其他的功能；
<br>添加功能，如何在现有的框架下增加一个功能？比如上传文件、上传博客等等？添加留言板？
<br>未完......
<br>ok，学习路线规划好了，下面就开始代码学习之旅！<br><br>用VsCode打开项目，该项目的代码架构如下：<br><img src="https://pic4.zhimg.com/v2-d3cc72ba16815c9b75d279ebcc5d2207_r.jpg" referrerpolicy="no-referrer"><br>参考文档，该项目的代码框架如下：<br><img src="https://pic4.zhimg.com/v2-c16b9b3c7c2e279227204a88fc95d1bb_r.jpg" referrerpolicy="no-referrer"><br><br>安装Mysql、创建数据库、修改代码，编译,运行：<br> sh ./build.sh 
 ./server
 // 打开浏览器
 localhost:9006
复制<br>浏览器显示如下：<br><img src="https://pic2.zhimg.com/v2-6710c22983d07b5089caa4cd5d975f4d_r.jpg" referrerpolicy="no-referrer"><br>点击新用户，注册一个账号之后再登录，有一下三个功能：<br><img src="https://pic4.zhimg.com/v2-7d6c7b75890f5a600f2ce989e5a5f443_r.jpg" referrerpolicy="no-referrer"><br>分别是网页上展示一个图片/视频/微信公众号。<br>通过阅读代码框架和运行逻辑，先给出一个服务器运行时工作流程图如下：<br><img src="https://pic2.zhimg.com/v2-fd0691122ac0c4213e790282d35083a5_r.jpg" referrerpolicy="no-referrer"><br>所有功能我最感兴趣的还是登录注册功能，去看看如何实现的。<br><br>关于登录功能，页面跳转逻辑如下图所示，原图来自<a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s?__biz=MzAxNzU2MzcwMw==&amp;mid=2649274431&amp;idx=4&amp;sn=7595a70f06a79cb7abaebcd939e0cbee&amp;chksm=83ffb167b4883871ce110aeb23e04acf835ef41016517247263a2c3ab6f8e615607858127ea6&amp;token=1686112912&amp;lang=zh_CN#rd" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s?__biz=MzAxNzU2MzcwMw==&amp;mid=2649274431&amp;idx=4&amp;sn=7595a70f06a79cb7abaebcd939e0cbee&amp;chksm=83ffb167b4883871ce110aeb23e04acf835ef41016517247263a2c3ab6f8e615607858127ea6&amp;token=1686112912&amp;lang=zh_CN#rd" target="_blank">两猿社</a>：<br><img src="https://pic3.zhimg.com/v2-b52f05f86180adbf08a06fff7d45509e_r.jpg" referrerpolicy="no-referrer"><br>上图的逻辑已经很清晰，根据HTTP请求的方法是GET还是POST，确定是获取注册/登录用户界面，还是更新用户密码跳转到登录成功界面。有关HTTP部分的介绍参考三、拔萝带泥-HTTP。<br>具体一点，首先需要从数据库中获取所有的用户名和密码（PS：在实际的大型项目中用户密码的传输可以参考<a data-tooltip-position="top" aria-label="https://blog.csdn.net/bjspo/article/details/90059325" rel="noopener" class="external-link" href="https://blog.csdn.net/bjspo/article/details/90059325" target="_blank">用户登录实践</a>），这些用户名和密码以某种数据结构（如哈希表）保存。<br>当浏览器请求到达时，根据其请求访问，返回对应的界面html或是错误提示。<br>整个过程其实是一个有限状态机。有限状态机？<br>有限状态机就是指系统状态从某一种状态转移到另外一种状态，表示“选择”和“更新状态”的过程。想进一步了解请参考：<a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/46347732" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/46347732" target="_blank">有限状态机？</a><br>由于该功能内部细节太多，请跳转阅读第三章、拔萝带泥-HTTP。<br><br>这个部分是对第二章登录注册功能的详细解析。首先介绍Epoll的使用，再介绍HTTP的相关知识，而后在给出“用户登录注册”过程的细节。<br><br>这个部分主要介绍epoll的函数调用框架，先看看epoll常用的函数。<br><br>epoll_create<br>//创建一个指示epoll内核事件表的文件描述符
//该描述符将用作其他epoll系统调用的第一个参数
//size不起作用。
int epoll_create(int size)
复制<br>epoll_ctl<br>//操作内核事件表监控的文件描述符上的事件：注册、修改、删除
int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)
复制<br>其中，epfd：为epoll_creat的句柄<br>op：表示动作，用3个宏来表示：<br>
<br>EPOLL_CTL_ADD (注册新的fd到epfd)，
<br>EPOLL_CTL_MOD (修改已经注册的fd的监听事件)，
<br>EPOLL_CTL_DEL (从epfd删除一个fd)；
<br>event：告诉内核需要监听的事件<br>event结构体定义如下：<br>struct epoll_event {
    __uint32_t events; /* Epoll events */
    epoll_data_t data; /* User data variable */
4};
复制<br>events描述事件类型，其中epoll事件类型有以下几种<br>
<br>EPOLLIN：表示对应的文件描述符可以读（包括对端SOCKET正常关闭）
<br>EPOLLOUT：表示对应的文件描述符可以写
<br>EPOLLPRI：表示对应的文件描述符有紧急的数据可读
<br>EPOLLERR：表示对应的文件描述符发生错误
<br>EPOLLHUP：表示对应的文件描述符被挂断；
<br>EPOLLET：将EPOLL设为边缘触发(Edge Triggered)模式，这是相对于水平触发(Level Triggered)而言的
<br>EPOLLONESHOT：只监听一次事件，当监听完这次事件之后，如果还需要继续监听这个socket的话，需要再次把这个socket加入到EPOLL队列里
<br>EPOLLET： 边缘触发模式
<br>EPOLLRDHUP：表示读关闭，对端关闭，不是所有的内核版本都支持；
<br>epoll_wait<br>//该函数用于等待所监控文件描述符上有事件的产生
//返回就绪的文件描述符个数
int epoll_wait(int epfd, struct epoll_event *events, int maxevents, int timeout)
复制<br>其中，<br>
<br>events：用来存内核得到事件的集合，
<br>maxevents：告之内核这个events有多大，不能大于epoll_create()时的size；
<br>timeout：是超时时间；
<br>返回值：成功返回有多少文件描述符就绪，时间到时返回0，出错返回-1；
<br><br>实际应用中，epoll是怎么起作用的？代码<a data-tooltip-position="top" aria-label="https://blog.csdn.net/weixin_43326322/article/details/108288633" rel="noopener" class="external-link" href="https://blog.csdn.net/weixin_43326322/article/details/108288633" target="_blank">原链接</a>。<br>//tcp server epoll并发服务器 
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;
#include &lt;pthread.h&gt;
#include &lt;ctype.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;sys/epoll.h&gt;
#define  MAX_LINK_NUM   128
#define  SERV_PORT      8888
#define  BUFF_LENGTH    320
#define  MAX_EVENTS     5
​
int  count = 0;
int tcp_epoll_server_init(){
    //创建服务器端口的常用套路代码
    int sockfd = socket(AF_INET,SOCK_STREAM,0);
    if(sockfd == -1){
        printf("socket error!\n");
        return -1;
    }
    struct sockaddr_in serv_addr;
    struct sockaddr_in clit_addr;
    socklen_t clit_len;
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(SERV_PORT);
    serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);// 任意本地ip
    int ret = bind(sockfd,(struct sockaddr*)&amp;serv_addr,sizeof(serv_addr));
    if(ret == -1){
        printf("bind error!\n");
        return -2;
    }
    listen(sockfd,MAX_LINK_NUM);
​
    //创建epoll
    int  epoll_fd = epoll_create(MAX_EVENTS);
    if(epoll_fd == -1){
        printf("epoll_create error!\n");
        return -3;
    }
    //向epoll注册sockfd监听事件
    struct epoll_event ev;   //epoll事件结构体
    struct epoll_event events[MAX_EVENTS];  //事件监听队列
    ev.events = EPOLLIN;
    ev.data.fd = sockfd;
    int ret2 = epoll_ctl(epoll_fd,EPOLL_CTL_ADD,sockfd,&amp;ev);
    if(ret2 == -1){
        printf("epoll_ctl error!\n");
        return -4;
    }
    int connfd = 0;
    while(1){
        //epoll等待事件发生
            int nfds = epoll_wait(epoll_fd,events,MAX_EVENTS,-1);
            if(nfds == -1){
                printf("epoll_wait error!\n");
                return -5;
            }
            printf("nfds: %d\n",nfds);
            //检测
            for(int i = 0;i&lt;nfds;++i){
                //客服端有新的请求
                if(events[i].data.fd == sockfd){
                //取出该连接
                connfd =  accept(sockfd,(struct sockaddr*)&amp;clit_addr,&amp;clit_len);
                    if(connfd == -1){
                        printf("accept error!\n");
                        return -6;
                    }
                    ev.events = EPOLLIN;
                    ev.data.fd = connfd;
              if(epoll_ctl(epoll_fd,EPOLL_CTL_ADD,connfd,&amp;ev) == -1){
                        printf("epoll_ctl add error!\n");
                        return -7;
                    }
                    printf("accept client: %s\n",inet_ntoa(clit_addr.sin_addr));
                    printf("client %d\n",++count);
                }
                //客户端有数据发送过来
                else{
                    char buff[BUFF_LENGTH];
                    int ret1 = read(connfd,buff,sizeof(buff));
                    printf("%s",buff);
                }
            }
​
    }
​
    close(connfd);
    return 0;
​
}
​
int main(){
    tcp_epoll_server_init();
}
复制<br><br><br>HTTP报文<br>HTTP报文分为请求报文（浏览器端向服务器发送）和响应报文（服务器处理后返回给浏览器端）两种，每种报文必须按照特有格式生成，才能被浏览器端识别。<br>
<br>请求报文=请求行（request line）、请求头部（header）、空行和请求数据四个部分组成。
<br>请求行，用来说明请求类型（方法）,要访问的资源以及所使用的HTTP版本。<br>请求头部，紧接着请求行（即第一行）之后的部分，用来说明服务器要使用的附加信息。<br>空行，请求头部后面的空行是必须的即使第四部分的请求数据为空，也必须有空行。<br>请求数据也叫主体，可以添加任意的其他数据。<br>
<br>响应报文=状态行+消息报头+空行+响应正文四个部分组成
<br>状态行，由HTTP协议版本号，状态码，状态消息 三部分组成。<br>消息报头，用来说明客户端要使用的一些附加信息。<br>空行，消息报头后面的空行是必须的。<br>响应正文，服务器返回给客户端的文本信息等。<br>HTTP状态码与请求方法<br>HTTP有5种类型的状态码，具体的：<br>
<br>1xx：指示信息--表示请求已接收，继续处理。
<br>2xx：成功--表示请求正常处理完毕。
<br>200 OK：客户端请求被正常处理。<br>206 Partial content：客户端进行了范围请求。<br>
<br>3xx：重定向--要完成请求必须进行更进一步的操作。
<br>301 Moved Permanently：永久重定向，该资源已被永久移动到新位置，将来对该资源访问都要使用本响应返回的若干个URI之一。<br>302 Found：临时重定向，请求的资源临时从不同的URI中获得。<br>
<br>4xx：客户端错误--请求有语法错误，服务器无法处理请求。
<br>400 Bad Request：请求报文存在语法错误。<br>403 Forbidden：请求被服务器拒绝。<br>404 Not Found：请求不存在，服务器上找不到请求的资源。<br>
<br>5xx：服务器端错误--服务器处理请求出错。
<br>500 Internal Server Error：服务器在执行请求时出现错误。<br>HTTP1.1之后共有八种方法名，见下：<br><img src="https://pic1.zhimg.com/v2-4cf728124839ef886e451f4cc8a3c680_r.jpg" referrerpolicy="no-referrer"><br>由于该项目主要涉及GET和POST，那么这两个指令有什么区别和联系呢？<br>简单来说，GET主要是用来获取新的网页；POST用作向服务器传递用户的表单数据，如用户名、密码、留言等等；<br>进一步，GET把参数包含在URL中，POST通过request body传递参数。<br>其实GET和POST只是HTTP定义的两种输出传输标识，他们的传输大小限制是TCP/IP协议所限制的，并且POST一般需要两次传输，强烈推荐博客：<a data-tooltip-position="top" aria-label="https://www.cnblogs.com/logsharing/p/8448446.html" rel="noopener" class="external-link" href="https://www.cnblogs.com/logsharing/p/8448446.html" target="_blank">GET/POST的区别</a>。<br>这里是两个GET和POST的典例：<br>GET<br>GET /562f2.jpg HTTP/1.1
Host:img.mukewang.com
User-Agent:Mozilla/5.0 (Windows NT 10.0; WOW64)
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36
Accept:image/webp,image/*,*/*;q=0.8
Referer:http://www.imooc.com/
Accept-Encoding:gzip, deflate, sdch
Accept-Language:zh-CN,zh;q=0.8
空行
请求数据为空
复制<br>POST<br>POST / HTTP1.1
Host:www.wrox.com
User-Agent:Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)
Content-Type:application/x-www-form-urlencoded
Content-Length:40
Connection: Keep-Alive
空行
name=Professional%20Ajax&amp;publisher=Wiley
复制<br><br>HTTP的处理流程分为以下三个步骤：<br>
<br>连接处理：浏览器端发出http连接请求，主线程创建http对象接收请求并将所有数据读入对应buffer，将该对象插入任务队列，等待工作线程从任务队列中取出一个任务进行处理。
<br>处理报文请求：工作线程取出任务后，调用进程处理函数，通过主、从状态机对请求报文进行解析。
<br>返回响应报文：解析完之后，生成响应报文，返回给浏览器端。
<br>接下来依次介绍三个步骤：<br><br>在连接阶段，最重要的是tcp连接过程和读取http的请求报文（其实读取请求报文就是读取客户端发送的数据而已）。tcp连接过程涉及epoll内核事件创建等，详见后续的epoll部分。<br>服务器是如何实现读取http的报文的呢？首先，服务器需要对每一个已建立连接http建立一个http的类对象，这部分代码如下（服务器一直在运行eventloop即回环事件，因为整个服务器其实是事件驱动）：<br>//事件回环（即服务器主线程）
void WebServer::eventLoop()
{
    ......
    while (!stop_server)
    {
        //等待所监控文件描述符上有事件的产生
        int number = epoll_wait(m_epollfd, events, MAX_EVENT_NUMBER, -1);
        if (number &lt; 0 &amp;&amp; errno != EINTR)
        {
            LOG_ERROR("%s", "epoll failure");
            break;
        }
        //对所有就绪事件进行处理
        for (int i = 0; i &lt; number; i++)
        {
            int sockfd = events[i].data.fd;
            //处理新到的客户连接
            if (sockfd == m_listenfd)
            {
                bool flag = dealclinetdata();
                if (false == flag)
                    continue;
            }
            //处理异常事件
            else if (events[i].events &amp; (EPOLLRDHUP | EPOLLHUP | EPOLLERR))
            {
                //服务器端关闭连接，移除对应的定时器
                util_timer *timer = users_timer[sockfd].timer;
                deal_timer(timer, sockfd);
            }
            //处理信号
            else if ((sockfd == m_pipefd[0]) &amp;&amp; (events[i].events &amp; EPOLLIN))
            {
                bool flag = dealwithsignal(timeout, stop_server);
                if (false == flag)
                    LOG_ERROR("%s", "dealclientdata failure");
            }
            //处理客户连接上接收到的数据 可读
            else if (events[i].events &amp; EPOLLIN)
            {
                dealwithread(sockfd);
            }
            //处理客户连接上接收到的数据 可写
            else if (events[i].events &amp; EPOLLOUT)
            {
                dealwithwrite(sockfd);
            }
        }
       ......
    }
}
复制<br>22行的dealclientdata（）函数调用timer（）创建新的client客户端连接user，同时新增一个定时事件（见后续部分）。<br>完成这一系列步骤之后，服务器中就维护着一系列的客户端client连接，当其中一个客户点击网页某一按钮，生成一个请求报文并传输到服务器时，在上述事件回环代码中调用dealwithread（）。<br>该函数中将该端口事件append加入任务请求队列，等待线程池中的线程执行该任务。根据Reactor/Proactor模式，工作线程对http请求报文数据的读取由read_once（）函数完成，见http_conn.cpp。<br>read_once()函数将浏览器（客户端）端的数据读入到缓存数组，以待后续工作线程进行处理。<br><br>在webserver的线程池有空闲线程时，某一线程调用process（）来完成请求报文的解析以及报文相应任务。详见http_conn/process（）：<br>//处理http报文请求与报文响应
void http_conn::process()
{
    //NO_REQUEST，表示请求不完整，需要继续接收请求数据
    HTTP_CODE read_ret = process_read();
    if (read_ret == NO_REQUEST)
    {
        //注册并监听读事件
        modfd(m_epollfd, m_sockfd, EPOLLIN, m_TRIGMode);
        return;
    }
    //调用process_write完成报文响应
    bool write_ret = process_write(read_ret);
    if (!write_ret)
    {
        close_conn();
    }
    //注册并监听写事件
    modfd(m_epollfd, m_sockfd, EPOLLOUT, m_TRIGMode);
}
复制<br>先介绍请求报文的处理，也就是process_read()函数。<br>该函数通过while循环，对主从状态机进行封装，对报文的每一行进行循环处理。这里的主状态机，指的是process_read()函数，从状态机是指parse_line()函数。<br>从状态机负责读取报文的一行（并对其中的\r\n进行修改为\0\0），主状态机负责对该行数据进行解析，主状态机内部调用从状态机，从状态机驱动主状态机。它们之间的关系如下图所示：<br><img src="https://pic4.zhimg.com/v2-053512c11e9e80de7c1bd1e68153f93b_r.jpg" referrerpolicy="no-referrer"><br>process_read()这个函数对HTTP连接和处理部分的理解极为重要，必须得抬出源码看看，请在学习过程中结合源码、上述流程图来理解：<br>//有限状态机处理请求报文
http_conn::HTTP_CODE http_conn::process_read()
{
    //
    LINE_STATUS line_status = LINE_OK;
    HTTP_CODE ret = NO_REQUEST;
    char *text = 0;
    while ((m_check_state == CHECK_STATE_CONTENT &amp;&amp; line_status == LINE_OK) || ((line_status = parse_line()) == LINE_OK))
    {
        text = get_line();
        m_start_line = m_checked_idx;
        LOG_INFO("%s", text);
        switch (m_check_state)
        {
        case CHECK_STATE_REQUESTLINE:
        {
            ret = parse_request_line(text);
            if (ret == BAD_REQUEST)
                return BAD_REQUEST;
            break;
        }
        case CHECK_STATE_HEADER:
        {
            ret = parse_headers(text);
            if (ret == BAD_REQUEST)
                return BAD_REQUEST;
            else if (ret == GET_REQUEST)
            {
                return do_request();
            }
            break;
        }
        case CHECK_STATE_CONTENT:
        {
            ret = parse_content(text);
            if (ret == GET_REQUEST)
                return do_request();
            line_status = LINE_OPEN;
            break;
        }
        default:
            return INTERNAL_ERROR;
        }
    }
    return NO_REQUEST;
}
复制<br>上述代码是使用switch...case来体现主状态机的选择，而主状态机的状态是由CHECK_STATE_REQUESTLINE/HEADER/CONTENT，这三个标志来表示的：正在解析请求行、解析请求头、解析消息体（body）。有关判断条件和循环体的补充见下：<br>
<br>
判断条件  

<br>
主状态机转移到CHECK_STATE_CONTENT，该条件涉及解析消息体

<br>
从状态机转移到LINE_OK，该条件涉及解析请求行和请求头部

<br>
两者为或关系，当条件为真则继续循环，否则退出

<br>
循环体  

<br>
从状态机读取数据

<br>
调用get_line函数，通过m_start_line将从状态机读取数据间接赋给text

<br>
主状态机解析text

<br>PS：这个部分的阅读一定得结合源码！其中涉及很多字符数组指针的加减，请仔细体会！<br>主状态机初始状态是CHECK_STATE_REQUESTLINE，而后调用parse_request_line()解析请求行，获得HTTP的请求方法、目标URL以及HTTP版本号，状态变为CHECK_STATE_HEADER。<br>此时进入循环体之后，调用parse_headers()解析请求头部信息。先要判断是空行还是请求头，空行进一步区分POST还是GET。若是请求头，则更新长短连接状态、host等等。<br>注：GET和POST请求报文的区别之一是有无消息体部分。<br>当使用POST请求时，需要进行CHECK_STATE_CONTENT的解析，取出POST消息体中的信息（用户名、密码）。<br>参考链接：<br><a rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/wAQHU-QZiRt1VACMZZjNlw" target="_blank">https://mp.weixin.qq.com/s/wAQHU-QZiRt1VACMZZjNlw</a><br><br>在完成请求报文的解析之后，明确用户想要登录/注册，需要跳转到对应的界面、添加用户名、验证用户等等，并将相应的数据写入相应报文，返回给浏览器,流程图如下：<br><img src="https://pic1.zhimg.com/v2-72b7d6993ac753f554546a5ea80c41c4_r.jpg" referrerpolicy="no-referrer"><br>这个在process_read()中完成请求报文的解析之后，状态机会调用do_request()函数，该函数是处理功能逻辑的。该函数将网站根目录和url文件拼接，然后通过stat判断该文件属性。url，可以将其抽象成ip:port/xxx，xxx通过html文件的action属性（即请求报文）进行设置。m_url为请求报文中解析出的请求资源，以/开头，也就是x，项目中解析后的m_url有8种情况，见do_request()函数，部分代码如下：<br> //功能逻辑单元
http_conn::HTTP_CODE http_conn::do_request()
{
    strcpy(m_real_file, doc_root);
    int len = strlen(doc_root);
    //printf("m_url:%s\n", m_url);
    const char *p = strrchr(m_url, '/');
    //处理cgi
    if (cgi == 1 &amp;&amp; (*(p + 1) == '2' || *(p + 1) == '3'))
    {
        //根据标志判断是登录检测还是注册检测
        char flag = m_url[1];
        char *m_url_real = (char *)malloc(sizeof(char) * 200);
        strcpy(m_url_real, "/");
        strcat(m_url_real, m_url + 2);
        strncpy(m_real_file + len, m_url_real, FILENAME_LEN - len - 1);
        free(m_url_real);

        //将用户名和密码提取出来
        //user=123&amp;passwd=123
        char name[100], password[100];
        int i;
        for (i = 5; m_string[i] != '&amp;'; ++i)
            name[i - 5] = m_string[i];
        name[i - 5] = '\0';

        int j = 0;
        for (i = i + 10; m_string[i] != '\0'; ++i, ++j)
            password[j] = m_string[i];
        password[j] = '\0';

        if (*(p + 1) == '3')
        {
            //如果是注册，先检测数据库中是否有重名的
            //没有重名的，进行增加数据
            ......
            if (users.find(name) == users.end())
            {
                m_lock.lock();
                int res = mysql_query(mysql, sql_insert);
                users.insert(pair&lt;string, string&gt;(name, password));
                m_lock.unlock();

                if (!res)
                    strcpy(m_url, "/log.html");
                else
                    strcpy(m_url, "/registerError.html");
            }
            else
                strcpy(m_url, "/registerError.html");
        }
        ......
} 
复制<br>其中，stat函数用于获取文件的类型、大小等信息；mmap用于将文件等映射到内存，提高访问速度，详见<a data-tooltip-position="top" aria-label="https://blog.csdn.net/bbzhaohui/article/details/81665370" rel="noopener" class="external-link" href="https://blog.csdn.net/bbzhaohui/article/details/81665370" target="_blank">mmap原理</a>；iovec定义向量元素，通常，这个结构用作一个多元素的数组，详见<a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/451xNaSFHxcxfKlPBV3OCg" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/451xNaSFHxcxfKlPBV3OCg" target="_blank">社长微信</a>；writev为聚集写，详见<a data-tooltip-position="top" aria-label="https://www.cnblogs.com/fanweisheng/p/11138704.html" rel="noopener" class="external-link" href="https://www.cnblogs.com/fanweisheng/p/11138704.html" target="_blank">链接</a>；<br>执行do_request()函数之后，子线程调用process_write()进行响应报文（add_status_line、add_headers等函数）的生成。在生成响应报文的过程中主要调用add_reponse()函数更新m_write_idx和m_write_buf。<br>值得注意的是，响应报文分为两种，一种是请求文件的存在，通过io向量机制iovec，声明两个iovec，第一个指向m_write_buf，第二个指向mmap的地址m_file_address ;另一种是请求出错，这时候只申请一个iovec，指向m_write_buf 。<br>其实往响应报文里写的就是服务器中html的文件数据，浏览器端对其进行解析、渲染并显示在浏览器页面上。<br>另外，用户登录注册的验证逻辑代码在do_request()中，通过对Mysql数据库进行查询或插入，验证、添加用户。<br>以上就是对注册/登录模块的详细介绍，之后分模块对该项目的线程池、日志、定时器等进行细节探究。<br><br>这个部分着重介绍该项目的线程池实现。整体框架如下：<br><img src="https://pic4.zhimg.com/v2-ab874df7219895195def55a02fb390f7_b.jpg" referrerpolicy="no-referrer"><br><br>线程池其定义如下：<br>template &lt;typename T&gt;
class threadpool
{
public:
    /*thread_number是线程池中线程的数量，max_requests是请求队列中最多允许的、等待处理的请求的数量*/
    threadpool(int actor_model, connection_pool *connPool, int thread_number = 8, int max_request = 10000);
    ~threadpool();
    bool append(T *request, int state);
    bool append_p(T *request);

private:
    /*工作线程运行的函数，它不断从工作队列中取出任务并执行之*/
    static void *worker(void *arg);//为什么要用静态成员函数呢-----class specific
    void run();

private:
    int m_thread_number;        //线程池中的线程数
    int m_max_requests;         //请求队列中允许的最大请求数
    pthread_t *m_threads;       //描述线程池的数组，其大小为m_thread_number
    std::list&lt;T *&gt; m_workqueue; //请求队列
    locker m_queuelocker;       //保护请求队列的互斥锁
    sem m_queuestat;            //是否有任务需要处理
    connection_pool *m_connPool;  //数据库
    int m_actor_model;          //模型切换（这个切换是指Reactor/Proactor）
};
复制<br>注意到该线程池采用模板编程，这是为了增强其拓展性：各种任务种类都可支持。<br>线程池需要预先创建一定的线程，其中最重要的API为：<br>#include &lt;pthread.h&gt;
//返回新生成的线程的id
int pthread_create 
(pthread_t *thread_tid,//新生成的线程的id         
const pthread_attr_t *attr, //指向线程属性的指针,通常设置为NULL      
void * (*start_routine) (void *), //处理线程函数的地址  
void *arg);  //start_routine()中的参数
复制<br>函数原型中的第三个参数，为函数指针，指向处理线程函数的地址。该函数，要求为静态函数。如果处理线程函数为类成员函数时，需要将其设置为静态成员函数(因为类的非静态成员函数有this指针，就跟void*不匹配)。进一步了解<a data-tooltip-position="top" aria-label="https://blog.csdn.net/wushuomin/article/details/80051295" rel="noopener" class="external-link" href="https://blog.csdn.net/wushuomin/article/details/80051295" target="_blank">请看</a>。<br><br>项目中线程池的创建：<br>threadpool&lt;T&gt;::threadpool( int actor_model, connection_pool *connPool, int thread_number, int max_requests) : m_actor_model(actor_model),m_thread_number(thread_number), m_max_requests(max_requests), m_threads(NULL),m_connPool(connPool)
{
    if (thread_number &lt;= 0 || max_requests &lt;= 0)
        throw std::exception();
    m_threads = new pthread_t[m_thread_number];     //pthread_t是长整型
    if (!m_threads)
        throw std::exception();
    for (int i = 0; i &lt; thread_number; ++i)
    {
        //创建成功应该返回0，如果线程池在线程创建阶段就失败，那就应该关闭线程池了
        if (pthread_create(m_threads + i, NULL, worker, this) != 0)
        {
            delete[] m_threads;
            throw std::exception();
        }
        //主要是将线程属性更改为unjoinable，便于资源的释放，详见PS
        if (pthread_detach(m_threads[i]))
        {
            delete[] m_threads;
            throw std::exception();
        }
    }
}
复制<br>PS:注意到创建一个线程之后需要调用pthread_detech(),原因在于： linux线程有两种状态joinable状态和unjoinable状态。<br>如果线程是joinable状态，当线程函数自己退出都不会释放线程所占用堆栈和线程描述符（总计8K多）。只有当调用了pthread_join，主线程阻塞等待子线程结束，然后回收子线程资源。<br>而unjoinable属性可以在pthread_create时指定，或在线程创建后在线程中pthread_detach（pthread_detach()即主线程与子线程分离，子线程结束后，资源自动回收）, 如：pthread_detach(pthread_self())，将状态改为unjoinable状态，确保资源的释放。其实简单的说就是在线程函数头加上 pthread_detach(pthread_self())的话，线程状态改变，在函数尾部直接 pthread_exit线程就会自动退出。省去了给线程擦屁股的麻烦。<br><br>当epoll检测到端口有事件激活时，即将该事件放入请求队列中（注意互斥），等待工作线程处理：<br>//proactor模式下的请求入队
bool threadpool&lt;T&gt;::append_p(T *request)
{
    m_queuelocker.lock();
    if (m_workqueue.size() &gt;= m_max_requests)
    {
        m_queuelocker.unlock();
        return false;
    }
    m_workqueue.push_back(request);
    m_queuelocker.unlock();
    m_queuestat.post();
    return true;
}
复制<br>上面是Proactor模式下的任务请求入队，不知道Reactor和Proactor模式的请回到第一章、IO复用。本项目所实现的是一个基于半同步/半反应堆式的并发结构，以Proactor模式为例的工作流程如下：<br>
<br>主线程充当异步线程，负责监听所有socket上的事件
<br>若有新请求到来，主线程接收之以得到新的连接socket，然后往epoll内核事件表中注册该socket上的读写事件
<br>如果连接socket上有读写事件发生，主线程从socket上接收数据，并将数据封装成请求对象插入到请求队列中
<br>所有工作线程睡眠在请求队列上，当有任务到来时，通过竞争（如互斥锁）获得任务的接管权
<br>即是如下原理：（<a data-tooltip-position="top" aria-label="https://blog.csdn.net/LF_2016/article/details/72794814" rel="noopener" class="external-link" href="https://blog.csdn.net/LF_2016/article/details/72794814" target="_blank">图片来自</a>）<br><img src="https://pic4.zhimg.com/v2-c7230a2681cab1c32a82cb64974d11a7_r.jpg" referrerpolicy="no-referrer"><br><br>在建立线程池时，调用pthread_create指向了worker()静态成员函数，而worker()内部调用run()。<br>//工作线程:pthread_create时就调用了它
template &lt;typename T&gt;
void *threadpool&lt;T&gt;::worker(void *arg)
{
    //调用时 *arg是this！
    //所以该操作其实是获取threadpool对象地址
    threadpool *pool = (threadpool *)arg;
    //线程池中每一个线程创建时都会调用run()，睡眠在队列中
    pool-&gt;run();
    return pool;
}
复制<br>run()函数其实也可以看做是一个回环事件，一直等待m_queuestat()信号变量post，即新任务进入请求队列，这时请求队列中取出一个任务进行处理：<br>//线程池中的所有线程都睡眠，等待请求队列中新增任务
void threadpool&lt;T&gt;::run()
{
    while (true)
    {
        m_queuestat.wait();
        m_queuelocker.lock();
        if (m_workqueue.empty())
        {
            m_queuelocker.unlock();
            continue;
        }
        T *request = m_workqueue.front();
        m_workqueue.pop_front();
        m_queuelocker.unlock();
        if (!request)
            continue;
//        ......线程开始进行任务处理
    }
}
复制<br>注：每调用一次pthread_create就会调用一次run(),因为每个线程是相互独立的，都睡眠在工作队列上，仅当信号变量更新才会唤醒进行任务的竞争。<br><br><br>如果一个客户端与服务器长时间连接，并且不进行数据的交互，这个连接就没有存在的意义还占据了服务器的资源。在这种情况下，服务器就需要一种手段检测无意义的连接，并对这些连接进行处理。<br>除了处理非活跃的连接之外，服务器还有一些定时事件，比如关闭文件描述符等。<br>为实现这些功能，服务器就需要为各事件分配一个定时器。<br>该项目使用SIGALRM信号来实现定时器，首先每一个定时事件都处于一个升序链表上，通过alarm()函数周期性触发SIGALRM信号，而后信号回调函数利用管道通知主循环，主循环接收到信号之后对升序链表上的定时器进行处理：若一定时间内无数据交换则关闭连接。<br>有关这一部分的底层API解析，建议直接阅读<a data-tooltip-position="top" aria-label="https://github.com/white0dew/WebServer" rel="noopener" class="external-link" href="https://github.com/white0dew/WebServer" target="_blank">我所添加的源码注释</a>或者<a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/mmXLqh_NywhBXJvI45hchA" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/mmXLqh_NywhBXJvI45hchA" target="_blank">参考社长的文章</a>。<br><br>由于定时器部分在源代码中调用比较复杂，可以结合该框图进行理解：<br><img src="https://pic3.zhimg.com/v2-50f8a9c898447e79c04810883e7ed332_r.jpg" referrerpolicy="no-referrer"><br>文字性叙述：<br>服务器首先创建定时器容器链表，然后用统一事件源将异常事件，读写事件和信号事件统一处理，根据不同事件的对应逻辑使用定时器。<br>具体的，浏览器与服务器连接时，创建该连接对应的定时器，并将该定时器添加到定时器容器链表上；<br>处理异常事件时，执行定时事件，服务器关闭连接，从链表上移除对应定时器；<br>处理定时信号时，将定时标志设置为true，以便执行定时器处理函数；<br>处理读/写事件时，若某连接上发生读事件或某连接给浏览器发送数据，将对应定时器向后移动，否则，执行定时事件。<br><br>为了记录服务器的运行状态，错误信息，访问数据的文件等，需要建立一个日志系统。本项目中，使用单例模式创建日志系统。该部分的框图如下（原图来自社长）：<br><img src="https://pic2.zhimg.com/v2-53e454adae209cf25349ce788a343a61_r.jpg" referrerpolicy="no-referrer"><br>由上图可知，该系统同步和异步两种写入方式。<br>其中异步写入方式，将生产者-消费者模型封装为阻塞队列，创建一个写线程，工作线程将要写的内容push进队列，写线程从队列中取出内容，写入日志文件。对于同步写入方式，直接格式化输出内容，将信息写入日志文件。<br>该系统可以实现按天分类，超行分类功能。<br>这个部分建议直接结合源码，从log.h入手进行阅读，先查看同步写入的方式，在进行异步写入日志以及阻塞队列的阅读。<br>或是参考社长的：<a data-tooltip-position="top" aria-label="https://mp.weixin.qq.com/s/IWAlPzVDkR2ZRI5iirEfCg" rel="noopener" class="external-link" href="https://mp.weixin.qq.com/s/IWAlPzVDkR2ZRI5iirEfCg" target="_blank">日志系统</a>。<br><br><br>该项目在处理用户连接时，采用的是：每一个HTTP连接获取一个数据库连接，获取其中的用户账号密码进行对比（有点损耗资源，实际场景下肯定不是这么做的），而后再释放该数据库连接。<br>那为什么要创建数据库连接池呢？<br>数据库访问的一般流程为：当系统需要访问数据库时，先系统创建数据库连接，完成数据库操作，然后系统断开数据库连接。——从中可以看出，若系统需要频繁访问数据库，则需要频繁创建和断开数据库连接，而创建数据库连接是一个很耗时的操作，也容易对数据库造成安全隐患。<br>在程序初始化的时候，集中创建多个数据库连接，并把他们集中管理，供程序使用，可以保证较快的数据库读写速度，更加安全可靠。<br>其实数据库连接池跟线程池的思想基本是一致的。<br>在该项目中不仅实现了数据库连接池，还将数据库连接的获取与释放通过RAII机制封装，避免手动释放。<br>这一部分比较易懂，建议直接阅读源码。<br><br>为便于实现同步类的RAII机制，该项目在pthread库的基础上进行了封装，实现了类似于C++11的mutex、condition_variable。<br>可以阅读文件夹lock中的源码进行这方面的学习。<br><br>（主要资料）社长本人的文章：<br><a rel="noopener" class="external-link" href="https://github.com/qinguoyi/TinyWebServer#%E5%BA%96%E4%B8%81%E8%A7%A3%E7%89%9B" target="_blank">https://github.com/qinguoyi/TinyWebServer#%E5%BA%96%E4%B8%81%E8%A7%A3%E7%89%9B</a><br>（力荐）一文读懂TinyWebServer：<br><a rel="noopener" class="external-link" href="https://huixxi.github.io/2020/06/02/%E5%B0%8F%E7%99%BD%E8%A7%86%E8%A7%92%EF%BC%9A%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E7%A4%BE%E9%95%BF%E7%9A%84TinyWebServer/#more" target="_blank">https://huixxi.github.io/2020/06/02/%E5%B0%8F%E7%99%BD%E8%A7%86%E8%A7%92%EF%BC%9A%E4%B8%80%E6%96%87%E8%AF%BB%E6%87%82%E7%A4%BE%E9%95%BF%E7%9A%84TinyWebServer/#more</a><br><a rel="noopener" class="external-link" href="https://book.douban.com/subject/24722611/" target="_blank">https://book.douban.com/subject/24722611/</a><br><a rel="noopener" class="external-link" href="https://baike.baidu.com/item/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/8390210?fr=aladdin" target="_blank">https://baike.baidu.com/item/WEB%E6%9C%8D%E5%8A%A1%E5%99%A8/8390210?fr=aladdin</a><br>主流服务器对比：<br><a rel="noopener" class="external-link" href="https://www.cnblogs.com/sammyliu/articles/4392269.html" target="_blank">https://www.cnblogs.com/sammyliu/articles/4392269.html</a><br><a rel="noopener" class="external-link" href="https://blog.csdn.net/u010066903/article/details/52827297/" target="_blank">https://blog.csdn.net/u010066903/article/details/52827297/</a><br>项目地址：<br><a rel="noopener" class="external-link" href="https://github.com/qinguoyi/TinyWebServer" target="_blank">https://github.com/qinguoyi/TinyWebServer</a><br><br>文章来源: <a rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/364044293" target="_blank">https://zhuanlan.zhihu.com/p/364044293</a>]]></description><link>https://wxkj.asia/mynote/学习笔记/参考资料/tinywebserver——从0到服务器开发！.html</link><guid isPermaLink="false">学习笔记/参考资料/TinyWebServer——从0到服务器开发！.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:21:42 GMT</pubDate><enclosure url="https://pic2.zhimg.com/v2-5f44ef48d790438e604d42def406b38d_r.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://pic2.zhimg.com/v2-5f44ef48d790438e604d42def406b38d_r.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[laravel的设计模式]]></title><description><![CDATA[ 
 <br>Laravel 框架采用了多种设计模式来提升代码的可读性、可扩展性和可维护性。以下列举了 Laravel 中广泛应用的一些设计模式：<br>
<br>
工厂模式：Laravel 使用了工厂模式来创建对象实例，例如工厂类可以用来创建 Eloquent ORM 模型实例，通过 Illuminate\Database\Eloquent\Factories\Factory 及其子类实现。

<br>
单例模式：Laravel 中的服务容器（Service Container）在某种程度上实现了单例模式，它管理着应用程序中服务的生命周期，并确保每个服务只有一个实例。

<br>
注册树/服务提供者模式：Laravel 的服务容器和服务提供者机制借鉴了注册树模式的思想，服务提供者用于注册应用程序所需的各类服务，如绑定对象、配置服务、启动队列和事件监听器等。

<br>
适配器模式：在处理不同数据库驱动、邮件服务和其他第三方 API 时，Laravel 采用适配器模式将不同的实现包装成统一的接口。

<br>
策略模式：Laravel 中验证器（Validator）使用了策略模式，允许开发者定义各种验证规则并根据需要灵活选择使用。

<br>
数据对象映射（Data Mapper）模式：Eloquent ORM 在某种程度上遵循了数据映射模式，它将数据库表映射到模型对象，并提供了一系列操作数据库的方法。

<br>
观察者模式：Laravel 事件系统利用了观察者模式，通过事件和监听器实现对象状态变化的通知和处理。

<br>
原型模式：虽然 Laravel 并未明显使用原型模式，但在处理 JSON 序列化和反序列化时，可能隐含地利用了该模式。

<br>
装饰器模式：Laravel 中的中间件（Middleware）可以看作是装饰器模式的应用，它们对 HTTP 请求进行包装和增强，提供诸如身份验证、授权、日志记录等各种功能。

<br>
迭代器模式：在集合（Collection）类中，Laravel 实现了迭代器模式，使得集合对象可以遍历和处理数据。

<br>
代理模式：在一些场景下，Laravel 通过服务容器提供的代理功能实现代理模式，尤其是依赖注入时，容器创建的代理对象能够自动解析和注入依赖项。

<br>此外，Laravel 还采用了其他的设计模式，如模板方法模式体现在控制器基类（如 App\Http\Controllers\Controller）中，以及命令模式体现在 Artisan 命令的创建和执行过程中。总体而言，Laravel 整个框架设计充分融合了多种设计模式，形成了高度灵活和可扩展的现代 PHP Web 应用程序框架。]]></description><link>https://wxkj.asia/mynote/学习笔记/设计模式/laravel的设计模式.html</link><guid isPermaLink="false">学习笔记/设计模式/laravel的设计模式.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 23 Mar 2024 01:50:09 GMT</pubDate></item><item><title><![CDATA[常用设计模式]]></title><description><![CDATA[ 
 <br>在软件开发项目中，设计模式是非常重要和常用的概念，它们是对在不同上下文中反复出现的设计问题和解决方案的标准化描述。以下是一些项目中常用的设计模式，按照传统的三大类别划分：<br>
<br>
创建型模式：

<br>单例模式（Singleton）：确保一个类只有一个实例，并提供全局访问点。
<br>工厂方法模式（Factory Method）：定义一个用于创建对象的接口，让子类决定实例化哪一个类。
<br>抽象工厂模式（Abstract Factory）：提供一个接口，用于创建相关或依赖对象家族的一系列对象，而无需指定具体类。
<br>建造者模式（Builder）：将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。
<br>原型模式（Prototype）：通过复制现有对象来创建新对象，而不是新建一个实例。


<br>
结构型模式：

<br>适配器模式（Adapter）：将一个类的接口转换成客户希望的另一个接口，使得原本由于接口不兼容而不能一起工作的那些类可以协同工作。
<br>装饰器模式（Decorator）：动态地给对象添加额外的功能，同时又不影响其他对象。
<br>代理模式（Proxy）：为其他对象提供一个代理以控制对这个对象的访问。
<br>桥接模式（Bridge）：将抽象部分与它的实现部分分离，使它们都可以独立地变化。
<br>外观模式（Facade）：为子系统中的一组接口提供一个统一的高层接口，简化其接口。
<br>组合模式（Composite）：将对象组合成树形结构表示“部分-整体”的层次结构，使得用户对单个对象和组合对象的使用具有一致性。
<br>享元模式（Flyweight）：运用共享技术有效地支持大量细粒度的对象。


<br>
行为型模式：

<br>观察者模式（Observer）：定义对象间的一种一对多依赖关系，当一个对象的状态发生改变时，所有依赖于它的对象都会得到通知并被自动更新。
<br>策略模式（Strategy）：定义一系列算法，把它们一个个封装起来，并且使它们可相互替换，让算法的变化独立于使用它的客户。
<br>模板方法模式（Template Method）：在一个抽象类中定义一个操作中的算法骨架，而将一些步骤延迟到子类中实现。
<br>责任链模式（Chain of Responsibility）：使多个对象都有机会处理请求，从而避免请求的发送者和接收者之间的耦合关系。
<br>命令模式（Command）：将一个请求封装为一个对象，从而使用户可以用不同的请求对客户进行参数化；同时支持可撤销的操作。
<br>迭代器模式（Iterator）：提供一种方法顺序访问一个聚合对象中的各个元素，而又不暴露其内部表示。
<br>备忘录模式（Memento）：在不破坏封装性的前提下，捕获一个对象的内部状态以便稍后恢复。
<br>状态模式（State）：允许对象在内部状态改变时改变它的行为，对象看起来好像修改了它的类。
<br>访问者模式（Visitor）：表示一个作用于某对象结构中的各元素的操作，它使你可以在不改变各元素类的前提下定义作用于这些元素的新操作。
<br>中介者模式（Mediator）：用一个中介对象来封装一系列对象之间的交互关系，减少对象之间的直接关联。
<br>解释器模式（Interpreter）：给定一门语言，定义它的文法表示，并定义一个解释器来解释语言中的句子。


<br>以上设计模式可以帮助开发者更好地组织代码、复用已有的解决方案、提高代码可读性和可维护性，并有助于解决特定的设计挑战。在实际项目中，选择使用哪种设计模式取决于具体的需求、系统的架构以及长期的可扩展性和维护性考量。]]></description><link>https://wxkj.asia/mynote/学习笔记/设计模式/常用设计模式.html</link><guid isPermaLink="false">学习笔记/设计模式/常用设计模式.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 23 Mar 2024 01:45:39 GMT</pubDate></item><item><title><![CDATA[1万访问需要多少宽带]]></title><description><![CDATA[ 
 <br>在服务器托管或者在服务器，租赁的时候会考虑带宽分配的问题，大部分人只知道带宽分配合理充足，既能节约成本又不浪费资源。那么什么是合适的带宽分配，如何为不同的企业规模分配带宽呢？今天我们腾友边肖为大家整理了带宽选择标准，大家可以对比参考！<br>
=""src="&gt;<br>
什么是带宽？<br>
我们用来描述网络速度的两个词是带宽和流量。网络带宽用来描述带宽。然而，在数字传输级别，网络带宽通常用于考虑传输数据的能力。用于表示企业时间内传输的数据量大小(通常以“秒”为企业单位)和吞吐量统计的工作能力。什么是流量？<br>
流量(Flow)是指在企业时间内，流经具有合理横截面的封闭管道或明渠的水动力量，也称为瞬时流速总流量。一般来说，流量是指网站的页面浏览量，用于描述浏览网站的用户数量和客户预览的网页总数。常见的统计指标包括个人用户数、总用户数(包括重复访问者)、浏览的网页总数、每个客户预览的网页总数、客户在网站的平均等待时间。事实上，那流量与带宽是什么样的关系呢？的带宽决定了服务器主机可以循环的最大值。一般来说，复制流量的最大值可以用带宽除以 8 来估计。一万个 IP 流量的时候需要多大带宽？<br>
一万个 IP 的接入就是一万个不同用户的接入。如果一个用户访问一个网站的两个页面，该网站需要承担 20,000 PV。一个网站每天有两万次点击。在繁忙时间的 5 个小时的高峰期，用户平均每秒浏览 0.5 页，而在其他时段，则低于每秒 0.5 页。因此，主机的最小带宽应该是每秒 0.5 页。假设网站页面平均大小为 200KB，那么带宽应该至少为 100KBps(0.78Mbps)。所以，理论上一页 200KB 的网站 10000IP（20000PV）至少要 0.78m 的带宽.如果一个页面有 600KB，至少需要 0.78x3=2.34m 的带宽。<br>
=""src="&gt;<br>
但是理论和实践总是有差距的，实际使用中的带宽消耗可能远远超过理论值。所以理论值在选择带宽时只能作为参考数据，建议最终购买的带宽量是理论值的 2~3 倍，这样可以保证网站有足够的带宽，但也不至于太浪费。<br>
微子网从事服务器业务已有 12 年。作为华为云，的服务中心，它在服务器和云服务器，提供各种配置以及上游和下游业务。要了解更多有关咨询带宽和服务器配置的信息，您可以点击我们的在线商务桥，我们的专业人士将详细回答您的问题！]]></description><link>https://wxkj.asia/mynote/学习笔记/1万访问需要多少宽带.html</link><guid isPermaLink="false">学习笔记/1万访问需要多少宽带.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 20:11:17 GMT</pubDate></item><item><title><![CDATA[好书推荐]]></title><description><![CDATA[ 
 <br><br><a data-tooltip-position="top" aria-label="https://www.ruanyifeng.com/survivor/index.html" rel="noopener" class="external-link" href="https://www.ruanyifeng.com/survivor/index.html" target="_blank">未来世界的幸存者</a>]]></description><link>https://wxkj.asia/mynote/学习笔记/好书推荐.html</link><guid isPermaLink="false">学习笔记/好书推荐.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 02 May 2024 15:45:41 GMT</pubDate></item><item><title><![CDATA[typescript之绑定和解绑事件]]></title><description><![CDATA[ 
 <br>如果在类中，你函数中使用了 this，必须像这样绑定<br>private boundDemoCallback: () =&gt; void;

demoCallback(a: any,b: any, c: any) {
	console.log(a,b,c, 1111);
}

demoListen () {
	//const btn = this.app.workspace.containerEl.find(".demo1")
	const btn = document.querySelector(".demo1")
	this.boundDemoCallback = this.demoCallback.bind(this, 1, 2, 3);
	this.registerDomEvent(btn as HTMLElement, 'click', this.boundDemoCallback)
}

demoRemoveListen() {
	const btn = document.querySelector(".demo1")
	btn?.removeEventListener('click', this.boundDemoCallback);
}

复制<br>这里借助了	this.boundDemoCallback 作为中转函数并传递参数，如果直接写 this.demoCallback.bind(this)是无法解绑的。<br>注意： 这里的 this.registerDomEvent 是 obsidian 的写法，相当于 btn.addEventListener('click', this.boundDemoCallback); <br><br>在JavaScript中，bind方法会创建一个新的函数实例，这个新的函数会拥有与原函数相同的主体，但它的this上下文会被绑定到bind方法的第一个参数所指定的对象。<br>当你在事件监听器中使用this.demoCallback.bind(this)时，实际上是创建了一个新的函数实例，并将其作为监听器附加到DOM元素上。在尝试解绑事件监听器时，你使用的依然是this.demoCallback这个原始函数引用，而不是之前通过bind创建并添加到事件监听链的那个新函数实例。<br>因此，当执行removeEventListener时，因为比较的是函数引用的地址，而非函数内容，所以无法匹配到之前通过bind创建并添加的事件监听器，从而无法解绑。<br>正确的做法是在添加事件监听器时保存 bind 之后的新函数引用，然后在解绑时使用这个引用：<br>在 JavaScript 中，bind 方法会创建一个新的函数实例，这个新的函数会拥有与原函数相同的主体，但它的 this 上下文会被绑定到 bind 方法的第一个参数所指定的对象。<br>当你在事件监听器中使用 this.demoCallback.bind(this) 时，实际上是创建了一个新的函数实例，并将其作为监听器附加到 DOM 元素上。在尝试解绑事件监听器时，你使用的依然是 this.demoCallback 这个原始函数引用，而不是之前通过 bind 创建并添加到事件监听链的那个新函数实例。<br>因此，当执行 removeEventListener 时，因为比较的是函数引用的地址，而非函数内容，所以无法匹配到之前通过 bind 创建并添加的事件监听器，从而无法解绑。<br>正确的做法是在添加事件监听器时保存 bind 之后的新函数引用，然后在解绑时使用这个引用：<br>// 添加事件监听器时保存绑定过的函数引用
this.boundDemoCallback = this.demoCallback.bind(this);
btn?.addEventListener('click', this.boundDemoCallback);

// 解绑事件监听器时使用保存的引用
btn?.removeEventListener('click', this.boundDemoCallback);
复制<br>这样，添加和移除的就是同一个函数实例，从而可以正确地解绑事件监听器。<br><br>bind方法的内部实现原理确实类似于创建了一个新的函数，该函数在调用时会维持指定的上下文（this值），并可选地预设一些参数。但实际的实现要比您给出的简写形式稍微复杂一些，因为它还需要处理额外的细节，比如保留原始函数的原型链、不可枚举属性等。<br>概念上，bind生成的函数可能近似于：<br>var boundFunc = function(...args) {
    // 把传递给新函数的参数和之前bind时预设的参数合并
    var combinedArgs = [...presetArgs, ...args];
    
    // 设置正确的this上下文
    var context = thisArg || window; // 根据调用情况确定this值，默认为window/global

    // 调用原始函数
    return this.demoCallback.apply(context, combinedArgs);
};
复制<br>这里只是简化了 bind 实现的一个大概思路，真实的 bind 方法还会处理更多的边界情况和兼容性问题。而在事件监听的场景下，重点在于 bind 会返回一个新的函数引用，所以在解绑时需要使用这个返回的新函数引用。<br><br>但，这个箭头函数必须在绑定和解绑函数中都能访问到才行，如果在类中，要么赋值给属性，要么赋值给全局变量，而且要注意 this 指向问题。<br>比如： <br>private demoCallbackWrapper: () =&gt; void;

demoCallback(a,b,c) {
	console.log(a,b,c, 1111);
}

demoListen () {
	const btn = document.querySelector(".side-dock-settings &gt; .side-dock-ribbon-action:nth-child(3)")
	this.demoCallbackWrapper = () =&gt; {
		this.demoCallback(1, 2, 3);
	};
	this.registerDomEvent(btn as HTMLElement, 'click', this.demoCallbackWrapper)

	// setTimeout(() =&gt; {
	// 	console.log("removed event");
	// 	btn?.removeEventListener('click', demoCallbackWrapper);
	// }, 10000);
}

demoRemoveListen() {
	const btn = document.querySelector(".side-dock-settings &gt; .side-dock-ribbon-action:nth-child(3)")
	btn?.removeEventListener('click', this.demoCallbackWrapper);
}
复制<br>再比如：<br>demoCallback(a,b,c) {
	console.log(a,b,c, this.settings.searchUrl, 1111);
}

demoListen () {
	const btn = document.querySelector(".side-dock-settings &gt; .side-dock-ribbon-action:nth-child(3)")
	window.demoCallbackWrapper = function() =&gt; {
		console.log('i am in');
		this.demoCallback(1, 2, 3);
	};
	this.registerDomEvent(btn as HTMLElement, 'click', window.demoCallbackWrapper)
}

demoRemoveListen() {
	const btn = document.querySelector(".side-dock-settings &gt; .side-dock-ribbon-action:nth-child(3)")
	btn?.removeEventListener('click', window.demoCallbackWrapper);
}
复制<br>再比如：<br>demoCallback(a,b,c) {
	console.log(a,b,c, 1111);
}

demoListen () {
	const btn = document.querySelector(".side-dock-settings &gt; .side-dock-ribbon-action:nth-child(3)")
	//this.boundDemoCallback = this.demoCallback.bind(this, 1, 2, 3);
	const demoCallbackWrapper = () =&gt; {
		this.demoCallback(1, 2, 3);
	};
	this.registerDomEvent(btn as HTMLElement, 'click', demoCallbackWrapper)

	setTimeout(() =&gt; {
		console.log("removed event");
		btn?.removeEventListener('click', demoCallbackWrapper);
	}, 10000);
}
复制]]></description><link>https://wxkj.asia/mynote/学习笔记/typescript之绑定和解绑事件.html</link><guid isPermaLink="false">学习笔记/typescript之绑定和解绑事件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 27 Mar 2024 20:02:31 GMT</pubDate></item><item><title><![CDATA[css重复选择符增加权重吗？]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:css权重" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#css权重</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:css特异性" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#css特异性</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:css特异性工具" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#css特异性工具</a> 
 <br><a href="https://wxkj.asia/mynote?query=tag:css权重" class="tag" target="_blank" rel="noopener">#css权重</a> <a href="https://wxkj.asia/mynote?query=tag:css特异性" class="tag" target="_blank" rel="noopener">#css特异性</a> <a href="https://wxkj.asia/mynote?query=tag:css特异性工具" class="tag" target="_blank" rel="noopener">#css特异性工具</a> <br><br>让我们来做个实验, 我们声明一个 html 节点:<br>&lt;div&gt;
  &lt;div id="testId" class="testClass"&gt;&lt;span&gt;test div&lt;/span&gt;&lt;/div&gt;
&lt;/div&gt;
复制<br>在 css 中我们添加两个选择器:<br>.testClass.testClass {
  background-color: red;
}
.testClass {
  background-color: black;
}
复制<br>如果重复的 css selector 会被忽略的话, 按照前面的规则, 最后声明的 css selector 会生效, 所以 这个 div 节点背景色应该是黑色. 让我们看看结果:<br><img src="https://pic2.zhimg.com/v2-3cab5da189a185119c2b9cf52ead51dd_b.jpg" referrerpolicy="no-referrer"><br>结果我们得到的是一个红色的 div, 也就是说&nbsp;.testClass.testClass&nbsp;高于&nbsp;.testClass. 所以结论是: 重复的 css selector, 其权重会被重复计算.<br><br>如图：<br><img src="https://wxkj.asia/mynote/lib/media/css重复选择符增加权重吗？-20240326131216165.webp"><br>让我们来做一个简单的测试:<br>按照图片中的计算公式: 如果一个 css 选择器包含11 个 class selector type, 另一个选择器是1 个 id selector type. 那么 class 选择器的权重会高于 id 选择器的权重. 让我们来试一试:<br>.testClass.testClass.testClass.testClass.testClass.testClass
  .testClass.testClass.testClass.testClass.testClass {
  background-color: red;
}
#testId {
  background-color: black;
}
复制<br>让我们看看结果:<br><img src="https://pic3.zhimg.com/v2-47ed1c666ae1bc8d28bd05806f4661be_b.jpg" referrerpolicy="no-referrer"><br>结果显示还是&nbsp;id 选择器权重更高.<br><br>实际上，"两个类名重复"并不意味着权重增加，而是指选择器变得更具体、更具有特异性。在 CSS 选择器中，重复的类名只是意味着元素需要同时具备这两个类名才会匹配该选择器，这增加了匹配条件的严格程度，而非直接增加权重。<br>在您的例子中：<br>
<br>
.testClass.testClass 意味着元素需要同时拥有两个类名 ".testClass"，这种情况下，由于这个选择器比 .testClass 更具特异性，所以它会覆盖 .testClass 的样式。

<br>
而多个类选择器（如 .testClass.testClass.testClass...）相对于一个 ID 选择器（如 #testId），即使类选择器数量再多，其总体特异度仍然低于 ID 选择器。这是因为 ID 选择器的特异度固定为 100 分，而每个类选择器仅为 10 分，所以无论类选择器的数量是多少，都无法超越 ID 选择器的特异度。

<br>总结来说，同级别内的选择器，增加类名的匹配条件确实可以增加特异度，但无法通过简单地重复类名来跨越类选择器与 ID 选择器之间的特异度差距。类选择器的数量多少不改变其单位特异度得分，而 ID 选择器的特异度始终高于类选择器。<br><br>虽然浏览器开发者工具本身不直接显示 CSS 特异度（权重）的具体数值，但有一些第三方工具可以帮助你计算和可视化 CSS 选择器的特异度：<br>
<br>
Specificity Calculator:

<br>在线工具，例如 <a data-tooltip-position="top" aria-label="https://specificity.keegan.st/" rel="noopener" class="external-link" href="https://specificity.keegan.st/" target="_blank">Specificity Calculator</a>，只需输入 CSS 选择器，它就会为你计算出特异度值，并直观展示得分详情。


<br>
浏览器插件：

<br>如 Stylebot、CSS Specificity Visualizer 等插件，可以安装在浏览器中直接查看页面元素的 CSS 特异度。


<br>
开发者工具扩展：

<br>虽然原生开发者工具不直接显示特异度，但有些开发者制作的扩展或脚本可以帮助你更好地分析样式。例如，Chrome 的一个名为 CSS Specificity Highlighter 的扩展，它可以高亮显示样式表中不同特异度级别的选择器。


<br>通过这些工具，你可以更准确、直观地查看和比较 CSS 选择器的权重，减少人为计算错误的可能性。]]></description><link>https://wxkj.asia/mynote/学习笔记/css重复选择符增加权重吗？.html</link><guid isPermaLink="false">学习笔记/css重复选择符增加权重吗？.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 26 Mar 2024 08:27:08 GMT</pubDate><enclosure url="https://pic2.zhimg.com/v2-3cab5da189a185119c2b9cf52ead51dd_b.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://pic2.zhimg.com/v2-3cab5da189a185119c2b9cf52ead51dd_b.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[抽象类和接口使用场景]]></title><description><![CDATA[ 
 <br>抽象类（Abstract Classes）通常用于以下场景：<br>
<br>
定义基类：抽象类可以作为一个类族的基类，提供了一种组织类层次结构的方式。它通常包含一系列子类共享的属性和方法，并且可以包含抽象方法，强迫子类去实现这些方法。
示例：在动物模拟系统中，可以定义一个抽象的 Animal 类，其中包含所有动物共有的属性（如名字、年龄）和抽象方法（如 eat、sleep），然后具体的动物类（如 Dog、Cat）继承并实现抽象方法。

<br>
实现模板方法设计模式：抽象类可以定义一个算法的骨架，允许子类在不改变算法结构的前提下，重写某些步骤的方法。模板方法是一个在抽象类中定义的最终方法（final method），它调用了若干个抽象方法或钩子方法（hook methods），这些方法由子类实现。
示例：一个抽象的 ReportGenerator 类可以定义一个 generateReport 模板方法，该方法内部调用了几个抽象方法，如 getData, formatData，具体报告生成器（如 DailyReportGenerator、WeeklyReportGenerator）继承并实现这些抽象方法。

<br>接口（Interfaces）通常用于以下场景：<br>
<br>
定义规范或契约：接口定义了一组方法签名，表明实现该接口的类必须提供这些方法。它只关注对象的行为，不关心其实现细节，有利于实现松耦合的设计。
示例：在 GUI 库中，可以定义一个 Button 接口，规定了 render、onClick 等方法，任何想要成为按钮控件的类都必须实现这个接口。

<br>
实现多态和依赖倒置原则：接口可以让类之间的耦合度降低，使得高层模块不受底层模块变动的影响。在设计中，模块间的依赖应该是基于接口而不是具体实现。
示例：服务提供者注册到服务消费者时，消费者依赖于服务接口而不是具体的实现类，这样当服务提供者发生变化时，只要保持接口不变，消费者就不需要更改。

<br>
实现多重继承效果：TypeScript 类只能单继承，但一个类可以实现多个接口，从而实现类似多重继承的效果，能够聚合多个独立的行为特征。
示例：一个类可以同时实现 Readable、Writable 和 Seekable 接口，表明它可以像读取流、写入流一样工作，并且支持定位操作。

]]></description><link>https://wxkj.asia/mynote/学习笔记/抽象类和接口使用场景.html</link><guid isPermaLink="false">学习笔记/抽象类和接口使用场景.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 23 Mar 2024 01:43:25 GMT</pubDate></item><item><title><![CDATA[this .fullscreenMode.bind(this)这是什么意思]]></title><description><![CDATA[ 
 <br><br>this.fullscreenMode.bind(this) 是在 JavaScript 中出现的一种绑定函数上下文（context binding）的表达式，主要用于确保在调用函数时 this 关键字指向正确的对象。<br>在 JavaScript 中，this 关键词的值取决于函数调用时的上下文。如果不进行绑定，当函数作为事件处理器、定时器回调或者传递给其他函数调用时，this 可能会指向错误的对象，例如在事件处理器中可能会指向触发事件的 DOM 元素，而不是你期望的对象。<br>bind() 方法则是 JavaScript 中的一个内置方法，它会创建一个新的函数，这个新函数在调用时不论在哪里调用，其内部的 this 都会指向 bind() 方法的第一个参数所指定的对象。<br>所以，this.fullscreenMode.bind(this) 的含义是：<br>fullscreenMode 是一个对象（假设是当前对象）的成员函数。<br>
.bind(this) 是对 fullscreenMode 函数的调用，目的是创建一个新的函数副本，确保无论何时调用这个副本函数，this 都会指向调用 bind() 方法时的当前对象。<br>
通过这样的绑定，当你将 this.fullscreenMode.bind(this) 分配给事件处理器或其他回调函数时，即使在异步调用或事件循环中调用这个函数，它也能正确引用到当前上下文的对象。<br><br>在 JavaScript 中，this 关键字的上下文在函数调用时会根据调用位置的不同而变化。如果我们不使用 .bind(this) 来绑定上下文，可能会遇到如下几种情况：<br>匿名函数调用：在普通函数调用或作为表达式的一部分时，this 通常会指向全局对象（在浏览器环境中是 window 对象，在严格模式下是 undefined）。<br>对象方法调用：当函数作为对象的属性并以对象方式调用时，this 指向该对象。<br>事件处理函数：在 HTML 事件处理程序中，this 通常指向触发事件的 DOM 元素。<br>定时器回调：在 setTimeout 或 setInterval 的回调函数中，this 通常指向全局对象（非严格模式下的 window）。<br>构造函数：在构造函数中，this 指向新创建的对象实例。<br>使用 .bind(this) 的好处：<br>确保上下文一致性：当你需要确保 this 总是指向当前对象实例时，使用 .bind(this) 可以明确指定函数调用时的上下文，即使函数在将来以某种非预期方式（如事件处理程序、回调函数）被调用时也是如此。<br>
例如，假设有一个对象：<br>Javascript<br>
let obj = {<br>
fullscreenMode: function() {<br>
// 使用 this 操作对象内部的属性或方法<br>
console.log(this.someProperty);<br>
},<br>
init: function() {<br>
document.addEventListener('click', this.fullscreenMode); // 不使用.bind(this)，在事件触发时，this 可能指向触发事件的 DOM 元素而非 obj<br>
document.addEventListener('click', this.fullscreenMode.bind(this)); // 使用.bind(this)，确保在事件处理程序中，this 始终指向 obj<br>
},<br>
someProperty: 'Hello'<br>
};<br>
在上述代码中，如果不使用 bind(this)，当点击事件触发时，fullscreenMode 内部的 this 可能会指向触发事件的 DOM 元素。而使用了 bind(this) 后，this 将始终指向 obj 对象实例。这就是使用和不使用 .bind(this) 的主要区别。<br><br>是的，使用箭头函数（Arrow Function）在很大程度上可以避免 this 上下文丢失的问题。箭头函数没有自己的 this 值，它会捕获其所在作用域（lexical scope）的 this 值。这意味着在对象方法中定义的箭头函数会自动继承其外层作用域（通常是该对象）的 this。<br>例如，对比普通函数和箭头函数：<br>Javascript<br>
let obj = {<br>
normalFunction: function() {<br>
console.log(this); // 如果在事件处理器中调用，这里的 this 可能指向事件触发元素而非 obj<br>
},<br>  arrowFunction: () =&gt; {<br>
console.log(this); // 在箭头函数中，这里的 this 永远指向 obj，因为它捕获了外层作用域的 this<br>
},<br>  init: function() {<br>
document.addEventListener('click', this.normalFunction); // 若不使用 .bind(this)，normalFunction 内部的 this 可能指向错误的对象<br>
document.addEventListener('click', this.arrowFunction); // 箭头函数无需 .bind(this)，其内部的 this 自动指向 obj<br>
}<br>
};<br>obj.init();<br>
在上述示例中，当使用箭头函数作为事件处理器时，不需要使用 .bind(this)，因为箭头函数的 this 已经自动绑定了正确的上下文。然而，箭头函数也有一些限制，例如它们不能作为构造函数，也不能使用 arguments 对象，因此在特定场景下可能仍需使用普通函数并结合 .bind(this) 来维护上下文。<br>class SampleModal extends Modal { constructor(app: App) { super(app); }<br>Code<br>
onOpen() {<br>
const {contentEl} = this;<br>
contentEl.setText('Woah!');<br>
}<br>onClose() {<br>
const {contentEl} = this;<br>
contentEl.empty();<br>
}<br>
} 这个类里的函数是箭头函数吗<br>这个类 SampleModal 中的 onOpen 和 onClose 函数不是箭头函数。它们是普通的 JavaScript 类方法，通过 function 关键字定义的。箭头函数的定义格式是 () =&gt; {}，而这里的函数定义格式是 function onOpen() {} 和 function onClose() {}。<br><br>不一定必须使用 bind(this)。在这个 SampleModal 类中，由于 onOpen 和 onClose 方法是在类的实例方法中直接调用的，因此它们默认会绑定到调用它们的类实例上，也就是说，这里的 this 会指向正确的 SampleModal 实例。<br>但如果要在回调函数中调用这些方法，例如在事件监听器或者其他异步上下文中，此时 this 可能会改变，从而指向调用该函数的对象（如 DOM 元素或全局对象）。在这种情况下，如果需要保持对 SampleModal 实例的引用，就需要使用 .bind(this) 来手动绑定上下文，或者使用箭头函数来自动捕获当前上下文的 this。<br>举个例子：<br>Javascript<br>
class SampleModal extends Modal {<br>
constructor(app) {<br>
super(app);<br>    document.addEventListener('click', this.onOpen.bind(this)); // 使用 bind 绑定 this
    // 或者
    document.addEventListener('click', () =&gt; this.onOpen()); // 使用箭头函数捕获 this
}

// ...
复制<br>}<br>
在以上代码中，若不使用 .bind(this) 或箭头函数，this.onOpen 直接作为事件处理器时，在事件触发时 this 可能不会指向 SampleModal 实例。而在使用了 .bind(this) 或箭头函数后，就能确保 this 在事件处理函数中指向正确的 SampleModal 实例。<br><br>在类方法中调用命名函数（即非箭头函数的普通函数），该命名函数内部的 this 并不会自动指向类的实例。this 的指向取决于函数调用的位置和方式。<br>例如：<br>class MyClass {
    constructor() {
        this.value = 'FromClass';
    }

    myMethod() {
        const namedFunction = function() {
            console.log(this.value); // 这里的 this 不指向 MyClass 实例
        };

        namedFunction(); // 直接调用，此时 this 通常指向全局对象（浏览器环境为 window）
    }
}

const instance = new MyClass();
instance.myMethod(); // 输出 undefined 或报错，因为 this.value 在全局作用域中未定义
复制<br>在上述例子中，namedFunction 内部的 this 不会指向 MyClass 的实例。如果需要在命名函数中访问类实例的属性和方法，你需要手动绑定 this，或者使用闭包等方式来保存对类实例的引用。<br>若要让 this 指向类实例，可以这样操作：<br>class MyClass {
    constructor() {
        this.value = 'FromClass';
    }

    myMethod() {
        const self = this; // 使用闭包保存对类实例的引用
        const namedFunction = function() {
            console.log(self.value); // 使用 self 访问类实例的属性
        };

        namedFunction.call(this); // 使用 call 或 apply 显式绑定 this
    }
}

const instance = new MyClass();
instance.myMethod(); // 输出 "FromClass"
或者使用箭头函数，箭头函数会捕获其所在作用域的 this：

Javascript
class MyClass {
    constructor() {
        this.value = 'FromClass';
    }

    myMethod = () =&gt; { // 使用箭头函数声明类方法
        const namedFunction = () =&gt; {
            console.log(this.value); // 箭头函数内部的 this 指向 MyClass 实例
        };

        namedFunction();
    }
}

const instance = new MyClass();
instance.myMethod(); // 输出 "FromClass"
复制<br><br>call() 和 apply() 都是 JavaScript 中函数对象的方法，它们的主要功能是调用一个函数，并可以改变函数调用时的上下文（即 this 的值），同时还可以灵活地传递参数。两者的区别主要在于参数传递的方式：<br>call() 方法：<br>Javascript<br>
function.call(thisArg, arg1, arg2, ..., argN);<br>
call() 方法接受至少两个参数，第一个参数是要绑定的上下文对象（即 this 指向的对象），后续参数是传递给被调用函数的实际参数，每个参数单独列出。<br>
apply() 方法：<br>Javascript<br>
function.apply(thisArg, [arg1, arg2, ..., argN]);<br>
apply() 方法同样接受至少两个参数，第一个参数也是要绑定的上下文对象。<br>
第二个参数是一个数组或者类数组对象，其中包含了传递给被调用函数的所有参数。apply() 方法会将这个数组拆解成一个个单独的参数来传递给目标函数。<br>
总结起来，call() 和 apply() 的主要区别在于：<br>当你知道确切的参数数量并且参数不需要封装在数组中时，可以使用 call() 方法。<br>
当你需要传递的参数是以数组或类数组对象形式存在的时候，使用 apply() 方法更为方便，因为它可以一次性将数组的所有元素作为参数传递给目标函数。<br>
另外，ES6 引入了 bind() 方法，它与 call() 和 apply() 类似，用于改变函数的上下文并预先设定参数，但它并不会立即执行函数，而是返回一个新的函数。<br><br>类（Class）本身不能直接使用 bind 方法，因为 bind 是函数对象的一个方法，用于创建一个新的函数，在新函数中绑定 this 的上下文以及预先设置参数。类是一种特殊的函数，但当我们直接对类使用 bind 时，并不会得到预期的效果，因为它并非可调用的对象。<br>如果你想在类的实例方法中保持对类实例 this 的引用，通常有以下几种做法：<br>
<br>在构造函数中绑定实例方法：
<br>class Menu {
  constructor() {
    this.handleClick = this.handleClick.bind(this);
  }

  handleClick() {
    // 这里的 this 会指向 Menu 类的实例
    console.log(this);
  }
}
复制<br>
<br>使用箭头函数定义实例方法：
<br>class Menu {
  handleClick = () =&gt; {
    // 这里的 this 会自动捕获外围作用域的 this，也就是 Menu 类的实例
    console.log(this);
  }
}
复制<br>
<br>如果是类静态方法，你可以直接在方法内部使用 this，因为它指的是类自身而不是类的实例：
<br>class Menu {
  static createMenuItem() {
    // 这里的 this 指向 Menu 类
    console.log(this);
  }
}
复制<br>总之，bind 方法主要是针对函数的，而非类。如果你想在类的实例方法中确保 this 的指向，可以参考上述两种方法。]]></description><link>https://wxkj.asia/mynote/学习笔记/javascript-this.html</link><guid isPermaLink="false">学习笔记/JavaScript this.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 23 Mar 2024 00:49:07 GMT</pubDate></item><item><title><![CDATA[学习资料]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/129673377" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/129673377" target="_blank">Swoole 入门教程 —— 2小时入门Swoole - 知乎</a><br><a data-tooltip-position="top" aria-label="https://space.bilibili.com/1176880220" rel="noopener" class="external-link" href="https://space.bilibili.com/1176880220" target="_blank">识沃科技的个人空间-识沃科技个人主页-哔哩哔哩视频</a><br><a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/364044293" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/364044293" target="_blank">TinyWebServer——从0到服务器开发！ - 知乎</a><br><a data-tooltip-position="top" aria-label="https://github.com/yongxinz/tech-blog/tree/master" rel="noopener" class="external-link" href="https://github.com/yongxinz/tech-blog/tree/master" target="_blank">技术文章</a><br><a data-tooltip-position="top" aria-label="https://github.com/yongxinz/gopher" rel="noopener" class="external-link" href="https://github.com/yongxinz/gopher" target="_blank">GitHub - yongxinz/gopher: Go 学习路线图，包括基础专栏，进阶专栏，源码阅读，实战开发，面试刷题，必读书单等一系列资源</a>]]></description><link>https://wxkj.asia/mynote/学习笔记/学习资料.html</link><guid isPermaLink="false">学习笔记/学习资料.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:20:51 GMT</pubDate></item><item><title><![CDATA[templater]]></title><description><![CDATA[ 
 ]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/插件/templater.html</link><guid isPermaLink="false">工具软件/obsidian/插件/templater.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 13 May 2024 04:17:26 GMT</pubDate></item><item><title><![CDATA[quickadd]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://quickadd.obsidian.guide/docs/InlineScripts" rel="noopener" class="external-link" href="https://quickadd.obsidian.guide/docs/InlineScripts" target="_blank">内联脚本</a><br>&nbsp;在 Capture format 下面添加脚本<br><img alt="image" src="https://forum-zh.obsidian.md/uploads/default/original/2X/5/503df3449b2d1176fad81a653149cf2108790246.png" referrerpolicy="no-referrer"><br>对于 JS 代码，格式：用代码块包裹，语言“js quickadd”。<br>```js quickadd
代码
```
复制<br><a data-tooltip-position="top" aria-label="https://quickadd.obsidian.guide/docs/Choices/MacroChoice" rel="noopener" class="external-link" href="https://quickadd.obsidian.guide/docs/Choices/MacroChoice" target="_blank">用户脚本中</a><br>在 template 目录添加 js 文件<br>按需导入 API，如&nbsp;module.exports = async ({ quickAddApi })=&gt; { 代码 }，即可在外部 JS 代码中使用&nbsp;quickAddApi，无需前加&nbsp;this.。<br>在宏配置 User Scripts 中选择对应外部 JS、点击 Add<br><img alt="image" src="https://forum-zh.obsidian.md/uploads/default/original/2X/8/8ce004d81ad3e66c6d985cfb3ad7c4e5e20e0ea8.png" referrerpolicy="no-referrer"><br>官方 api: <a data-tooltip-position="top" aria-label="https://quickadd.obsidian.guide/docs/QuickAddAPI" rel="noopener" class="external-link" href="https://quickadd.obsidian.guide/docs/QuickAddAPI" target="_blank">QuickAdd API | QuickAdd</a><br>可参考：<br>
<a data-tooltip-position="top" aria-label="https://forum-zh.obsidian.md/t/topic/29521" rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/29521" target="_blank">QuickAdd JS &amp; Templater JS 简介及相互修改 - 经验分享 - Obsidian 中文论坛</a><br>
<a data-tooltip-position="top" aria-label="https://forum-zh.obsidian.md/t/topic/429" rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/429" target="_blank">「QuickAdd」更轻松的Yaml标签 - 经验分享 - Obsidian 中文论坛</a>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/插件/quickadd.html</link><guid isPermaLink="false">工具软件/obsidian/插件/quickadd.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 13 May 2024 04:34:46 GMT</pubDate><enclosure url="https://forum-zh.obsidian.md/uploads/default/original/2X/5/503df3449b2d1176fad81a653149cf2108790246.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://forum-zh.obsidian.md/uploads/default/original/2X/5/503df3449b2d1176fad81a653149cf2108790246.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[dataview]]></title><description><![CDATA[ 
 <br>文档外使用 dv<br>const dv=app.plugins.plugins.dataview.api<br>或<br>const dv=DataviewAPI<br>dv.el 嵌套<br>dv.el('div', dv.el('span', 'demo'))
dv.el('ul', dv.el('li', dv.el('span', 'demo')));
复制<br>dv.query<br>```dataviewjs
const result = await dv.query(`list`)
if (result.successful) {
  const list = result.value.values
  console.log(list)
} else {
  dv.paragraph("~~~~\n" + (result.error||"未知错误") + "\n~~~~")
}
```
复制<br>最近修改文件<br>```dataviewjs
dv.list(
    dv.pages()
    //.filter(p =&gt; moment(p.file.mday.toString()).format('MD') === moment().format('MD'))
    .sort(p =&gt; p.file.mtime, 'desc')
    .limit(100)
    .map(p =&gt; {
        const a=dv.el('a', p.file.name, { attr: { "data-href": p.file.path } });
        a.addEventListener('click', function(e) {
            app.workspace.getLeaf('tab').openFile(app.vault.getAbstractFileByPath(this.getAttribute("data-href")));
        });
        return a;
    })
)
```
复制<br>特殊语法 ::<br>示例：<br>a::aa1
a::aa2
b::b1
b::b2
复制<br>读取 app.plugins.plugins.dataview.api.page("demo.md")<br>返回：<br>{
    "a": [
        "aa",
        "aa1"
    ],
    "b": [
        "b1",
        "b2"
    ]
}
复制<br>js 执行命令<br>this.app.commands.executeCommandById('app:open-settings')<br>查看命令列表<br>this.app.commands.listCommands()]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/插件/dataview.html</link><guid isPermaLink="false">工具软件/obsidian/插件/dataview.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 17 May 2024 21:01:03 GMT</pubDate></item><item><title><![CDATA[关闭重复标签]]></title><description><![CDATA[ 
 <br>this.app.workspace.onLayoutReady(() =&gt; {
	this.registerEvent(
		this.app.workspace.on("active-leaf-change", (activeLeaf) =&gt; {
			const filePath = activeLeaf?.view.getState().file;
			if (!filePath) return;
			const viewType = activeLeaf?.view.getViewType();
			// 获取已存在的其他叶子
			let repeatLeaves = this.app.workspace.getLeavesOfType(viewType).filter((leaf) =&gt;
				// 不包含新打开的叶子
				leaf !== activeLeaf &amp;&amp;
				// 限制同一个分割窗口下的叶子
				//leaf.parent.id === activeLeaf.parent.id &amp;&amp;
				// 筛选文件路径相同的叶子
				leaf.view?.getState().file === filePath
			)
			if(repeatLeaves.length &gt; 0) {
				repeatLeaves.push(activeLeaf)
				// 排序规则，pinned优先，相同条件下，最先打开的优先
				repeatLeaves = repeatLeaves.sort((leaf1, leaf2) =&gt; {
					// 如果 leaf1 被固定但 leaf2 没有，leaf1 在前
					if (leaf1.pinned &amp;&amp; !leaf2.pinned) return -1;
					// 如果 leaf2 被固定但 leaf1 没有，leaf2 在前
					if (!leaf1.pinned &amp;&amp; leaf2.pinned) return 1;
					// 当两者都 pinned 或者都没有 pinned 的情况，根据 activeTime 排序
					const leaf2ActiveTime =leaf2.activeTime || Date.now()
					if (leaf1.activeTime !== leaf2ActiveTime) {
						// 时间早的在前
						return leaf1.activeTime - leaf2ActiveTime;
					}
					// activeTime 相同的情况下，保持原顺序
					return 0;
				});

				// 激活排序后的第一个叶子
				const newActiveLeaf = repeatLeaves.shift();
				this.app.workspace.setActiveLeaf(newActiveLeaf, { focus: true });

				// 关闭排序后的其他叶子
				repeatLeaves.forEach((leaf) =&gt; {
					leaf?.detach()
				});
			}
			// 如果设置为默认锁定体验更佳，但锁定的叶子关闭需要点击两次或者右键关闭
			// 这样相当于每次都新标签打开
			// setTimeout(() =&gt; {
			// 	const currActiveLeaf = this.app.workspace.getActiveViewOfType(ItemView)?.leaf;
			// 	if(!currActiveLeaf?.pinned) currActiveLeaf?.setPinned(true);
			// }, 42);
		})
	)
})
复制]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/插件/关闭重复标签.html</link><guid isPermaLink="false">工具软件/obsidian/插件/关闭重复标签.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 17 Apr 2024 13:01:37 GMT</pubDate></item><item><title><![CDATA[插件开发笔记]]></title><description><![CDATA[ 
 <br>通过命令 id 执行命令<br>this.app.commands.executeCommandById('app:open-settings');
复制<br>添加，修改，删除 frontmatter<br>const file = this.app.vault.getFileByPath("demo.md");
if(file) {
	//see https://forum.obsidian.md/t/how-to-use-app-filemanager-processfrontmatter/73467
	this.app.fileManager.processFrontMatter(file, (frontmatter: any) =&gt; {
		frontmatter['a'] = "aaaa";
		frontmatter['b'] = "bbbb";
		frontmatter['c'] = "cccc";
	})
}
复制<br>读取 frontmatter <br>// 从缓存读取
let fm = this.app.metadataCache.getFileCache(file)?.frontmatter
console.log(fm)

// 从文件解析
import { getFrontMatterInfo, parseYaml } from 'obsidian';
const content = await this.app.vault.read(file)
const yaml = getFrontMatterInfo(content).frontmatter
const yamlObj = parseYaml(yaml)
console.log(yamlObj)
复制<br>激活叶子<br>this.app.workspace.setActiveLeaf(leaf, { focus: true });<br>复制到剪切板<br>navigator.clipboard.writeText('');<br>记录叶子的光标和滚动条位置<br>onst state = leaf.getEphemeralState()
setTimeout(() =&gt; {
    leaf.setEphemeralState(state);
}, 42);
复制<br>关闭重复标签<br><a class="internal-link" data-href="关闭重复标签.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/关闭重复标签.html" target="_self" rel="noopener">关闭重复标签</a><br>用默认文件打开（也可以打开文件夹）<br>this.app.openWithDefaultApp(FolderOrFile)<br>获取 .obsidian 目录<br>const vault = this.app.vault
const adapter = vault.adapter
const obConfigDir = adapter.path.join(adapter.basePath, vault.configDir)
console.log(obConfigDir)
复制<br>获取当前激活 view 的类型<br>this.app.workspace.activeLeaf.view.getViewType()<br>
或 <br>获取 rootSplit <br>@ts-ignore<br>
this.app.workspace.rootSplit.containerEl<br>当未开启番茄工作法且鼠标不在状态栏焦点时自动隐藏状态栏<br>/* 当未开启番茄工作法且鼠标不在状态栏焦点时隐藏状态栏 */
.status-bar:not(:hover):has(.plugin-obsidian-statusbar-pomo:empty) {
    opacity: 0;
}
复制<br>notice 倒计时<br>let count = 10
const a=new Notice("hello "+count, 0);
while (count &gt; 0) {
count--;
await new Promise((resolve) =&gt; setTimeout(resolve, 1000)).then(() =&gt; {a.setMessage("hello "+count);});
}
a.hide()
复制<br>在当前叶子打开文件<br>await app.workspace.activeLeaf.openFile(app.vault.getAbstractFileByPath("demo.md"))
复制<br>新窗口打开文件<br>await app.workspace.getLeaf('tab').openFile(app.vault.getAbstractFileByPath('demo.md'))
复制<br>obsidian 插件外 require('obsidian')<br>
<br>
先去github安装这个插件<a data-tooltip-position="top" aria-label="https://github.com/mnaoumov/obsidian-fix-require-modules/releases/tag/1.0.1" rel="noopener" class="external-link" href="https://github.com/mnaoumov/obsidian-fix-require-modules/releases/tag/1.0.1" target="_blank">obsidian-fix-require-modules</a>并开启插件。

<br>
如下方法调用

<br>const ob = require('obsidian');
const markdown = ob.htmlToMarkdown(htmlContent);
复制<br>htmlToMarkdown 在非 obsidian 环境可以用 <a data-tooltip-position="top" aria-label="https://github.com/mixmark-io/turndown" rel="noopener" class="external-link" href="https://github.com/mixmark-io/turndown" target="_blank">turndown</a>，貌似 obsidian 中就用的这个项目。<br>写文档<br>app.vault.adapter.write("demo.md", 'demo')]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/插件/插件开发笔记.html</link><guid isPermaLink="false">工具软件/obsidian/插件/插件开发笔记.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 18 May 2024 00:06:29 GMT</pubDate></item><item><title><![CDATA[HK Code Block插件的使用]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:ff0000" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#ff0000</a> 
 <br>Features<br>
Title<br>
You can add title to the code block like this.<br>print("Hello world")
复制<br>Title<br>You must put the title in quotes. You can use both single and double quotes.<br>Collapse<br>
You must use the title feature to use the collapse feature. You can collapse the code block like this.<br>print("Hello world")
复制<br>Or like this.<br>print("Hello world")
复制<br>Collapsible 1<br>Collapsible 2<br>If you want to explicitly expand the code block, you can do it like this.<br>print("Hello world")
复制<br>Line Numbers<br>
You can add line numbers to the code block like this.<br>print("Hello world")
复制<br>Or like this.<br>print("Hello world")
复制<br>Linenos 1<br>If you don't specify any options, the line numbers will start from the value set in the settings (default: 1). If you want the line numbers to start from a specific value, you can do it like this.<br>print("Hello world")
复制<br>Linenos 2<br>You can also use negative values.<br>print("Hello world")
复制<br>Linenos 3<br>If you want to explicitly hide the line numbers, you can do it like this.<br>print("Hello world")
复制<br>Line Highlight<br>
You can highlight specific lines in the code block with commas like this.<br>print("line 1")
print("line 2")
print("line 3")
print("line 4")
print("line 5")
print("line 6")
print("line 7")
print("line 8")
print("line 9")
print("line 10")
print("line 11")
复制<br>Highlight 1<br>You must put the line numbers in quotes. You can use both single and double quotes. You can also use a dash to specify a range of line numbers.<br>If you use the line numbers feature and set the line numbers don't start from 1, you must enter the line numbers to be highlighted according to that.<br>print("Hello world")
print("I love you")
print("Wow")
复制<br>Highlight 2<br>Language Indicator<br>
You can add the language indicator to the code block like this.<br>print("Hello world")
复制<br>Or like this.<br>print("Hello world")
复制<br>Language 1<br>The displayed language is following the language of the code block by default, but if you want, you can specify it explicitly. In this case, you can change the language displayed while keeping the syntax highlighting done by the language of the code block.<br>print("Hello world")
复制<br>Language 2<br>You must put the language in quotes. You can use both single and double quotes.<br>If neither the language of the code block nor the language specified by the language option is specified, the language displayed is the value set in the settings (default: "plain text").<br>If you want to explicitly hide the language indicator, you can do it like this.<br>print("Hello world")
复制<br>Copy Button<br>
You can add a copy button to the code block like this.<br>print("Hello world")
复制<br>Or like this.<br>print("Hello world")
复制<br>Copybtn<br>If you want to explicitly hide the copy button, you can do it like this.<br>print("Hello world")
复制<br>Prompt<br>
You can add a prompt to the code block like this.<br>mkdir test
复制<br>Or like this.<br>mkdir test
复制<br>Prompt 1<br>If you don't specify any options, the prompt will be the value set in the settings (default: "$"). If you want to use another prompt, you can do it like this.<br>mkdir test
复制<br>Prompt 2<br>You must put the prompt in quotes. You can use both single and double quotes.<br>If there is a "" character at the end of the line, the prompt will not be displayed on the next line.<br>docker run -it \
    ubuntu:latest
复制<br>Prompt 3<br>If you want to explicitly hide the prompt, you can do it like this.<br>mkdir test
复制<br>Result<br>
You can add a result to the code block like this.<br>print("Hello world!")
复制<br>Hello world!
复制<br>Result 1<br>Note that the Result Code Block must be placed immediately after the Code Block to which the result belongs. You must not put any other components between them.<br>Also note that the result code block is not dynamically generated. Result code blocks are just simple plain-text code blocks. You must enter the result manually.<br>You can use line numbers, line highlight features only in the result code block. Other features will be ignored even if you specify them.<br>Print ("Hello world!")
复制<br>Hello world!
复制<br>Hello world!
复制<br>Result 2<br>The prompt of the result code block is the value set in the settings by default (default: "Result"). If you want to use another prompt, you can do it like this.<br>Import random
Print (random.Randint (1, 100))
复制<br>42
复制<br>Result 3<br>Settings<br>
You can change the default settings of each feature of HK Code Block in the settings.<br>Title<br>
Use Title<br>
Default off, but on when specified : the title will only be shown if the title statement is specified<br>
Always off : the title will never be shown<br>
Collapse<br>
Use Collapse<br>
Always on : the code block will always be collapsible<br>
Default on, but off when specified : the code block will always be collapsible, but will not be collapsed if collapse statement is specified as false<br>
Default off, but on when specified : the code block will only be collapsible if the collapse statement is specified as true<br>
Always off : the code block will never be collapsible<br>
Default Collapse State : the default collapse state of the code block<br>
Line numbers<br>
Use Line Numbers<br>
Always on : line numbers will always be shown<br>
Default on, but off when specified : line numbers will always be shown, but will not be shown if linenos statement is specified as false<br>
Default off, but on when specified : line numbers will only be shown if the linenos statement is specified as true<br>
Always off : line numbers will never be shown<br>
Default Line Number Start : the default line number start of the code block (default: 1)<br>
Show Line Number Splitter : whether to show the line number splitter (default: true)<br>
Line Highlight<br>
Use Line Highlight<br>
Default off, but on when specified : line highlight will only be shown if the line highlight statement is specified<br>
Always off : line highlight will never be shown<br>
Line Highlight Color : The background color of the highlighted line. Note that the given color will be applied with 0.2 opacity. (default: <a href="https://wxkj.asia/mynote?query=tag:ff0000" class="tag" target="_blank" rel="noopener">#ff0000</a> )<br>
Language Indicator<br>
Use Language Indicator<br>
Always on : language indicator will always be shown<br>
Default on, but off when specified : language indicator will always be shown, but will not be shown if the language indicator statement is specified as false<br>
Default off, but on when specified : language indicator will only be shown if the language indicator statement is specified as true<br>
Always off : language indicator will never be shown<br>
Default Language : the default language name of the code block if the language is not specified. (default: "plain text")<br>
Copy Button<br>
Use Copy Button<br>
Always on : copy button will always be shown<br>
Default on, but off when specified : copy button will always be shown, but will not be shown if the copy button statement is specified as false<br>
Default off, but on when specified : copy button will only be shown if the copy button statement is specified as true<br>
Always off : copy button will never be shown<br>
Prompt<br>
Use Prompt<br>
Always on : prompt will always be shown for languages specified in the "Prompting Languages" option<br>
Default on, but off when specified : prompt will always be shown for languages specified in the "Prompting Languages" option, but will not be shown if the prompt statement is specified as false<br>
Default off, but on when specified : prompt will only be shown if the prompt statement is specified as true<br>
Always off : prompt will never be shown<br>
Prompting Languages : The languages that will be prompted by default. You can specify multiple languages by separating them with enters. (default: "bash")<br>
Default Prompt : The default prompt of the code block. (default: "$")<br>
Result<br>
Use Result<br>
Enable : use the result feature<br>
Disable : do not use the result feature<br>
Default Result Prompt : The default prompt of the result code block. (default: "Result")<br>
Developers<br>
Debug Mode<br>
True : enable debug mode. Log messages will be displayed in the console.<br>
False : disable debug mode.<br>
License<br>
MIT License<br>Known Issues<br>
Some features may not work properly depending on the theme you are using.<br>
Currently on 2023-02, I checked that the following themes are working properly.<br>
Default Theme<br>
Minimal Theme<br>
Obsidian Nord<br>
Sanctum<br>
Shimmering Focus<br>
Wasp<br>
Typewriter<br>
Red Graphite<br>
Most of the theme problem is caused by the usage of !Important keywords in the theme CSS. HK Code Block does not use !Important keywords at all in order to avoid conflicts with other themes or plugins. If you want to use HK Code Block plugin with those themes, you should modify the theme CSS files, or by using !Important keywords, you should explicitly increase the priority of the HK Code Block CSS rules.]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/插件/hk-code-block插件的使用.html</link><guid isPermaLink="false">工具软件/obsidian/插件/HK Code Block插件的使用.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate></item><item><title><![CDATA[搜索]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:work" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#work</a> 
 <br><img alt="Search.png" src="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/Search.png" referrerpolicy="no-referrer"><br>搜索是一个十分强大的功能，但同时它也可以使你产生困惑。在大多数情况下，你只需要简单地输入想查找的东西即可完成搜索。但为了提升搜索的精度与效率，你还需要了解更多技巧。<br><br><br>你可以通过快捷键 Ctrl/Cmd-Shift-F 来唤起搜索（这个快捷键可以修改）。当搜索功能被唤起时，焦点会被放置在搜索栏中，因此你可以立刻输入关键词进行搜索。<br><br>当你选中某段文本后再唤起搜索功能时，Obsidian 会自动为你在库中搜索这段文本。<br><br>Obsidian 会记录你最近的搜索历史。当你搜索栏为空时，搜索历史会自动浮现。你可以点击任何一条历史记录以重新运行该搜索。如果想清空历史记录，点击“X”按钮即可。<br><br>在搜索时，你可以决定是否开启这些选项：<br>
<br>区分大小写 可以将搜索更改为大小写敏感模式，但其会被 match-case: 和 ignore-case: 语法覆盖。
<br>说明搜索含义 将会说明当前检索式的搜索范围。
<br>折叠搜索结果 将会隐藏所有搜索结果的具体内容，只显示笔记名称。如果你只想隐藏或展开某条结果的内容，点击该结果左边的三角符号即可。
<br>显示上下文 将在展开搜索结果的前提下，显示搜索结果中的更多内容。
<br>排序 则允许你更改搜索结果的排列顺序，这和<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E6%96%87%E4%BB%B6%E5%88%97%E8%A1%A8" target="_blank">文件列表</a>中的排序一样。
<br><br>如果想快速地将搜索结果导出成列表，则可以使用 复制搜索结果 这一功能。<br>这个功能允许你对导出的列表进行个性化设置，比如是否添加文件路径，使用 Wiki 风格链接还是 Markdown 风格链接，使用哪种列表符号等等。<br><br>你可以将搜索结果嵌入到笔记中。比如：<br>```query
embed OR search
```
复制<br>然后，你就可以在预览模式下看到 embed OR search 的搜索结果被嵌入到当前笔记中。<br>需要注意的是，截止2021/1/18，这并不能在 <a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E8%AE%B8%E5%8F%AF%E8%AF%81%E4%B8%8E%E9%99%84%E5%8A%A0%E6%9C%8D%E5%8A%A1/Obsidian+%E5%8F%91%E5%B8%83%E6%9C%8D%E5%8A%A1" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E8%AE%B8%E5%8F%AF%E8%AF%81%E4%B8%8E%E9%99%84%E5%8A%A0%E6%9C%8D%E5%8A%A1/Obsidian+%E5%8F%91%E5%B8%83%E6%9C%8D%E5%8A%A1" target="_blank">发布的网站</a>中使用。<br><br><br>在设计检索式时，不要忘了 说明搜索含义 能够显示搜索的具体含义，这能在你测试检索式时帮上大忙。<br>
<br>使用空格分隔关键词。每个关键词都是被独立查找的。比如，检索式 foo bar 将搜索同时包含 foo 和 bar 的笔记。
<br>使用双引号来搜索短语。短语中的空格将不再有分隔关键词的作用，因此你可以搜索那些带有空格的语句。比如，"foo bar" 将搜索包含 foo bar 这一短语的笔记。
<br>可以使用逻辑运算符。OR 表示或者关系，即文档应该包含以下关键词之一；- 表示非关系，即文档不要包含以下关键词；空格表示与关系，即文档应该同时包含以下关键词。比如，foo OR bar 会返回包含 foo 或包含 bar 的笔记。foo -bar 将会返回包含 foo 但不包含 bar 的笔记。
<br>可以使用括号来设置逻辑运算顺序。比如 (a OR b) (c OR d)。这对于那些复杂的检索式非常有用，可以确保检索式的计算顺序是符合设计的。
<br>可以使用正则表达式。正则表达式需要使用 / 包括起来，比如 /[a-z]{3}/。Obsidian 接受 JavaScript 风格的正则表达式，你可以在<a data-tooltip-position="top" aria-label="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions" rel="noopener" class="external-link" href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank">这里</a>对其进行学习。
<br><br>Obsidian 还提供了一些特殊的搜索符。一些搜索符允许你进行嵌套查询，比如 file:("to be" OR -"2B")。你可以使用 - 来对搜索结果进行限制，比如 foo -tag:#bar。<br>
<br>file: 将使搜索对象变为文件名。比如，file:"202007" 则会搜索名称包含 202007 的文件。如果你使用 Zettelkasten 方法并使用时间戳来命名的话，这个搜索符能让你通过搜索文件名来找到某个时间段内记录的笔记。
<br>path: 将使搜索对象变为文件的绝对路径（基于库的根目录）。你也可以将它理解为搜索特定文件夹中的文件。比如 path:"日记/2020-07" 将返回路径中包含 日记/2020-07 的文件（日记 文件夹下子文件夹 2020-07 中的文件）。
<br>content: 将使搜索对象变为文件中的内容。比如 content:"happy cat"。
<br>match-case: 和 ignore-case: 将改变检索式的大小写敏感状态，即 match-case: 将使检索式大小写敏感，ignore-case: 将使检索式大小写不敏感。
<br>tag: 将检索对象变为标签，返回包含特定标签的文件。比如，tag:#work 将返回包含 <a class="internal-link" data-href="#work" href="https://wxkj.asia/mynote/#work" target="_self" rel="noopener"></a><a href="https://wxkj.asia/mynote?query=tag:work" class="tag" target="_blank" rel="noopener">#work</a> 标签的笔记。使用标签搜索符搜索标签比直接在内容中检索 #标签 字符串要精确得多，因为标签搜索符会忽略代码块以及小标题中出现的、形似标签但不是标签的字符串。
<br>line:(...) 将使搜索对象从整个文档的内容变为行的内容。比如，当我们使用最普通的搜索搜索 foo bar 时，会返回那些第一行中有 foo，最后一行有 bar 的笔记。但是，如果使用 line:(foo bar)，则会返回只在同一行中同时包含 foo 和 bar 的笔记。
<br>block:(...) 将使搜索对象从整个文档的内容变为块的内容。正如<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%9D%97%E9%93%BE%E6%8E%A5%E4%B8%8E%E5%9D%97%E5%BC%95%E7%94%A8" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%9D%97%E9%93%BE%E6%8E%A5%E4%B8%8E%E5%9D%97%E5%BC%95%E7%94%A8" target="_blank">块链接与块引用</a>中所说的，块是被两个空行包围的元素。由于涉及块的操作需要进一步解析每个文件，因此这种搜索可能会比其他搜索慢。
<br>section:(...) 将使搜索对象从整个文档的内容变为章节的内容。所谓章节指的是两个小标题间的文本（包括开头的小标题）。
<br>task:(...) 将使搜索对象变为<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%AC%94%E8%AE%B0#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%AC%94%E8%AE%B0#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8" target="_blank">任务列表</a>。你可以使用task:"" 来在所有任务中检索相应任务。
<br>task-todo:(...) 将使搜索对象变为<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%AC%94%E8%AE%B0#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%AC%94%E8%AE%B0#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8" target="_blank">任务列表</a>中的待办任务。使用 task-todo:"" 来在未完成的任务中检索相应任务。
<br>task-done:(...) 将使搜索对象变为<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%AC%94%E8%AE%B0#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%AC%94%E8%AE%B0#%E4%BB%BB%E5%8A%A1%E5%88%97%E8%A1%A8" target="_blank">任务列表</a>中的已完成任务。 使用 task-done:"" 来在已完成的任务中检索相应任务。
<br><br>文章来源: <a rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E6%90%9C%E7%B4%A2" target="_blank">https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E6%90%9C%E7%B4%A2</a>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/搜索.html</link><guid isPermaLink="false">工具软件/obsidian/markdown语法官方教程/搜索.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 08 May 2024 13:05:48 GMT</pubDate><enclosure url="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/Search.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/Search.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[使用 obsidian URI]]></title><description><![CDATA[ 
 <br>Obsidian 支持自定义的 URI 协议&nbsp;Obsidian://，这个协议可以用来触发 Obsidian 内部的各种动作。自定义 URI 协议通常用于 MacOS 中的跨应用程序工作流。<br>如果你已经安装了 Obsidian，下面这个命令将在当前设备上打开 Obidian：<a data-tooltip-position="top" aria-label="obsidian://open" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/obsidian://open" target="_blank">点击此处</a><br><br>为了让你的操作系统将&nbsp;obsidian://&nbsp;URI 重定向到 Obsidian，你可能需要执行一些额外的步骤。<br>
<br>对于 Windows，运行一次 Obsidian 就足够了。因为这会在 Windows 注册表中注册&nbsp;obsidian://&nbsp;自定义协议处理程序。
<br>对于 MacOS，运行一次 Obsidian 也足够了。但需要注意的是，Obsidian 版本必须为 0.8.12 或更高。
<br>对于 Linux，则需要更多的步骤：  

<br>首先，确保你创建了一个&nbsp;obsidian.desktop&nbsp;文件。<a data-tooltip-position="top" aria-label="https://developer.gnome.org/integration-guide/stable/desktop-files.html.en" rel="noopener" class="external-link" href="https://developer.gnome.org/integration-guide/stable/desktop-files.html.en" target="_blank">你可以在此获得更多相关信息</a>  
<br>确保你的桌面文件将&nbsp;Exec&nbsp;字段指定为&nbsp;Exec=executable %u。%u&nbsp;将用于传递&nbsp;obsidian://&nbsp;URI 给 Obsidian。  
<br>如果你正在使用 AppImage 安装程序，你可能需要使用&nbsp;Obsidian-x.y.z.AppImage --appimage-extract&nbsp;来解压它。然后确保&nbsp;Exec&nbsp;指向解压出来的可执行文件。


<br><br>Obsidian URI 通常采用以下形式：<br>obsidian://action?param1=value&amp;param2=value
复制<br>
<br>action&nbsp;表示你想让 Obsidian 执行的动作。
<br><br>这部分非常重要<br>你需要确保 URI 中的值是正确编码的。比如，正斜线字符&nbsp;/&nbsp;必须编码为&nbsp;%2F，空格字符必须编码为&nbsp;%20。这一点特别重要，因为不符合规范的 URI 将不能正常运行。<a data-tooltip-position="top" aria-label="https://en.wikipedia.org/wiki/Percent-encoding" rel="noopener" class="external-link" href="https://en.wikipedia.org/wiki/Percent-encoding" target="_blank">想要了解更多编码规范请点击此处</a><br><br><br>动作描述：在 Obsidian 中打开一个库，甚至打开库内的某个文件。<br>可能用到的参数：<br>
<br>vault&nbsp;既可以使用库名称，也可以使用库 ID。

<br>库名称就是库文件夹的名称。
<br>库 ID 是每个库独有的、随机编码的 16 位字符串。比如：ef6ca3e3b524d22f。目前没有简单的方法来找到这些 ID，我们日后会开发相关的功能。目前库 ID 可以在以下路径找到：

<br>对于 Windows，路径为&nbsp;%appdata%/obsidian/obsidian.json
<br>对于 MacOS，则把&nbsp;%appdata%&nbsp;替换为&nbsp;~/Library/Application Support/
<br>对于 Linux，把&nbsp;%appdata%&nbsp;替换为&nbsp;~/.config/。




<br>file&nbsp;既可以使用文件名称，也可以使用基于库的根目录的文件路径。

<br>为了获取目标文件，Obsidian 使用了与&nbsp;[[Wiki链接]]&nbsp;一样的定位规则。
<br>如果文件扩展名是&nbsp;md，可以省略扩展名。


<br>path&nbsp;则是文件在系统中的绝对路径。

<br>这个参数将会覆盖&nbsp;vault&nbsp;和&nbsp;file&nbsp;参数。
<br>参数执行时，Obsidian 先会搜索包含特定路径的库，随后再在库中寻找相关的文件。即相当于先执行&nbsp;vault，再执行&nbsp;file。


<br>示例:<br>
<br>obsidian://open?vault=my%20vault<br>
这将打开名为&nbsp;my vault&nbsp;的库。如果该库已经打开，则让焦点回到该库上。<br>

<br>obsidian://open?vault=ef6ca3e3b524d22f<br>
这将打开 ID 为&nbsp;ef6ca3e3b524d22f&nbsp;的库。<br>

<br>obsidian://open?vault=my%20vault&amp;file=my%20note<br>
假设有一个名为&nbsp;my vault&nbsp;的库，并且库中包含&nbsp;my note.md&nbsp;这样一条笔记的话，这将打开该笔记。<br>

<br>obsidian://open?vault=my%20vault&amp;file=my%20note.md<br>
这也会打开&nbsp;my vault&nbsp;库中名为&nbsp;my note&nbsp;的笔记。<br>

<br>obsidian://open?vault=my%20vault&amp;file=path%2Fto%2Fmy%20note<br>
这将打开&nbsp;my vault&nbsp;库中路径为&nbsp;path/to/my note&nbsp;的笔记。<br>

<br>obsidian://open?path=%2Fhome%2Fuser%2Fmy%20vault%2Fpath%2Fto%2Fmy%20note&nbsp;这将让 Obsidian 查找包含路径&nbsp;/home/user/my vault/path/to/my note&nbsp;的库。随后，路径参数的剩余部分将传递给&nbsp;file&nbsp;参数。这就好比在一个路径为&nbsp;/home/user/my vault&nbsp;的库中将&nbsp;file&nbsp;参数设置为&nbsp;path/to/my note&nbsp;一样。<br>

<br>obsidian://open?path=D%3A%5CDocuments%5CMy%20vault%5CMy%20note<br>
这将让 Obsidian 寻找包含路径&nbsp;D:\Documents\My vault\My note&nbsp;的库。随后，路径参数的剩余部分将传递给&nbsp;file&nbsp;参数。这就好比在一个路径为&nbsp;D:\Documents\My vault&nbsp;的库中将&nbsp;file&nbsp;参数设置为&nbsp;My note&nbsp;一样。<br>

<br><br>描述：打开 Obsidian 中某个库的查询面板，然后执行搜索（是否执行搜索是可选的）。<br>可能用到的参数：<br>
<br>vault&nbsp;既可以是库名称，也可以是库 ID，这和&nbsp;open&nbsp;动作里一样。
<br>query&nbsp;用于设置要执行的搜索。这是可选参数。
<br>示例：<br>
<br>obsidian://search?vault=my%20vault<br>
这将打开名为&nbsp;my vault&nbsp;的库，然后打开该库的查询面板。<br>

<br>obsidian://search?vault=my%20vault&amp;query=MOC<br>
这将打开名为&nbsp;my vault&nbsp;的库，然后打开该库的查询面板，并搜索&nbsp;MOC。<br>

<br><br>描述：在库中创建一篇新笔记，并为笔记写入一些内容（可选）。<br>可能用到的参数：<br>
<br>vault&nbsp;既可以是库名称，也可以是库 ID，这和&nbsp;open&nbsp;动作里一样。
<br>name&nbsp;用于指定创建的笔记名称。新笔记的存放位置受设置中&nbsp;新建笔记的存放位置&nbsp;选项控制。
<br>file&nbsp;通过基于库的绝对路径来创建笔记。这将覆盖&nbsp;name&nbsp;的设置。
<br>path&nbsp;通过全局的绝对路径来创建笔记，这和&nbsp;open&nbsp;动作中的一样。该参数将覆盖&nbsp;vault&nbsp;和&nbsp;file&nbsp;的设置。
<br>content&nbsp;指定新笔记中的内容，该参数非必须。
<br>silent&nbsp;如果你不想打开新笔记，则设置此参数。
<br>示例：<br>-obsidian://new?vault=my%20vault&amp;name=my%20note\&nbsp;这将打开名为&nbsp;my vault&nbsp;的库，并创建一篇名为&nbsp;my note&nbsp;的新笔记。<br>
-obsidian://new?vault=my%20vault&amp;path=path%2Fto%2Fmy%20note&nbsp;这将打开名为&nbsp;my vault&nbsp;的库，并在&nbsp;path/to/my note&nbsp;路径下创建一篇名为&nbsp;my note&nbsp;的新笔记。<br><br>描述：与&nbsp;<a data-tooltip-position="top" aria-label="https://hookproductivity.com/" rel="noopener" class="external-link" href="https://hookproductivity.com/" target="_blank">Hook</a>&nbsp;配合使用的动作，即复制当前笔记的 URI 到剪贴板，即点击该 URI 后自动生成一个&nbsp;open&nbsp;当前笔记的 URI 并复制到剪贴板。使用方式：&nbsp;obsidian://hook-get-address。<br>可能用到的参数：<br>
<br>vault&nbsp;用于指定库，可以是库名称也可以是库 ID。此参数非必须。如果不指定此参数，动作将指向当前或上次打开的库。
<br><br>除了上述形式之外，你还可以使用两种简写形式来打开库或文件：<br>
<br>obsidian://vault/my vault/my note&nbsp;这等同于&nbsp;obsidian://open?vault=my%20vault&amp;file=my%20note
<br>obsidian:///absolute/path/to/my note&nbsp;这等同于&nbsp;obsidian://open?path=%2Fabsolute%2Fpath%2Fto%2Fmy%20note
]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/使用-obsidian-uri.html</link><guid isPermaLink="false">工具软件/obsidian/markdown语法官方教程/使用 obsidian URI.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:34:51 GMT</pubDate></item><item><title><![CDATA[为笔记添加别名]]></title><description><![CDATA[ 
 <br>有时，一则笔记可能在不同语境中有不同的名字。这就是我们所说的“别名”。<br>比如，你可能会用完整的姓名、简单的名字或使用绰号来称呼你的朋友。再比如，你可能会使用缩写“AI”来指代特定的术语“artificial intelligence”。特别是对于一些外来名词，我们会使用自己的母语来称呼它，这样我们在记录笔记时会更加方便。<br><br>从 0.9.16 开始，你可以在笔记的&nbsp;<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/YAML+front+matter" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/YAML+front+matter" target="_blank">YAML front matter</a>&nbsp;中设置笔记的别名。例如：<br>---
aliases: [AI, Artificial Intelligence]
---
复制<br>请注意，Front matter 需要放在笔记开头才能生效。同时，aliases&nbsp;需要使用英文。<br>未来，我们会考虑采取更友好的方式来让用户使用、管理别名，而不是让用户手动在笔记的 Front matter 中输入。<br><br>一旦你为笔记设置了别名，你就可以通过&nbsp;[[别名]]&nbsp;的方式来引用这篇具有多个名称的笔记。引用时，对话框中会显示重定向标志，如下图所示：<br><img alt="使用别名进行链接.png" src="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D%E8%BF%9B%E8%A1%8C%E9%93%BE%E6%8E%A5.png" referrerpolicy="no-referrer"><br>按下回车后，插入的链接会这样显示：[[笔记原名称|别名]]。<br>可以发现，Obsidian 并没有直接以&nbsp;[[别名]]&nbsp;的方式插入链接，而是用别名对原标题进行了修饰，这样别的软件也能轻松识别你链接了别名的笔记。<br><br>当你为某一笔记设置别名后，其他笔记无论是提到当前笔记的原标题还是别名，都会在&nbsp;提到当前标题&nbsp;中显示。<br>比如，当你为一篇名为“人工智能”的笔记设置了“AI”这个别名后，你就可以在<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5" target="_blank">反向链接</a>中找到其他提到了“AI”的笔记，从而将“人工智能”这篇笔记与这些笔记链接起来。当你点击&nbsp;转为内部链接&nbsp;按钮后，这些笔记中的“AI”就会被替换为&nbsp;[[人工智能|AI]]&nbsp;这样的链接。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/为笔记添加别名.html</link><guid isPermaLink="false">工具软件/obsidian/markdown语法官方教程/为笔记添加别名.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:34:49 GMT</pubDate><enclosure url="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D%E8%BF%9B%E8%A1%8C%E9%93%BE%E6%8E%A5.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D%E8%BF%9B%E8%A1%8C%E9%93%BE%E6%8E%A5.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[嵌入文件]]></title><description><![CDATA[ 
 <br>你可以将图片或者音频等附件嵌入到你的笔记中。嵌入文件的语法为&nbsp;![[文件名.png]]，例如：<br><img alt="Engelbart.jpg" src="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/Engelbart.jpg" referrerpolicy="no-referrer"><br>你可以通过相同的语法将 PDF 文件嵌入到你的笔记中。除此之外，你可以通过&nbsp;![[My File.pdf#page=number]]&nbsp;这样的形式直接指定嵌入 PDF 文件的页码。<br>当你拖动图片到笔记中时，图片会自动嵌入笔记，并且 Obsidian 会将图片文件复制到默认的附件文件夹中。Obsidian 支持几种图片格式，因此大多数情况下你都可以在文件列表中的附件文件夹中选择并查看图片。<br><br>当然，你可以通过相同的语法将一篇笔记嵌入到另一篇笔记中，比如：<br>支持格式<br>目前为止，Obsidian 支持以下格式的文件：<br>
<br>Markdown 文件：md;
<br>图像文件：png,&nbsp;jpg,&nbsp;jpeg,&nbsp;gif,&nbsp;bmp,&nbsp;svg;
<br>音频文件：mp3,&nbsp;webm,&nbsp;wav,&nbsp;m4a,&nbsp;ogg,&nbsp;3gp,&nbsp;flac;
<br>视频文件：mp4,&nbsp;webm,&nbsp;ogv;
<br>PDF 文件：pdf.
<br>以上类型文件都可以<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" target="_blank">内嵌到笔记页面中</a><br><br>由于 Markdown 兼容 HTML，因此你可以使用“iframe”将网页嵌入到笔记中。<br>比如：<br>&lt;iframe src="https://www.bilibili.com/"&gt;&lt;/iframe&gt;
复制<br>具体应用起来是这样的效果：<br>使用 iframe 嵌入网页的基本语法为：<br>&lt;iframe src="网页地址"&gt;&lt;/iframe&gt;
复制<br>一些网站并不允许你直接嵌入它们的页面。比如，你就不能通过 YouTube 视频页面的 URL 来嵌入该页面。但是，这些网站一般都提供了用于嵌入的 URL，比如你可以通过&nbsp;https://www.youtube.com/embed/VIDEO_ID&nbsp;这样的专用 URL 来嵌入 YouTube 的视频页面。<br>如果你想嵌入一个网站，可以尝试在搜索引擎上&nbsp;{网页名} 嵌入 iframe&nbsp;等关键词，这样能帮助你更快速的嵌入某个网站。<br>比如，你可以利用搜索结果给出的代码快速插入 Twitter：<br>&lt;iframe
	border=0
	frameborder=0
	height=250
	width=550  
	src="https://twitframe.com/show?url=https%3A%2F%2Ftwitter.com%2Fjack%2Fstatus%2F20"&gt;
&lt;/iframe&gt;
复制<br>实现效果：（国内可能需要科学上网）<br><br><br>这个语法实际受到了 Markdown 相关语法的启发：<br>
<br>在 Markdown 中，[Image](link.png)&nbsp;可以让链接指向图片，而&nbsp;![Image](link.png)&nbsp;能让图片嵌入到当前文档中。
<br>而<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" target="_blank">内部链接</a>的语法则基于以下设定：[[My page]]&nbsp;是&nbsp;[My page](My page)&nbsp;的一个便捷写法（或者是“语法糖”）。
<br>综上，我们可以得到&nbsp;![[My page]]&nbsp;应该等效于&nbsp;![My page](My page)。<br>当然，我们也可以使用其他形式的语法。比如，Roam Research 的嵌入语法为&nbsp;{{embed: ((NODE_ID))}}。我们曾经想过使用&nbsp;((Page name))&nbsp;这样的形式来表示嵌入，但后来我们认为还是&nbsp;![[Page name]]&nbsp;的形式能更好地与其他语法保持一致，便于记忆，同时也能减少符号的占用，让其他符号能够表示其他含义。<br><br>你可以通过以下语法调整嵌入到笔记中的图片的大小：<br>Markdown 风格的嵌入，使用&nbsp;![AltText|100x100](https://url/to/image.png)&nbsp;这样的语法。<br>一般的嵌入，使用&nbsp;![[image.png|100x100]]&nbsp;这样的语法。<br>如果要根据图像的宽高比例进行缩放，请省略高度，如&nbsp;![[image.png|100]]。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/嵌入文件.html</link><guid isPermaLink="false">工具软件/obsidian/markdown语法官方教程/嵌入文件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:34:56 GMT</pubDate><enclosure url="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/Engelbart.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://publish-01.obsidian.md/access/cf01a21839823cd6cbe18031acf708c0/%E9%99%84%E4%BB%B6/Engelbart.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[内部链接]]></title><description><![CDATA[ 
 <br>在 Obsidian 中，内部链接是你知识网络的重要组成部分。所谓内部链接指的是从库中某篇笔记出发，指向库中其他文件的链接。反之，如果是从库中某篇笔记指向库外的文件、网页，则为外部链接。<br><br>创建内部链接非常简单，只需要输入&nbsp;[[，并从弹出的列表里选择自己需要链接的文件即可。你可以通过上下方向键或输入关键词来选择文件，当所需文件被选中（高亮）时按下回车键即可完成链接。<br><br>笔记文件一般都有标题。因此，除了链接整篇笔记外，你也可以单独链接到笔记的某个标题。链接到标题的步骤非常简单，首先还是输入&nbsp;[[，并通过方向键选择所需链接的笔记。当该笔记被选中（高亮）时，按下&nbsp;#（即&nbsp;shift-3）来代替回车键。此时，弹出的列表将显示该笔记中的标题。然后，你可以通过上下方向键或输入关键词来选择所需链接的标题。当然，如果这个标题下还有更小的标题的话，你可以继续通过按下&nbsp;#&nbsp;来查看。当你选中了你想链接的标题后，按下&nbsp;Enter&nbsp;完成链接。<br>在预览模式下，内部链接可以显示为其他文字。要实现这点，只需通过&nbsp;|&nbsp;来修饰内部链接。比如，<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E5%8F%A6%E4%B8%80%E7%AF%87%E7%AC%94%E8%AE%B0%E5%90%8D%E7%A7%B0" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E5%8F%A6%E4%B8%80%E7%AF%87%E7%AC%94%E8%AE%B0%E5%90%8D%E7%A7%B0" target="_blank">预览模式下显示的自定义字段</a>。这可以与链接标题语法一起使用，比如<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%8A%98%E5%8F%A0#%E4%B8%BE%E4%B8%AA%E4%BE%8B%E5%AD%90" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E6%8A%98%E5%8F%A0#%E4%B8%BE%E4%B8%AA%E4%BE%8B%E5%AD%90" target="_blank">举个折叠的例子</a>。<br><br>
<br>在预览模式下，点击内部链接即可在当前面板打开链接
<br>在预览模式下，如果想在新面板中打开链接，则需按住&nbsp;Ctrl/Cmd&nbsp;再点击内部链接
<br>在编辑模式下，按住&nbsp;Ctrl/Cmd&nbsp;点击内部链接即可在当前面板打开链接
<br>在编辑模式下，如果想在新面板中打开链接，则需按住&nbsp;Ctrl/Cmd+Shift&nbsp;再点击内部链接
<br>如果想预览链接内容，但又不想离开当前笔记，则可以打开<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E9%A1%B5%E9%9D%A2%E9%A2%84%E8%A7%88" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E9%A1%B5%E9%9D%A2%E9%A2%84%E8%A7%88" target="_blank">页面预览</a>插件。这样，鼠标悬停在内部链接上时，你就可以通过一个小弹窗来预览链接中的内容。
]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/内部链接.html</link><guid isPermaLink="false">工具软件/obsidian/markdown语法官方教程/内部链接.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:34:53 GMT</pubDate></item><item><title><![CDATA[块链接与块引用]]></title><description><![CDATA[ 
 <br>在 0.9.5 或更高的版本中，除了<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5#%E9%93%BE%E6%8E%A5%E6%A0%87%E9%A2%98" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5#%E9%93%BE%E6%8E%A5%E6%A0%87%E9%A2%98" target="_blank">链接到标题</a>外，你还可以进行块链接与块引用。<br><br>一个块可以是一个段落、一个引用、一个列表等等。一般来说，前后有空行包围的东西就是块。<br><br>链接某个笔记文件中的块，你首先需要输入&nbsp;[[文件名&nbsp;来唤起弹窗，在选择相应的文件后，通过输入&nbsp;^&nbsp;进入块选择界面。随后，你需要继续输入关键词来选择你所需要链接的块。<br>选择好了以后，按下回车键，对于该块的链接就创建好了。块链接会以&nbsp;[[filename#^dcf64c]]&nbsp;的形式出现，其中&nbsp;dcf64c&nbsp;则是你所链接的块的 ID。<br>如果你忘了想链接的块在哪个文件里，你可以通过输入&nbsp;[[^^&nbsp;在库的所有笔记文件中查找该块。由于这种查找方式涉及库中所有笔记文件，当你的库很大时，查找就需要花费一些时间。<br>比如，<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%9D%97%E9%93%BE%E6%8E%A5%E4%B8%8E%E5%9D%97%E5%BC%95%E7%94%A8#%5Edcf64c" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%9D%97%E9%93%BE%E6%8E%A5%E4%B8%8E%E5%9D%97%E5%BC%95%E7%94%A8#%5Edcf64c" target="_blank">块链接与块引用 &gt; </a>可以链接到前文的段落。<br><br>与<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" target="_blank">嵌入文件</a>一样，你可以通过在块链接前加上&nbsp;!&nbsp;来进行块引用，即块的嵌入。<br>比如：<br>一个块可以是一个段落、一个引用、一个列表等等。一般来说，前后有空行包围的东西就是块。<br><br>如果你想手动创建可读性强的块 ID，你可以在块的末尾手动加上&nbsp;^你的-id&nbsp;这样的语法。需要注意的是，对于一般的段落，手动创建的 ID 和块最后一个字符（即段落最后一个字符）间需要有一个或多个空格。<br>如果想为表格这样比较复杂的块手动创建 ID，你需要将手动创建的 ID 放置在该块之后，同时确保手动创建的块 ID 前后都是空行。<br>比如：<br>
| header1 | header2 |
| ------- | ------- |
| 1       | 2       |

^Obsidian

复制<br><br><br>当你手动创建了块 ID 后再链接或引用该块时，Obsidian 会自动使用你手动创建的块 ID 而不是随机生成的块 ID。<br>需要注意的是，手动创建的块 ID 仅支持字母、数字、破折号。<br><br>请注意，块链接和块引用并非 Markdown 的标准语法，而是带有 Obsidian 风格的 Markdown 语法。这意味着这些链接和引用将在其他软件中失效。<br>不过，尽管如此，只要你的软件支持文件内容的全局搜索，你还是可以通过搜索块 ID 来查找链接或引用的块。块链接与块引用本身包含的链接信息是不会丢失的，只不过你想在其他软件中利用它们会麻烦一点。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/块链接与块引用.html</link><guid isPermaLink="false">工具软件/obsidian/markdown语法官方教程/块链接与块引用.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:34:54 GMT</pubDate></item><item><title><![CDATA[格式化笔记-Markdown基础]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:标签" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#标签</a> 
 <br>Obsidian 是一个基于 Markdown 进行记录的知识库软件。<br>目前 Obsidian 支持的格式如下：<br><br><br>通过[[]]来链接库中任意一个文件。<br>链接一篇笔记：[[内部链接]]。
复制<br>链接一篇笔记：<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" target="_blank">内部链接</a>。<br><br><br>在笔记中插入其他文件（更多细节请阅读<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" target="_blank">嵌入文件</a>）。这里将演示如何插入一篇笔记的某个章节：<br>![[Obsidian#什么是 Obsidian]]
复制<br><br>Obsidian 既是一个 Markdown 编辑器，也是一个知识管理软件。<br>你可以简单地将 Obsidian 作为一个 Markdown 编辑器，来编辑、预览 Markdown 文件。但如果你希望更好地使用它，请记住它真正的力量在于管理密集的网络化知识库。<br>如何开始创建一个知识网络？请先从创建一条<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" target="_blank">内部链接</a>开始！<br><br><br># 这是小标题 1
## 这是小标题 2
### 这是小标题 3 
#### 这是小标题 4
##### 这是小标题 5
###### 这是小标题 6
复制<br><br><br><br><br><br><br><br><br>*这是斜体示例*
_这是斜体的另一种写法_
复制<br>这是斜体示例<br>
这是斜体的另一种写法<br>**这是粗体示例**
__这是粗体的另一种写法__
复制<br>这是粗体示例<br>
这是粗体的另一种写法<br>_你也**可以**将它们配合使用_
复制<br>你也可以将它们配合使用<br><br><br>- 项目 1
- 项目 2
	- 项目 2a
	- 项目 2b

1. 项目 1
1. 项目 2
1. 项目 3
   1. 项目 3a
   1. 项目 3b
复制<br>无序列表：<br>
<br>项目 1
<br>项目 2

<br>项目 2a
<br>项目 2b


<br>有序列表：<br>
<br>项目 1
<br>项目 2
<br>项目 3

<br>项目 3a
<br>项目 3b


<br><br><br>![Engelbart](https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg)
复制<br><img alt="Engelbart" src="https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg" referrerpolicy="no-referrer"><br><br>比如，将上面的示例图片调整为100像素宽：<br>![Engelbart|100](https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg)
复制<br><img alt="Engelbart" src="https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg" referrerpolicy="no-referrer"><br><br><br><br>Markdown 风格的链接既可以用来指向网页这类外部对象，也可以用来指向库中的笔记或者图片。<br>http://obsidian.md - automatic!
[Obsidian](http://obsidian.md)
复制<br><a data-tooltip-position="top" aria-label="http://obsidian.md/" rel="noopener" class="external-link" href="http://obsidian.md/" target="_blank">http://obsidian.md</a>&nbsp;- 自动化!<br>
<a data-tooltip-position="top" aria-label="http://obsidian.md/" rel="noopener" class="external-link" href="http://obsidian.md/" target="_blank">Obsidian</a><br><br><a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI" target="_blank">Obsidian URI</a>&nbsp;可以让你在其他应用或 Obsidian 的其他库中打开当前库的某篇笔记。<br>比如，你可以通过以下方式跳转到某个库中的某篇笔记（请注意&nbsp;<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI#%E7%BC%96%E7%A0%81" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI#%E7%BC%96%E7%A0%81" target="_blank">URI 的编码</a>）：<br>[打开某篇笔记](obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md)
复制<br><a data-tooltip-position="top" aria-label="obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/obsidian://open?path=D:%2Fpath%2Fto%2Ffile" target="_blank">打开某篇笔记</a><br>除了通过笔记的地址来链接笔记外，你也可以通过笔记所在的库名称以及笔记名称来链接该笔记：<br>[打开某篇笔记](obsidian://open?vault=MainVault&amp;file=MyNote.md)
复制<br><a data-tooltip-position="top" aria-label="obsidian://open?vault=MainVault&amp;file=MyNote.md" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/obsidian://open?vault=MainVault&amp;file=MyNote" target="_blank">打开某篇笔记</a><br><br>如果 url 中含有空格的话，空格需要转义为&nbsp;%20，如：<br>[Export options](Pasted%20image)
复制<br><a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/Pasted+image" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/Pasted+image" target="_blank">Export options</a><br>当然，你也可以用&nbsp;&lt;&gt;&nbsp;将空格包含起来，如：<br>[Slides Demo](&lt;Slides Demo&gt;)
复制<br><a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/Slides+Demo" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/Slides+Demo" target="_blank">Slides Demo</a><br><br><br>&gt; Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society.

\- Doug Engelbart, 1961
复制<br>
Human beings face ever more complex and urgent problems, and their effectiveness in dealing with these problems is a matter that is critical to the stability and continued progress of society.
<br>
<br>Doug Engelbart, 1961
<br><br><br>一行中被 `反引号` 括起来的文字会以代码格式显示。
复制<br>一行中被&nbsp;反引号&nbsp;括起来的文字会以代码格式显示。<br><br><br>Obsidian 会将六个反引号括起来的内容识别为代码块，并将其按代码格式显示。代码块支持语法高亮功能，你可以在代码块的第一行（即开头处的反引号后）声明语言来使用特定的语法高亮。<br>代码块的语法高亮实际是使用 prismjs 来实现的，因此你可以到<a data-tooltip-position="top" aria-label="https://prismjs.com/#supported-languages" rel="noopener" class="external-link" href="https://prismjs.com/#supported-languages" target="_blank">他们的网站</a>&nbsp;来查看其支持的语言。<br>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```
复制<br>function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
复制<br>    如果你使用 Tab 键对段落进行缩进，这段文本在预览模式下也会被识别为代码块。
复制<br>如果你使用 Tab 键对段落进行缩进，这段文本在预览模式下也会被识别为代码块。
复制<br><br><br>- [x] 支持 #标签 ，[链接]()，**样式**
- [x] 要求包含列表标志（有序表无序表均可，比如 `1.[x]` 同样可以）
- [x] 这是一个已经完成的项目
- [?] 这也是一个已完成的项目（实际上你可以在其中使用任何字符）
- [ ] 这是一个未完成的项目
- [ ] 在预览模式下单击选框可以切换项目完成状态
复制<br>
<br>支持&nbsp;<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/#%E6%A0%87%E7%AD%BE" rel="noopener" class="external-link" href="https://publish.obsidian.md/#%E6%A0%87%E7%AD%BE" target="_blank"></a><a href="https://wxkj.asia/mynote?query=tag:标签" class="tag" target="_blank" rel="noopener">#标签</a>&nbsp;，<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/#" rel="noopener" class="external-link" href="https://publish.obsidian.md/#" target="_blank">链接</a>，样式
<br>要求包含列表标志（有序表无序表均可，比如&nbsp;1.[x]&nbsp;同样可以）
<br>这是一个已经完成的项目
<br>这也是一个已完成的项目（实际上你可以在其中使用任何字符）
<br>这是一个未完成的项目
<br>在预览模式下单击选框可以切换项目完成状态
<br><br><br>你可以使用&nbsp;-&nbsp;来分割表格的标题行和内容行，使用&nbsp;|&nbsp;来指定不同的列：<br>| 标题1          | 标题2          |
| -------------- | -------------- |
| 单元格11的内容 | 单元格12的内容 |
| 单元格21的内容 | 单元格22的内容 |
复制<br><br><br><br>你可以在表格中添加链接，因为链接能在表格中正确显示。但如果你的链接中包含&nbsp;|，则需要对其进行转义（用&nbsp;\|&nbsp;代替&nbsp;|），以防止链接中的竖线被错误识别为列分隔符。<br>如果你在列表中添加链接，他们可以正常的显示与使用。但如果使用的是竖线链接，则需要在竖线前面加上&nbsp;\&nbsp;来进行转义，防止表格错乱。<br>| 标题1                      | 标题2              |
| -------------------------- | ------------------ |
| [[格式化你的笔记\|格式化]] | [[快捷键\|快捷键]] |
复制<br><br><br><br>在文字两端加上波浪线将会显示为删除效果，比如~~这样~~。
复制<br>在文字两端加上波浪线将会显示为删除效果，比如这样。<br><br><br>使用两个等号来对文本进行高亮==文本==。
复制<br>使用两个等号来对文本进行高亮文本。<br><br><br>H脚注的用法很简单，只需要在段落中需要插入脚注的地方标注一个符号，再在段落后对这个符号进行解释即可。比如这是一个简单的脚注，[^1] 这是一个长一些的脚注。[^长脚注]

[^1]: 很有用！
[^长脚注]: 这是一个可以写长段落或者代码的地方。
	
	你可以使用缩进在脚注中纳入其他段落。
	
	`{ 代码 }`

	这样你就可以在脚注中添加任意数量的段落了。
复制<br>脚注的用法很简单，只需要在段落中需要插入脚注的地方标注一个符号，再在段落后对这个符号进行解释即可。比如这是一个简单的脚注，<a data-href="1" href="https://wxkj.asia/mynote/1" class="internal-link" target="_self" rel="noopener">1</a>(<a rel="noopener" class="external-link" href="https://publish.obsidian.md/#fn-1-b8ef1353cfaa254f" target="_blank">https://publish.obsidian.md/#fn-1-b8ef1353cfaa254f</a>)&nbsp;这是一个长一些的脚注。<a data-href="2" href="https://wxkj.asia/mynote/2" class="internal-link" target="_self" rel="noopener">2</a>(<a rel="noopener" class="external-link" href="https://publish.obsidian.md/#fn-2-b8ef1353cfaa254f" target="_blank">https://publish.obsidian.md/#fn-2-b8ef1353cfaa254f</a>)<br>你也可以使用行内脚注。<a data-href="3" href="https://wxkj.asia/mynote/3" class="internal-link" target="_self" rel="noopener">3</a>(<a rel="noopener" class="external-link" href="https://publish.obsidian.md/#fn-3-b8ef1353cfaa254f" target="_blank">https://publish.obsidian.md/#fn-3-b8ef1353cfaa254f</a>)<br><br>$$\begin{vmatrix}a &amp; b\\
c &amp; d
\end{vmatrix}=ad-bc$$
复制<br>你也可以像这样&nbsp;&nbsp;使用行内公式。<br>这里的公式使用的是 LaTeX 语法，你可以到相应网站了解更多相关信息。<br><br>所谓注释，指的是会在编辑模式中显示，但不会在预览模式中显示的内容。使用&nbsp;%%&nbsp;可以将内容变为注释。以下为语法：<br>这里是行内注释：%%预览模式下你将看不到这句话%%

这里是跨行注释：
%%
所谓跨行
就是可以有很多行
%%
复制<br>以下为示例：<br>这里是行内注释：<br>这里是跨行注释：<br><br>Obsidian 通过&nbsp;<a data-tooltip-position="top" aria-label="https://mermaid-js.github.io/" rel="noopener" class="external-link" href="https://mermaid-js.github.io/" target="_blank">Mermaid</a>&nbsp;及其所提供的<a data-tooltip-position="top" aria-label="https://mermaid-js.github.io/mermaid-live-editor" rel="noopener" class="external-link" href="https://mermaid-js.github.io/mermaid-live-editor" target="_blank">编译器</a>来为用户提供图表的绘制功能。<br>```mermaid
sequenceDiagram
    Alice-&gt;&gt;+John: 嗨，John，最近怎样？
    Alice-&gt;&gt;+John: John，听得到我说话吗？
    John--&gt;&gt;-Alice: 嗨，Alice，我能听到！
    John--&gt;&gt;-Alice: 最近不错！
```
复制<br>AliceJohn嗨，John，最近怎样？John，听得到我说话吗？嗨，Alice，我能听到！最近不错！AliceJohn<br><br>总的来说，我们在努力让 Obsidian 的语法不偏离正统的 Markdown 语法太多。总的来看，Obsidian 的语法大多还是基于 CommonMark，包括了一些 GitHub Flavored Markdown（GFM）和 LaTeX，以及我们特有的嵌入文件语法。<br><br>
<br>
很有用！<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/#fnref-1-b8ef1353cfaa254f" rel="noopener" class="external-link" href="https://publish.obsidian.md/#fnref-1-b8ef1353cfaa254f" target="_blank">↩︎</a>

<br>
这是一个可以写长段落或者代码的地方。
你可以使用缩进在脚注中纳入其他段落。
{ 代码 }
这样你就可以在脚注中添加任意数量的段落了。<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/#fnref-2-b8ef1353cfaa254f" rel="noopener" class="external-link" href="https://publish.obsidian.md/#fnref-2-b8ef1353cfaa254f" target="_blank">↩︎</a>

<br>
请注意符号^需要在方括号外&nbsp;<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/#fnref-3-b8ef1353cfaa254f" rel="noopener" class="external-link" href="https://publish.obsidian.md/#fnref-3-b8ef1353cfaa254f" target="_blank">↩︎</a>

]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/格式化笔记-markdown基础.html</link><guid isPermaLink="false">工具软件/obsidian/markdown语法官方教程/格式化笔记-Markdown基础.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:34:58 GMT</pubDate><enclosure url="https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://history-computer.com/ModernComputer/Basis/images/Engelbart.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[实用插件汇总说明]]></title><description><![CDATA[ 
 <br><br>插件简介： obsidian hk code block，这是一个未上架的插件。有兴趣可以测试安装。<br>
插件作用： 改善原始代码块的表现，增加了：显示行号折叠代码区复制按钮、代码的标题高亮显示某行提示符，Prompt，增加一个提示区添加结果，Result，会增加一个块，标记为结果<br><br>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/实用插件汇总说明.html</link><guid isPermaLink="false">工具软件/obsidian/实用插件汇总说明.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate></item><item><title><![CDATA[先上图]]></title><description><![CDATA[ 
 图文方式说明了文心一言嵌入到obsidian的方法，通过安装插件并配置实现，使用时打开即可。可以嵌入其他的大语言模型，可进行样式调整。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/我把文心一言嵌入到-obsidian-里了.html</link><guid isPermaLink="false">工具软件/obsidian/我把文心一言嵌入到 obsidian 里了.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/我把文心一言嵌入到-obsidian-里了-20240229051637881.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/我把文心一言嵌入到-obsidian-里了-20240229051637881.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[学习网站]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:obsidian" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#obsidian</a> 
 <br><a href="https://wxkj.asia/mynote?query=tag:obsidian" class="tag" target="_blank" rel="noopener">#obsidian</a> <br>Markdown obsidian 语法汇总 <a data-href="markdown示例教程" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown示例教程.html" class="internal-link" target="_self" rel="noopener">markdown示例教程</a><br>markdown教程 <a rel="noopener" class="external-link" href="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Markdown/Markdown%E8%B6%85%E7%BA%A7%E6%95%99%E7%A8%8B+Obsidian%E7%89%88" target="_blank">https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Markdown/Markdown%E8%B6%85%E7%BA%A7%E6%95%99%E7%A8%8B+Obsidian%E7%89%88</a><br>obsidian 学习教程 <a rel="noopener" class="external-link" href="https://publish.obsidian.md/chinesehelp/01+2021%E6%96%B0%E6%95%99%E7%A8%8B/2021%E5%B9%B4%E6%96%B0%E6%95%99%E7%A8%8B" target="_blank">https://publish.obsidian.md/chinesehelp/01+2021%E6%96%B0%E6%95%99%E7%A8%8B/2021%E5%B9%B4%E6%96%B0%E6%95%99%E7%A8%8B</a><br><a data-tooltip-position="top" aria-label="https://forum-zh.obsidian.md/t/topic/3222" rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/3222" target="_blank">Ob新手入门必读——常见Q&amp;A（持续建设ing...请勿在此回复及提问） - 疑问解答 - Obsidian 中文论坛</a><br>插件介绍<br>
<a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/" target="_blank">Obsidian 社区插件</a><br>obsidian插件汇总列表<br>
<a rel="noopener" class="external-link" href="https://airtable.com/appErQxa3n8SnyUdO/shrdmp10Lxmf5Wmgl/tblJqnWpcKURTjysX" target="_blank">https://airtable.com/appErQxa3n8SnyUdO/shrdmp10Lxmf5Wmgl/tblJqnWpcKURTjysX</a><br>插件汇总<br>
<a rel="noopener" class="external-link" href="https://ob.pory.app/" target="_blank">https://ob.pory.app/</a><br>插件汇总<br>
<a rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/" target="_blank">https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/</a><br>文档加密插件<br>
<a rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/readme/meld-encrypt_readme/" target="_blank">https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/readme/meld-encrypt_readme/</a><br>多端同步方案<br>
<a data-tooltip-position="top" aria-label="https://forum-zh.obsidian.md/t/topic/5367" rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/5367" target="_blank">Obsidian通过Remotely save插件实现坚果云webdav同步 - 经验分享 - Obsidian 中文论坛</a><br><a data-tooltip-position="top" aria-label="https://forum-zh.obsidian.md/t/topic/5291" rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/5291" target="_blank">Obsidian Remotely Save 插件+OneDrive 实现多平台同步 - 经验分享 - Obsidian 中文论坛</a><br><a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/447963514" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/447963514" target="_blank">obsidian笔记同步保姆级教程 - 知乎</a><br>syncthing，微力同步等<br><a rel="noopener" class="external-link" href="https://publish.obsidian.md/chinesehelp/03+%E6%95%99%E7%A8%8B/2022%E5%B9%B43%E6%9C%88%E5%A6%82%E4%BD%95%E5%90%8C%E6%AD%A5obsidian%E6%96%87%E4%BB%B6%EF%BC%88%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93%EF%BC%89" target="_blank">https://publish.obsidian.md/chinesehelp/03+%E6%95%99%E7%A8%8B/2022%E5%B9%B43%E6%9C%88%E5%A6%82%E4%BD%95%E5%90%8C%E6%AD%A5obsidian%E6%96%87%E4%BB%B6%EF%BC%88%E9%98%B6%E6%AE%B5%E6%80%A7%E6%80%BB%E7%BB%93%EF%BC%89</a><br>
<a rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/617943207" target="_blank">https://zhuanlan.zhihu.com/p/617943207</a><br>
<a rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/6241/2" target="_blank">https://forum-zh.obsidian.md/t/topic/6241/2</a><br>剪藏网页文章<br>
推荐插件：Obsidian Clipper<br>
<a rel="noopener" class="external-link" href="https://www.bilibili.com/video/BV11d4y117tR/?spm_id_from=333.337.search-card.all.click&amp;vd_source=5efbae6570eda3454828c96f92fcee66" target="_blank">https://www.bilibili.com/video/BV11d4y117tR/?spm_id_from=333.337.search-card.all.click&amp;vd_source=5efbae6570eda3454828c96f92fcee66</a><br>
<a rel="noopener" class="external-link" href="https://www.bilibili.com/video/BV1144y137hj/?spm_id_from=333.337.search-card.all.click&amp;vd_source=5efbae6570eda3454828c96f92fcee66" target="_blank">https://www.bilibili.com/video/BV1144y137hj/?spm_id_from=333.337.search-card.all.click&amp;vd_source=5efbae6570eda3454828c96f92fcee66</a><br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/obsidian-zh-CN.html#config-iframes" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/obsidian-zh-CN.html#config-iframes" target="_blank">用 MaoXian 网摘保存网络文章到 Obsidian</a><br><a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/430538023" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/430538023" target="_blank">不需要VPN与翻墙，完美解决obsidian无法加载第三方插件（社区插件）的问题 - 知乎</a><br>文件夹排序<br>
[Obsidian 目录如何手动排序，自定义拖动排序，使用 Bartender 插件](<a rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/611682978#:~:text=%E5%9C%A8Obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6%E7%AA%97%E5%8F%A3%E5%AE%89%E8%A3%85%20BRAT%E6%8F%92%E4%BB%B6%20%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BF%9B%E5%85%A5obsidian%E8%AE%BE%E7%BD%AE%EF%BC%8C%E8%BF%9B%E5%85%A5%20BRAT%E6%8F%92%E4%BB%B6%20%E7%95%8C%E9%9D%A2%EF%BC%8C%E6%B7%BB%E5%8A%A0" target="_blank">https://zhuanlan.zhihu.com/p/611682978#:~:text=%E5%9C%A8Obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6%E7%AA%97%E5%8F%A3%E5%AE%89%E8%A3%85%20BRAT%E6%8F%92%E4%BB%B6%20%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BF%9B%E5%85%A5obsidian%E8%AE%BE%E7%BD%AE%EF%BC%8C%E8%BF%9B%E5%85%A5%20BRAT%E6%8F%92%E4%BB%B6%20%E7%95%8C%E9%9D%A2%EF%BC%8C%E6%B7%BB%E5%8A%A0</a>, Bartender%E 6%8 F%92%E 4%BB%B 6%20 Github%E 4%BB%93%E 5%BA%93%E 5%9 C%B 0%E 5%9 D%80%EF%BC%8 C%E 8%87%AA%E 5%8 A%A 8%E 5%AE%8 C%E 6%88%90%E 5%AE%89%E 8%A 3%85%20%E 7%84%B 6%E 5%90%8 E%EF%BC%8 C%E 6%AD%A 5%E 9%AA%A 41-2-3%EF%BC%8 C%20%E 4%B 8%8 D%E 8%A 6%81%E 5%BF%98%E 8%AE%B 0%E 6%AD%A 5%E 9%AA%A 43%EF%BC%8 C%E 7%82%B 9%E 4%BA%AE%E 5%9 B%BE%E 6%A 0%87%20%E 7%84%B 6%E 5%90%8 E%E 5%B 0%B 1%E 5%8 F%AF%E 4%BB%A 5%E 7%9 B%B 4%E 6%8 E%A 5%E 6%8 B%96%E 5%8 A%A 8%E 6%8 E%92%E 5%BA%8 F%E 4%BA%86%E 3%80%82)<br>问题：<br>
<img alt="学习网站-20240221201554698.webp" src="https://wxkj.asia/mynote/lib/media/学习网站-20240221201554698.webp" style="width: 457px; max-width: 100%;"><br>解决办法<br>
<a rel="noopener" class="external-link" href="https://github.com/nothingislost/obsidian-bartender/issues/51#issuecomment-1870788233" target="_blank">https://github.com/nothingislost/obsidian-bartender/issues/51#issuecomment-1870788233</a><br>bartender官方issue<br>
<a rel="noopener" class="external-link" href="https://github.com/nothingislost/obsidian-bartender/issues" target="_blank">https://github.com/nothingislost/obsidian-bartender/issues</a><br>导出 word 的问题<br>
<br>pandoc 插件，由于 ob 自带格式等问题，导出问题较多
<br>自带的导出 pdf，然后通过其他工具再 pdf 导出 word 解决
<br>Klaas 还提供了一个常用 CSS 代码片段索引，你可以将这些片段随意组合：<a data-tooltip-position="top" aria-label="https://github.com/Dmytro-Shulha/obsidian-css-snippets/tree/master/Snippets" rel="noopener" class="external-link" href="https://github.com/Dmytro-Shulha/obsidian-css-snippets/tree/master/Snippets" target="_blank">obsidian-css-snippets/Snippets at master · Dmytro-Shulha/obsidian-css-snippets · GitHub</a><br>插件开发<br>
<a data-tooltip-position="top" aria-label="https://forum-zh.obsidian.md/t/topic/148" rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/148" target="_blank">（转载）Obsidian 开发相关（简单引导） - 开发讨论 - Obsidian 中文论坛</a>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/学习网站.html</link><guid isPermaLink="false">工具软件/obsidian/学习网站.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 03 May 2024 08:09:48 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/学习网站-20240221201554698.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/学习网站-20240221201554698.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[标题]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:这是标签" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#这是标签</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:主标签/子标签1" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#主标签/子标签1</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:主标签/子标签2" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#主标签/子标签2</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:主标签/子标签3" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#主标签/子标签3</a> 
 <br><br><br><br><br><br><br><br><br><a href="https://wxkj.asia/mynote?query=tag:这是标签" class="tag" target="_blank" rel="noopener">#这是标签</a> <br><a href="https://wxkj.asia/mynote?query=tag:主标签/子标签1" class="tag" target="_blank" rel="noopener">#主标签/子标签1</a><br>
<a href="https://wxkj.asia/mynote?query=tag:主标签/子标签2" class="tag" target="_blank" rel="noopener">#主标签/子标签2</a><br>
<a href="https://wxkj.asia/mynote?query=tag:主标签/子标签3" class="tag" target="_blank" rel="noopener">#主标签/子标签3</a><br><br><br>这里是一段斜体文本<br>
这也是一段斜体文本<br>这里是一段加粗文本<br>
这也是一段加粗文本<br>粗斜体文本 1<br>
粗斜体文本 2<br>
粗斜体文本 3<br>
粗斜体文本 4<br>
粗斜体文本 5<br>
粗斜体文本 6<br>这里是一段斜体中包含粗体的文字<br>
这也是一段斜体中包含粗体的文字<br>
这又是一段斜体中包含粗体的文字<br>
这还是一段斜体中包含粗体的文字<br>这里是一段粗体中包含斜体的文字<br>
这也是一段粗体中包含斜体的文字<br>
这又是一段粗体中包含斜体的文字<br>
这还是一段粗体中包含斜体的文字<br><br>这里是一段高亮文本<br><br>下面是一条水平分割线：<br><br><br>这是一段加了删除线的文本<br>这是一段加了下划线的文本<br><br><a title="提示信息文本" class="internal-link" data-href="链接地址" href="https://wxkj.asia/mynote/链接地址" target="_self" rel="noopener">显示文本内容</a><br><a data-tooltip-position="top" aria-label="http://www.baidu.com" rel="noopener" class="external-link" title="按住 Ctrl 点击跳转百度" href="http://www.baidu.com" target="_blank">百度一下，你就知道</a><br>链接的加粗，格式有两种：<br><img alt="markdown示例教程-20240222054705709.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222054705709.webp" style="width: 316px; max-width: 100%;"><br>图像格式<br>
<img alt="markdown示例教程-20240222055100273.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222055100273.webp" style="width: 434px; max-width: 100%;"><br><img alt="markdown示例教程-20240222055224041.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222055224041.webp" style="width: 440px; max-width: 100%;"><br><br>你可以通过以下语法调整嵌入到笔记中的图片的大小：<br>Markdown 风格的嵌入，使用&nbsp;![AltText|100x100](https://url/to/image.png)&nbsp;这样的语法。<br>一般的嵌入，使用&nbsp;![[image.png|100x100]]&nbsp;这样的语法。<br>如果要根据图像的宽高比例进行缩放，请省略高度，如&nbsp;![[image.png|100]]。<br><br>两个[[]]表示内部链接地址，图片预览可以在[前加!，图片大小可以加修饰符|xxx<br>
在预览模式下，如果想在新面板中打开链接，则需按住&nbsp;Ctrl/Cmd&nbsp;再点击内部链接<br>
在编辑模式下，按住&nbsp;Ctrl/Cmd&nbsp;点击内部链接即可在当前面板打开链接<br>
在编辑模式下，如果想在新面板中打开链接，则需按住&nbsp;Ctrl/Cmd+Shift&nbsp;再点击内部链接<br>
这些规则外部链接也通用。<br>说明：<br>
这个语法实际受到了 Markdown 相关语法的启发：<br>
<br>在 Markdown 中，[Image](link.png)&nbsp;可以让链接指向图片，而&nbsp;![Image](link.png)&nbsp;能让图片嵌入到当前文档中。
<br>而<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%86%85%E9%83%A8%E9%93%BE%E6%8E%A5" target="_blank">内部链接</a>的语法则基于以下设定：[[My page]]&nbsp;是&nbsp;[My page](My page)&nbsp;的一个便捷写法（或者是“语法糖”）。
<br>综上，我们可以得到&nbsp;![[My page]]&nbsp;应该等效于&nbsp;![My page](My page)。<br>普通链接<br>
<a data-href="todo" href="https://wxkj.asia/mynote/todo.html" class="internal-link" target="_self" rel="noopener">todo</a><br>图片<br>
<img alt="image.png-1.webp" src="https://wxkj.asia/mynote/lib/media/image.png-1.webp" style="width: 254px; max-width: 100%;"><br>嵌入文件参见<br>
<a data-href="#嵌入 pdf" href="https://wxkj.asia/mynote/#嵌入_pdf" class="internal-link" target="_self" rel="noopener">嵌入 pdf</a><br><br>To quickly turn a URL or email address into a link, enclose it in angle brackets.<br>&lt;https://www.markdownguide.org&gt;
&lt;fake@example.com&gt;
复制<br><br>To add a link to an image, enclose the Markdown for the image in brackets, and then add the link in parentheses.<br>[![An old rock](/assets/images/shiprock.jpg "Shiprock, New Mexic")](https://www.flickr.com/photos/)
复制<br><br><br>一个块可以是一个段落、一个引用、一个列表等等。一般来说，前后有空行包围的东西就是块 。 <br>链接某个笔记文件中的块，你首先需要输入&nbsp;[[文件名&nbsp;来唤起弹窗，在选择相应的文件后，通过输入&nbsp;^&nbsp;进入块选择界面。随后，你需要继续输入关键词来选择你所需要链接的块。<br><br>选择好了以后，按下回车键，对于该块的链接就创建好了。块链接会以&nbsp;[[filename#^dcf64c]]&nbsp;的形式出现，其中&nbsp;dcf64c&nbsp;则是你所链接的块的 ID。<br>如果你忘了想链接的块在哪个文件里，你可以通过输入&nbsp;[[^^&nbsp;在库的所有笔记文件中查找该块。由于这种查找方式涉及库中所有笔记文件，当你的库很大时，查找就需要花费一些时间。<br>比如：<a data-href="#^2865ca" href="https://wxkj.asia/mynote/#^2865ca" class="internal-link" target="_self" rel="noopener">^2865ca</a> 可以连接到前文的段落 （点击链接试试）。<br><br>与<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/%E5%B5%8C%E5%85%A5%E6%96%87%E4%BB%B6" target="_blank">嵌入文件</a>一样，你可以通过在块链接前加上&nbsp;!&nbsp;来进行块引用，即块的嵌入。<br>比如下面这段话就是引用前面的段落（修改前面的段落，引用会自动修改）：<br>
<br><br>一个块可以是一个段落、一个引用、一个列表等等。一般来说，前后有空行包围的东西就是块 。  <br><br>如果你想手动创建可读性强的块 ID，你可以在块的末尾手动加上&nbsp;^你的-id&nbsp;这样的语法。需要注意的是，对于一般的段落，手动创建的 ID 和块最后一个字符（即段落最后一个字符）间需要有一个或多个空格。<br>如果想为表格这样比较复杂的块手动创建 ID，你需要将手动创建的 ID 放置在该块之后，同时确保手动创建的块 ID 前后都是空行。<br>比如：<br>
| header1 | header2 |
| ------- | ------- |
| 1       | 2       |

^TableDemo
复制<br><br><br><br><br>当你手动创建了块 ID 后再链接或引用该块时，TableDemo 会自动使用你手动创建的块 ID 而不是随机生成的块 ID。<br>需要注意的是，手动创建的块 ID 仅支持字母、数字、破折号。<br><br>请注意，块链接和块引用并非 Markdown 的标准语法，而是带有 Obsidian 风格的 Markdown 语法。这意味着这些链接和引用将在其他软件中失效。<br>不过，尽管如此，只要你的软件支持文件内容的全局搜索，你还是可以通过搜索块 ID 来查找链接或引用的块。块链接与块引用本身包含的链接信息是不会丢失的，只不过你想在其他软件中利用它们会麻烦一点。<br><br>有时，一则笔记可能在不同语境中有不同的名字。这就是我们所说的“别名”。<br><br>从 0.9.16 开始，你可以在笔记的&nbsp;<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/YAML+front+matter" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/YAML+front+matter" target="_blank">YAML front matter</a>&nbsp;中设置笔记的别名。例如：<br>---
aliases: [AI, Artificial Intelligence]
---
复制<br>请注意，Front matter 需要放在笔记开头才能生效。同时，aliases&nbsp;需要使用英文。<br>未来，官方会考虑采取更友好的方式来让用户使用、管理别名，而不是让用户手动在笔记的 Front matter 中输入。<br><br>一旦你为笔记设置了别名，你就可以通过&nbsp;[[别名]]&nbsp;的方式来引用这篇具有多个名称的笔记。引用时，对话框中会显示重定向标志，如下图所示：<br><img alt="markdown示例教程-20240224012340635.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240224012340635.webp" style="width: 452px; max-width: 100%;"><br>按下回车后，插入的链接会这样显示：[[笔记原名称|别名]]。<br>可以发现，Obsidian 并没有直接以&nbsp;[[别名]]&nbsp;的方式插入链接，而是用别名对原标题进行了修饰，这样别的软件也能轻松识别你链接了别名的笔记。<br><br>当你为某一笔记设置别名后，其他笔记无论是提到当前笔记的原标题还是别名，都会在&nbsp;提到当前标题&nbsp;中显示。<br>比如，当你为一篇名为“人工智能”的笔记设置了“AI”这个别名后，你就可以在<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E6%8F%92%E4%BB%B6/%E5%8F%8D%E5%90%91%E9%93%BE%E6%8E%A5" target="_blank">反向链接</a>中找到其他提到了“AI”的笔记，从而将“人工智能”这篇笔记与这些笔记链接起来。当你点击&nbsp;转为内部链接&nbsp;按钮后，这些笔记中的“AI”就会被替换为&nbsp;[[人工智能|AI]]&nbsp;这样的链接。<br><br><a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI" target="_blank">Obsidian URI</a>&nbsp;可以让你在其他应用或 Obsidian 的其他库中打开当前库的某篇笔记。<br>比如，你可以通过以下方式跳转到某个库中的某篇笔记（请注意&nbsp;<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI#%E7%BC%96%E7%A0%81" rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI#%E7%BC%96%E7%A0%81" target="_blank">URI 的编码</a>）：<br>[打开某篇笔记](obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md)
复制<br><a data-tooltip-position="top" aria-label="obsidian://open?path=D:%2Fpath%2Fto%2Ffile.md" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/obsidian://open?path=D:%2Fpath%2Fto%2Ffile" target="_blank">打开某篇笔记</a><br>除了通过笔记的地址来链接笔记外，你也可以通过笔记所在的库名称以及笔记名称来链接该笔记：<br>[打开某篇笔记](obsidian://open?vault=MainVault&amp;file=MyNote.md)
复制<br><a data-tooltip-position="top" aria-label="obsidian://open?vault=MainVault&amp;file=MyNote.md" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/obsidian://open?vault=MainVault&amp;file=MyNote" target="_blank">打开某篇笔记</a><br>详细内容请参考官方教程：<br>
<a rel="noopener" class="external-link" href="https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI" target="_blank">https://publish.obsidian.md/help-zh/%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/%E4%BD%BF%E7%94%A8+obsidian+URI</a><br><br>（选中查看源码）<br><a data-tooltip-position="top" aria-label="http://www.baidu.com" rel="noopener" class="external-link" href="http://www.baidu.com" target="_blank">百度一下，你就知道</a><br>
<a data-tooltip-position="top" aria-label="https://www.zhihu.com" rel="noopener" class="external-link" href="https://www.zhihu.com" target="_blank">知乎-有问题，就会有答案</a><br><br><br><br> 脚注：（预览视图下查看效果，选中查看源码）<br>鲁迅原名是什么<a href="https://wxkj.asia/mynote/#fn-1-7df868d19ef52194" class="footnote-link" target="_self" rel="noopener">[1]</a> ，浙江哪里人<a href="https://wxkj.asia/mynote/#fn-2-7df868d19ef52194" class="footnote-link" target="_self" rel="noopener">[2]</a><br><br><br><br><br><br>
<br>
这是第一个有序列表 

<br>
这是第二个有序列表 

<br>
这是第三个有序列表 

<br>
这是第一个有序列表 <br>
这是同个列表下，另起一行的文本内容 

<br>
这是第二个有序列表 <br>
这是同个列表下，另起一行的文本内容 

<br>
<br>

<br>这是无序列表下，整十数排列的内容


<br>

<br>这是无序列表下，整十数排列的内容


<br>

<br>这是无序列表下，整十数排列的内容


<br>

<br>这是无序列表下，整百数排列的内容


<br>

<br>这是无序列表下，整百数排列的内容


<br>

<br>这是无序列表下，整百数排列的内容


<br>
这是第 1 个无序列表 

<br>
这是第 2 个无序列表 

<br>
这是第 3 个无序列表

<br>
这是第一个无序列表 <br>
这是同个列表下，另起一行的文本内容

<br>
这是第二个无序列表 <br>
这是同个列表下，另起一行的文本内容 

<br>
这是第一段引用文本的第 1 行 <br>
这是第一段引用文本的第 2 行   
<br>
这是第二段引用文本的第 1 行 <br>
这是第二段引用文本内第 2 行
<br><br>Tab<br>
Ctrl + [ （左中括号）<br>退格：<br>
Shift + Tab<br>
Ctrl + ] （右中括号）<br><br>
<br>第一级有序列表 1 

<br>第二级有序列表 1    
<br>第二级有序列表 2 


<br>第一级有序列表 2     
<br>补充说明：有序列表的数字序号，即便你在源代码模式里强行改掉数字，它仍然会依照顺序显示<br>
<br>第一级无序列表 1 

<br>第二级无序列表 1  
<br>第二级无序列表 2 


<br>第一级无序列表 2  
<br>
这是第一级引用

这是第二级引用 

这里又是第一级引用了
<br>
<br>第一级有序列表 1  

<br>第二级无序列表 1 

第三级引用 1  

- 第四级无序列表 2 &lt;!-- (Shift + Enter) --&gt;
  	1. 第五级有序列表 2 &lt;!-- (Enter) --&gt;
  - 第四级无序列表 3   &lt;!-- 写文本前，先( Shift + Tab 或 Ctrl + [ ) ；写完后再 (Enter) --&gt;
复制

第三级引用 2  


<br>第二级无序列表 4  


<br>第一级有序列表 3  
<br>Obsidian 的一些缩退问题<br>
Obsidian 在列表首行使用缩进的时候，后续的列表会出现一些问题<br>
Tab 和 Shift + tab 会无法缩进退格<br>
可以使用 Ctrl + ] 与 Ctrl + [ 来解决问题<br>如：<br>
<br>

<br>这是第一段就被缩进的列表
<br>这是第二段被再次缩进的列表  
<br>这是第三段列表  


<br><br>（选中看源码）<br>
<br>待办任务列表 1
<br>待办任务列表 2
<br>已办任务列表 1    
<br>已办任务列表 2
<br><img alt="markdown示例教程-20240222061203197.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222061203197.webp" style="width: 426px; max-width: 100%;"><br><br>| 是构成表格的主要框架<br>
-区分表头和表格主体<br>
: 控制表格内文本内容的对齐方式<br>|这里是表头 1|这里是表头 2|这里是表头 3|<br>
|:-|:-:|-:|    <br>
|单元格数据 1|单元格数据 2|单元格数据 3|<br>
|单元格数据 4|单元格数据 5|单元格数据 6|<br>示范：<br><br>表格中文本内容的换行：<br>
<img alt="markdown示例教程-20240222060129635.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222060129635.webp" style="width: 544px; max-width: 100%;"><br><br>这是一段行内代码<br>&lt;table border="1" cellspacing="0" width="500" height="500"&gt; <br>print("Hello, World!")<br>这是一行突出显示的文本内容<br>代码内容
代码内容
代码内容
复制<br><br><br>```js
// 3. 输出 100以内(不包括100) 所有偶数的和
// 这类求和问题的核心 ： 利用循环  (总和 = 旧数的和 + 新数)

let sum = 0;

for (let i = 1, sum = 0; i &lt; 100; i++) {
 if (i % 2 == 0) {
 // 筛选偶数
 sum += i; // sum = sum + i // 累加偶数并赋值给sum
 // sum为(旧的，已经进入循环的数)的和，i 为新进入循环的数。当加到(最后一个新数i)时，sum就是最后的 总和
 }
}

console.log(sum); // 打印总和
```
复制<br>在行内代码里显示反引号<br><br>这是一段能显示`反引号`的行内代码<br><br><br><br><br><br><br>如下：（选中查看源码）<br>This is a bold italic teal text<br><br>转义字符，显示*号<br>*这段文本被一对星号包裹，但不会倾斜*<br>**这段文本被 2 对星号包裹，但不会加粗**<br>***这段文本被 3 对星号包裹，但它既不倾斜也不加粗***<br>如果 url 中含有空格的话，空格需要转义为&nbsp;%20，如：<br>[Export options](Pasted%20image)
复制<br>当然，你也可以用&nbsp;&lt;&gt;&nbsp;将空格包含起来，如：<br>[Slides Demo](&lt;Slides Demo&gt;)
复制<br><br><br>`这段被反引号包裹的内容不会变成行内代码`<br>转义链接内的文本修饰<br>
<a data-tooltip-position="top" aria-label="表格内的链接内容" data-href="表格内的链接内容" href="https://wxkj.asia/mynote/表格内的链接内容" class="internal-link" target="_self" rel="noopener">文本修饰</a><br>在网页链接的显示文本内容中转义括号 [ ]<br><a data-tooltip-position="top" aria-label="https://www.runoob.com" rel="noopener" class="external-link" href="https://www.runoob.com" target="_blank">链接里的 [中括号] 能被正常显示</a><br><br>- 史蒂芬·平克   <br># 这里的内容不会被识别为标题<br>%%这里的内容可不被注释喔%%<br>[[这段文本不是一个双向链]]<br><a data-tooltip-position="top" aria-label="https://www.baidu.com/" rel="noopener" class="external-link" href="https://www.baidu.com/" target="_blank">[这是一个带中括号的网页链接显示文本，点击会跳转至百度]</a><br>文本修饰的中括号[ ] 不需要使用转义符号<br>
<a data-tooltip-position="top" aria-label="例8 木有链接的双链" data-href="#例8 木有链接的双链" href="https://wxkj.asia/mynote/#例8_木有链接的双链" class="internal-link" target="_self" rel="noopener">[这是一个带中括号的文本修饰</a>]<br><br>很多编辑器都有英文标点自动补全功能，自动生成一对，光标落在中间，只想删除前面 1 个，却会把一整对都删掉<br>
解决办法就是：Shift + Backspace 即可强制删除<br><br><br>（选中查看源码）<br><br><br>（选中查看源码）<br>
  
  
    
<br>Width ( 宽度 ) height ( 高度 ) ，可以自己设置，直接输入数字即可，单位默认是 px (像素)<br>
也可以使用百分比<br>
Width=100% 代表水平撑满整个窗口<br>
Height=50% 代表垂直撑满半个窗口<br>
Video 标签支持的视频格式 ：MP 4 ogg webm<br><br>（选中查看源码）<br> <br><br>例如：<br>![[My File.pdf#page=number]]
复制<br>目前为止，Obsidian 支持以下格式的文件：<br>
<br>Markdown 文件：md;
<br>图像文件：png,&nbsp;jpg,&nbsp;jpeg,&nbsp;gif,&nbsp;bmp,&nbsp;svg;
<br>音频文件：mp3,&nbsp;webm,&nbsp;wav,&nbsp;m4a,&nbsp;ogg,&nbsp;3gp,&nbsp;flac;
<br>视频文件：mp4,&nbsp;webm,&nbsp;ogv;
<br>PDF 文件：pdf.
<br><br>可以使用插件 Admonitions 快速输入<br>
<img alt="markdown示例教程-20240222071044291.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222071044291.webp" style="width: 583px; max-width: 100%;"><br>
<img alt="markdown示例教程-20240222071103144.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222071103144.webp" style="width: 576px; max-width: 100%;"><br><img alt="markdown示例教程-20240222071137558.webp" src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222071137558.webp" style="width: 131px; max-width: 100%;"><br>注意：不要忘记 &gt; 与 [<br>
] 与标题间有空格<br>标题
内容
<br>这是一个 callout 标题
这里是 callout 里的内容<br>
<a data-tooltip-position="top" aria-label="20 Callout blocks" data-href="#20 Callout blocks" href="https://wxkj.asia/mynote/#20_Callout_blocks" class="internal-link" target="_self" rel="noopener">callout</a> 内部支持双链

<br>同样支持MD 语法

<br>这是一个可折叠的标题
这里的内容可通过点击 Callouts 标题 折叠起来
<br>在后面加上 - 减号，默认处于折叠状态 [!note]-<br>这是一个已被折叠的标题 （点击可展开）
里面的内容默认看不到
<br>Callouts 类别<br>
默认共支持 12 种类别 （可自己在 Admonitions 插件里添加）<br>Note<br>
Abstract, summary, tldr<br>
Info, todo<br>
Tip, hint, important<br>
Success, check, done<br>
Question, help, faq<br>
Warning, caution, attention<br>
Failure, fail, missing<br>
Danger, error<br>
Bug<br>
Example<br>
Quote, cite<br>这是一个 bug 类别
这里是内容
<br>Callouts 支持多层嵌套<br>这是第一层
这里是第一层的内容
这是嵌套的第二层
这里是第二层的内容
这是嵌套的第三层，且默认为折叠状态
这里是第三层被折叠的内容


<br>支持用 CSS 来自定义类型和图标，不过我个人没怎么用<br>具体可戳 <a data-tooltip-position="top" aria-label="https://help.obsidian.md/How+to/Use+callouts#Customizations" rel="noopener" class="external-link" href="https://help.obsidian.md/How+to/Use+callouts#Customizations" target="_blank">Use callouts - Obsidian Help</a><br><br><a data-tooltip-position="top" aria-label="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/MOC/MOC+Mermiad+%E6%95%99%E7%A8%8B+Obsidian%E7%89%88" rel="noopener" class="external-link" href="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/MOC/MOC+Mermiad+%E6%95%99%E7%A8%8B+Obsidian%E7%89%88" target="_blank">Mermiad 超级教程 Obsidian版</a><br><br><br><br><br><br><br><br><br><br><br><br>格式：$ + 行内公式 + $<br><br>
<br>
<br>
<br><br>格式：<br><br>% 化学公式<br><br>% 麦克斯韦方程组<br><br>% 薛定谔方程<br><br><a data-tooltip-position="top" aria-label="https://www.wolai.com/wolai/egjDbHiAfGfJmwR972fcEW" rel="noopener" class="external-link" href="https://www.wolai.com/wolai/egjDbHiAfGfJmwR972fcEW" target="_blank">Latex 详细教程</a><br><br>请参考：<br>
<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/%E4%BB%80%E4%B9%88%E6%98%AF+Mermaid%EF%BC%9F" rel="noopener" class="external-link" href="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/%E4%BB%80%E4%B9%88%E6%98%AF+Mermaid%EF%BC%9F" target="_blank">什么是 Mermaid？</a><br>
<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/Mermaid+%E6%B5%81%E5%9B%BE" rel="noopener" class="external-link" href="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/Mermaid+%E6%B5%81%E5%9B%BE" target="_blank">Mermaid 流图</a><br>
<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/Obsidian+%E4%B8%AD%E7%9A%84+Mermaid" rel="noopener" class="external-link" href="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Mermaid/Obsidian+%E4%B8%AD%E7%9A%84+Mermaid" target="_blank">Obsidian 中的 Mermaid</a><br>本文整理自：<a data-tooltip-position="top" aria-label="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Markdown/Markdown%E8%B6%85%E7%BA%A7%E6%95%99%E7%A8%8B+Obsidian%E7%89%88#%E4%BB%80%E4%B9%88%E6%98%AF%20Markdown?" rel="noopener" class="external-link" href="https://publish.obsidian.md/csj-obsidian/0+-+Obsidian/Markdown/Markdown%E8%B6%85%E7%BA%A7%E6%95%99%E7%A8%8B+Obsidian%E7%89%88#%E4%BB%80%E4%B9%88%E6%98%AF%20Markdown?" target="_blank">Markdown超级教程 Obsidian版</a><br>
<br>
<br>周树人<a href="https://wxkj.asia/mynote/#fnref-1-7df868d19ef52194" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
<br>绍兴人<a href="https://wxkj.asia/mynote/#fnref-2-7df868d19ef52194" class="footnote-backref footnote-link" target="_self" rel="noopener">↩︎</a>
]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/markdown示例教程.html</link><guid isPermaLink="false">工具软件/obsidian/markdown示例教程.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 13 May 2024 15:21:49 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222054705709.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/markdown示例教程-20240222054705709.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Obsidain插件之QuickAdd-强大的快速记录与宏工具]]></title><description><![CDATA[ 
 <br>&nbsp; &nbsp;QuickAdd是一款可快速添加信息，捕捉想法，采用模板新建笔记和添加宏命令，快速执行多项操作的好用又强大的插件。<br>&nbsp; &nbsp; 可以配合着 Kanban、Button插件一同使用，增强功能。<br>&nbsp; &nbsp; 本篇将主要介绍下这款插件的使用方法和一些参数设置。<br><img src="https://i0.hdslb.com/bfs/article/4adb9255ada5b97061e610b682b8636764fe50ed.png@progressive.webp" referrerpolicy="no-referrer"><br><br>在QuickAdd的插件设置中，可以添加四种模式的命令，命令名称支持emoji标签。<br><br>很抱歉，您未提供具体的文章或段落内容，我无法进行总结归纳和关键论点提取。请提供详细文本后，我会帮您整理出相应的Markdown格式输出。<br>可添加的四种命令模式分别为：<br>
<br>- Template- 创建一个模板
<br>- Capture- 捕获思考，想法，添加进一个文件。
<br>- Macro- 快速创建一个宏
<br>- Multi- 创建一个命令组
<br>&nbsp; &nbsp; &nbsp;已经添加的命令会显示出来，其中，闪电形的标志是说该命令可以出现在`cmd/ctrl&nbsp;+ P`的命令面板中。*（否则需要在命令面板中先输入 QuickAdd再选择对应的命令）*<br><img src="https://i0.hdslb.com/bfs/article/watermark/4d9b50a7e7d7fef28394a19e8a5ecb9f93ec67ed.png@1256w_430h_!web-article-pic.avif" referrerpolicy="no-referrer"><br>设置界面<br><br>Capture功能，可以快速捕捉你的想法或者灵感，并放置在当前文件或选择一个特定的文件中，可以理解为快速添加一项内容。<br>其中文件名支持模板，支持动态文件<br>例如`./{{DATE:gggg-MM-DD - ddd MMM D}}.md`.&nbsp;<br>这样会动态的把内容放置在每天的日记，该功能的相关设置说明如下<br>&nbsp;_Create file if it doesn't exist_ 如果指定文件不存在，会创建一个<br>_Prepend_ 将添加的内容添加到文件底部.<br>_Task_ 转换为任务格式.<br>&nbsp;_Append link_ 在当前文件中，添加一个到搜集捕获信息的文件链接.<br>_Insert after_ 插入在某个文件后面.<br>_Capture format_ 捕捉之后的设置，设置一个内容模板 `{{DATE:HH:mm}} {{VALUE}}`.&nbsp;<br><img src="https://i0.hdslb.com/bfs/article/watermark/390cec6d2b20a6217653b7ce1b754b8cfad995b2.png@1256w_950h_!web-article-pic.avif" referrerpolicy="no-referrer"><br>Capture的设置面板说明<br><br>按照作者的介绍，这个功能并非对Templater或核心模板插件的代替，而是一种模板功能的增强<br>使用Quickadd代码格式和添加方法，可以同时配合Templater等模板插件，做到动态产生笔记名称，指定文件夹、添加链接等.<br>首先要指定一个模板路径 _template path_.&nbsp;至于基于的模板文件，可以采用核心插件的模板或者Tempater的插件作为模板。<br>动态生成相关信息 `{ {{DATE}} {{NAME}}`,显示的样子是 `2021-06-12 FileName`, Name就是输入的文件名称<br>可以指定多个目录文件夹，如果没指定，就存放在根目录，如果指定了就在该目录；如果有多个，会被询问具体添加的位置。<br>其中：<br>_Append link_ 在当前文件中，添加一个文件链接.<br>_Increment file name_ 如果已经有了重名的文件，就会新建一个，后面加上数字。<br>_Open_ 打开对应文件<br><img src="https://i0.hdslb.com/bfs/article/watermark/5756626601bfa22259d0eca146778745f23a28bd.png@1256w_452h_!web-article-pic.avif" referrerpolicy="no-referrer"><br>Template面板说明<br><br>Multi-choices 就是创建了一个命令组，相当于对多个命令进行了分组，这样当命令比较多的时候，便于进行分类查找，并无实际功能作用。<br><img src="https://i0.hdslb.com/bfs/article/ca26595d17b3b5bad432f709ae977ff84946f480.png@1256w_466h_!web-article-pic.avif" referrerpolicy="no-referrer"><br>Git上的分组示例<br><br>宏功能很强大，可以添加诸多指令（包括Obsidian自己的命令）或者使用Javascript脚本，来自动化执行一些工作。<br>
<br>- 首先在宏管理面板添加宏，名称，并增加配置，比如添加启动项目，等待时间等。
<br>- 然后在Quickadd主面板增加一个宏命令（如MarcoAAA），并指定宏给这个宏命令
<br>- 执行的时候，就可以在命令面板中找到 MarcoAAA，并执行。
<br>具体内容见下列三图：<br>宏命令管理  <br><img src="https://i0.hdslb.com/bfs/article/watermark/cea0483c1915a82b945d24073d23498a16c6010f.png@1256w_840h_!web-article-pic.avif" referrerpolicy="no-referrer"><br>宏命令管理<br>宏命令设置<br><img src="https://i0.hdslb.com/bfs/article/watermark/65aad7a8a7487dc6fbeac6aabbc10d5640161d39.png@1256w_1462h_!web-article-pic.avif" referrerpolicy="no-referrer"><br>宏命令配置<br><img src="https://i0.hdslb.com/bfs/article/watermark/b58deaeb8a85c8cf5c7b8961b71b1cc64836d954.png@1256w_586h_!web-article-pic.avif" referrerpolicy="no-referrer"><br><br>上文中提到的一些动态内容例如 {{DATE}}, 可以在添加内容的时候，按照具体设定信息动态添加日期、内容、值、链接等，具体信息见下图<br><img src="https://i0.hdslb.com/bfs/article/e06745dba9494d201d316ddb2f4a50691b217d7c.png@1256w_764h_!web-article-pic.avif" referrerpolicy="no-referrer"><br>来源插件github<br><br>当具有了一定的JavaScript的知识后，可以通过编写JavaScript脚本来自定义一些功能，使用起来更灵活。<br>理论上，结合宏命令和脚本功能，能够做到任何自动化的操作。<br>作者在github中，提供了多个例子和该插件的API；B站上也有几位其他Up主老师分享了相关的内容，相关链接🔗附在后面~有兴趣的伙伴可以看看。由于脚本的灵活性很大，本文就不再详述了。<br><img src="https://i0.hdslb.com/bfs/article/4adb9255ada5b97061e610b682b8636764fe50ed.png@progressive.webp" referrerpolicy="no-referrer"><br>&nbsp; &nbsp; 以上就是本篇分享的主要内容，是个人敲字截图总结的一些心得和使用体验，创作不易，欢迎 点赞、投币、收藏~&nbsp;<br><br>
<br>GitHub仓库：<a rel="noopener" class="external-link" href="https://github.com/chhoumann/quickadd/tree/master/src" target="_blank">https://github.com/chhoumann/quickadd/tree/master/src</a>
<br>原作者视频：<a data-tooltip-position="top" aria-label="https://www.bilibili.com/video/BV1CA411A71P?spm_id_from=333.999.0.0" rel="noopener" class="external-link" href="https://www.bilibili.com/video/BV1CA411A71P?spm_id_from=333.999.0.0" target="_blank">https://www.bilibili.com/video/BV1CA411A71P?spm_id_from=333.999.0.0</a>
<br>Johnny学OB 第38集 用OB搭建个人首页收尾篇，用Quickadd, Kanban, Buttons 把之前的坑都补上吧：<a data-tooltip-position="top" aria-label="https://www.bilibili.com/video/BV1qQ4y1q7Gs?spm_id_from=333.999.0.0" rel="noopener" class="external-link" href="https://www.bilibili.com/video/BV1qQ4y1q7Gs?spm_id_from=333.999.0.0" target="_blank">https://www.bilibili.com/video/BV1qQ4y1q7Gs?spm_id_from=333.999.0.0</a>
<br>[Obs＃50] QuickAdd全攻略(1)：改变工作流程的超强外挂：<a data-tooltip-position="top" aria-label="https://www.bilibili.com/video/BV1eU4y1A7eR?spm_id_from=333.999.0.0" rel="noopener" class="external-link" href="https://www.bilibili.com/video/BV1eU4y1A7eR?spm_id_from=333.999.0.0" target="_blank">https://www.bilibili.com/video/BV1eU4y1A7eR?spm_id_from=333.999.0.0</a>
<br><br>文章来源: <a rel="noopener" class="external-link" href="https://www.bilibili.com/read/cv14681298/" target="_blank">https://www.bilibili.com/read/cv14681298/</a>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/obsidain插件之quickadd-强大的快速记录与宏工具.html</link><guid isPermaLink="false">工具软件/obsidian/Obsidain插件之QuickAdd-强大的快速记录与宏工具.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:21:49 GMT</pubDate><enclosure url="https://i0.hdslb.com/bfs/article/4adb9255ada5b97061e610b682b8636764fe50ed.png@progressive.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://i0.hdslb.com/bfs/article/4adb9255ada5b97061e610b682b8636764fe50ed.png@progressive.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Quail 是什么？]]></title><description><![CDATA[ 
 Quail是一个发布文章的平台，别人可以订阅和付费阅读文章，还可以汇总成文集等。插件安装和配置slug和API key。能保存、发布和取消发布文章，还可以自动生成yaml属性和插入模板。使用技巧包括存草稿和给文章添加banner。可通过Commander插件一键发布。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/obsidian分享文章到quail博客.html</link><guid isPermaLink="false">工具软件/obsidian/obsidian分享文章到Quail博客.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 12 Mar 2024 13:17:51 GMT</pubDate><enclosure url="https://static.quail.ink/media/evonzigo6.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://static.quail.ink/media/evonzigo6.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[为什么需要？]]></title><description><![CDATA[ 
 使用uTools和obsidian解决方案可以实现快速记录灵感的功能。通过uTools的快捷命令，输入文字后可以将内容保存到obsidian软件里。这个方案比obsidian里的QuickAdd插件更加快捷方便。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/utools和obsidian联动，高效记录您的灵感闪现.html</link><guid isPermaLink="false">工具软件/obsidian/uTools和obsidian联动，高效记录您的灵感闪现.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:21:57 GMT</pubDate></item><item><title><![CDATA[用 MaoXian 网摘保存网络文章到 Obsidian]]></title><description><![CDATA[ 
 <br><br>本文以图文的形式，详细地介绍如何使用 MaoXian 这款浏览器扩展，把网络上的文章以 Markdown 的格式保存到 Obsidian 的库里面。本教程特别适用于喜欢本地存储大于云存储的 Obsidian 用户。<br>注：本文以 Linux 系统为对接环境，不同的操作系统的对接略有差异，但整个对接思路和流程是一致的，请参照各个对接步骤灵活变通。<br><br>MaoXian 是一个简洁的网摘扩展，它专注于一个核心功能：把网页上的信息保存到你的本地电脑上，以避免网站挂了，网址失效，图片失效等问题。它支持把网页上的文章以 Markdown 的格式裁剪下来，并且同时把文章对应的图片下载下来。另外，MaoXian 的存储结构和 Obsidian 一样简单，都是以文件夹和 Markdown 文件的形式存储在你本地的电脑里，这种不谋而合的设计使得它们可以很好地配合在一起。<br>MaoXian 是一款纯绿色的开源软件，你不需要创建任何帐号即可使用。并且它不会收集任何个人信息，你可以在<a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/privacy-policy-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/privacy-policy-zh-CN.html" target="_blank">这里</a>查看它的隐私说明。<br><br>由于 Obsidian 和 MaoXian 的存储都是用本地文件夹 和 Markdown 文件，而且 Obsidian 会自动识别库文件夹里面的 Markdown 文件。所以只要把 MaoXian 存储位置设置成 Obsidian 库里面的某个文件夹就可以把它们对接起来。<br><br>
<br>方法A ： 选用『浏览器』作为存储操作的处理程序，并通过创建软链接（传送门）的方式修改 MaoXian 的存储位置。
<br>方法B ： 选用『本地程序』作为存储操作的处理程序，并通过修改『本地程序』的配置文件来修改 MaoXian 的存储位置。
<br>如果你的浏览器安装了一个管理下载的扩展，或者是你的浏览器本身就开发了特有的下载管理功能，那么当 MaoXian 叫浏览器去下载某个文件的时候，这个下载请求可能会被这些下载功能拦截到，并且要保存的文件名也可能会被改掉。这会导致 MaoXian 根本无法使用浏览器来下载文件。<br>你可以到扩展的 设置 &gt; 浏览器 页面，点击 『测试』按钮，来测试浏览器能否正常处理 MaoXian 发出的下载请求。如下图，表明你可使用『方法A』来对接 Obsidian。<br><img title="测试浏览器能否正常处理下载请求" alt="测试下载请求" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/test-download-request.png" referrerpolicy="no-referrer"><br>如果你测试后，发现下载请求被拦截，那么你可以找出到底是哪个扩展拦截的，还是浏览器本身拦截的。你可以选择换掉它，或者向它的开发者反馈这个问题。如果你实在无法避免这种下载冲突， 才需要使用『本地程序』来绕过浏览器的下载功能，即使用本文中的『方法B』来对接 Obsidian。<br><br>请按照文档顺序，选择适用你的步骤进行操作。<br>【注意】，并不是每个步骤都需要执行，每个步骤标题后面都会标识该步骤所适用的方法<br>标识说明：<br>
<br>【A】 ：表明该步骤，只有选用『方法A』 的用户才需要执行。
<br>【B】 ：表明该步骤，只有选用『方法B』的用户才需要执行。
<br>【AB】：表明该步骤，两种对接方法都适用，都需要执行。
<br><br>如果你还没有安装 Obsidian，可到<a data-tooltip-position="top" aria-label="https://obsidian.md/" rel="noopener" class="external-link" href="https://obsidian.md/" target="_blank">官网</a>下载软件包并安装。然后确保你已经有一个 Obsidian 库，然后在这个库里面创建一个用于保存网页文章的文件夹。在本文中我们的 Obsidian 库的名字叫 ob-notes，这个专门用于保存网页文章的文件夹叫 web-clippings ，为了方便，我们称其为 Obsidian 的网摘入口，配置好后，如下图：<br><img title="Obsidian 库与网摘入口" alt="Obsidian 库与网摘入口" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/obsidian-vault-and-clipping-dir.png" referrerpolicy="no-referrer"><br>接下来我们需要知道这个网摘入口的文件路径，你可以右击它，点击『在系统资源管理器中显示」后，Obsidian 会打开文件管理器，然后通过点击，进入到『网摘入口文件夹』内部，此时文件管理器上的文件路径就是我们要的路径。如下图：<br><img title="在系统资源管理器中显示" alt="在系统资源管理器中显示" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/show-in-file-explore.png" referrerpolicy="no-referrer"><br>通过点击，进入到网摘入口文件夹内部，如下图，红框选中的部分，就是网摘入口的路径：<br><img title="网摘入口在文件管理器中的路径" alt="网摘入口在文件管理器中的路径" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/clipping-dir-in-file-explore.png" referrerpolicy="no-referrer"><br>此时我们得到了两个文件夹的路径：<br>
<br>Obsidian 库： /home/user/Documents/ob-notes
<br>网摘入口 ： /home/user/Documents/ob-notes/web-clippings。
<br>注： Windows 系统的文件路径是以盘符开头和以\分隔的，和上方很不一样。Windows 用户会得到类似 D:\Users\jack\Documents\ob-notes\web-clippings 的路径，下文不再赘述。<br><br>Firefox （火狐）浏览器，请到 <a data-tooltip-position="top" aria-label="https://addons.mozilla.org/zh-CN/firefox/addon/maoxian-web-clipper/" rel="noopener" class="external-link" href="https://addons.mozilla.org/zh-CN/firefox/addon/maoxian-web-clipper/" target="_blank">火狐扩展中心</a> 进行安装。<br>Chromium （谷歌浏览器社区版） 或 Chrome （谷歌浏览器）或其他以 Chromium 为核心开发的浏览器 （如： Edge 浏览器）。由于 MaoXian 网摘这款扩展没有上架谷歌浏览器商店，所以需要手动安装它。安装方式请看 <a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/install-by-extension-file-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/install-by-extension-file-zh-CN.html" target="_blank">通过下载扩展文件的方式来安装 MaoXian</a><br>安装成功后，它会自动弹出一个欢迎页面，不要把它关掉。按照它的提示，关闭浏览器的『每次下载都询问保存位置』。因为 MaoXian 使用的是浏览器的下载功能来保存文件，如果这个设置没有关闭，每次裁剪都弹出好多个窗口询问你保存位置，窗口打击很疼的。<br>而第二点「允许 MaoXian 访问本地路径」我们不需要做，因为我们要使用 Obsidian 来管理这些裁剪下来的文章，就不需要用浏览器来查看了。完成后关掉欢迎页面。<br>这是 Firefox 上，MaoXian 的欢迎页面，供参考：<br><img alt="MaoXian 初始化" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/maoxian-welcome-page.png" referrerpolicy="no-referrer"><br><br>【注意】： 该步骤，只有选用『方法A』 的用户才需要执行。<br>为了更好地把重心放在对接上，此时，我们只进行一些基础配置。点击浏览器工具栏上的 MaoXian 图标，再进入 设置 &gt; 存储设置。<br>
<br>配置处理程序为『浏览器』
<br>配置保存格式为 『Markdown』
<br>配置根目录为 mx-wc
<br>参考下图：<br><img title="MaoXian 基础配置，对接方法A" alt="MaoXian 基础设置" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/maoxian-basic-config-method-a.png" referrerpolicy="no-referrer"><br><br>【注意】： 该步骤，只有选用『方法A』 的用户才需要执行。<br>在你的浏览器设置里面，找到浏览器的默认下载路径，这个路径后面要用到。<br>作为参考，我得到的路径为：/home/user/Downloads，如下图：<br><img alt="浏览器默认的下载路径" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/browser-default-dwonload-folder.png" referrerpolicy="no-referrer"><br><br>【注意】： 该步骤，只有选用『方法A』 的用户才需要执行。<br>这是最关键的一步，在这一步中，我们要把 MaoXian 默认存储位置设置成 Obsidian 库里面的网摘入口（在第一步里创建的那个文件夹）。方法为创建传送门，你将需要以下信息：<br>
<br>MaoXian 的根目录。我们使用的是默认值，即 mx-wc。
<br>浏览器的默认下载路径。这个在上一步骤中已经拿到，我拿到的是 /home/user/Downloads。
<br>目标路径。这个是网摘入口的路径，我们在第一步中已经拿到，我拿到的是 /home/user/Documents/ob-notes/web-clippings
<br>有了上方的三个信息，你可以通过点击下方的连接，按照 MaoXian 给出的文档，创建传送门。<br>请保持耐心，这可能看起来很复杂，但做起来很简单。你将学会『创建传送门』这个很有用的技能。<br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/faq-zh-CN.html#method-B-create-symbolic-link" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/faq-zh-CN.html#method-B-create-symbolic-link" target="_blank">点我查看：如何通过创建传送门，修改 MaoXian 的默认存储位置</a><br>作为参考，我需要创建的传送门为：/home/user/Downloads/mx-wc ，这个传送门的目标路径为 /home/user/Documents/ob-notes/web-clippings。在 Linux 上的创建命令为：<br>ln -s /home/user/Documents/ob-notes/web-clippings /home/user/Downloads/mx-wc
复制<br>执行效果如下图：<br><img alt="创建传送门" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/create-transfer-door.png" referrerpolicy="no-referrer"><br>成功创建后，每次我用 MaoXian 裁剪网页，它都会把文件保存进传送门，然后所有的文件就被传送到目标路径，即传送到 Obsidian 的网摘入口文件夹里面。<br><br>【注意】： 该步骤，只有选用『方法B』 的用户才需要执行。<br>为了更好地把重心放在对接上，此时，我们只进行一些基础配置。点击浏览器工具栏上的 MaoXian 图标，再进入 设置 &gt; 存储设置。<br>
<br>配置处理程序为『浏览器』，（我们得等到安装和对接好『本地程序』才能回来选择『本地程序』作为处理程序）
<br>配置保存格式为 『Markdown』
<br>配置根目录为 web-clippings （注：参考值，这个值必须和前面的 Obsidian 的网摘入口的名字一样）
<br>参考下图：<br><img title="MaoXian 基础配置，对接方法B" alt="MaoXian 基础设置" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/maoxian-basic-config-method-b.png" referrerpolicy="no-referrer"><br><br>【注意】： 该步骤，只有选用『方法B』 的用户才需要执行。<br>请按照 <a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/native-app/index-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/native-app/index-zh-CN.html" target="_blank">本地程序文档</a> 进行安装和配置，在配置那一步，把存储目录设置为 Obsidian 库的路径（你已经在本教程的步骤（1）中得到这个路径）<br>以我在步骤（1）中拿到的 Obsidian 库路径 /home/user/Documents/ob-notes 为例，我的 config.yaml 文件的内容如下：<br>environment: 'production'
data_dir: '/home/user/Documents/ob-notes'
msg_handler: 'default'
复制<br>对接上后，启用它，状态如下图：<br><img title="已对接上的『本地程序』" alt="已对接上的『本地程序』" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/native-app-is-ready.png" referrerpolicy="no-referrer"><br><br>【注意】： 该步骤，只有选用『方法B』 的用户才需要执行。<br>我们在步骤（3）中，暂时没有设置『本地程序』为处理程序。现在『本地程序』已经对接上并且启用了，就可以把存储设置中的处理程序选为『本地程序』了，如下：<br><img title="选择『本地程序』作为处理程序" alt="选择『本地程序』作为处理程序" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/select-native-app-as-handler.png" referrerpolicy="no-referrer"><br>由于我们在步骤（3）中，把 MaoXian 的存储根目录配置成 web-clippings ，所以当 MaoXian 扩展请求『本地程序』保存文件时，这些文件就会存储在 /home/user/Documents/ob-notes/web-clippings 这个目录下。即保存在了 Obsidian 的网摘入口文件夹里面。<br><br>由于 Obsidian 会自动识别 Markdown 文件，所以能在 Obsidian 上直接看到由 MaoXian 保存过来的 Markdown 文件。你现在就可以找一个网页裁剪试试，看能否在 Obsidian 上看到裁剪下来的文件 ，你将会看到一个新的 markdown 文件，叫 index。<br>下图是我的测试结果，在表单那一步，我填写了分类 test 。<br><img alt="第一次裁剪测试" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/first-clipping-test-obsidian.png" referrerpolicy="no-referrer"><br>在文件系统上查看，MaoXian 默认的存储结构，如下图：<br><img alt="MaoXian 默认的存储结构" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/fist-clipping-file-tree.png" referrerpolicy="no-referrer"><br>到这里整个对接流程已经结束。我们已经把 MaoXian 网摘和 Obsidian 对接了起来，并完成对其的测试，也对 MaoXian 默认的存储结构有了一个初步的了解。你可以就此打住，或者去细配置 MaoXian 的存储路径、Markdown 模板 和 Markdown 格式。若要接着配置，请查看下一章节。<br><br>由于每个人的需求都不一样，所以很难列举出所有不同的设置。在本章节里，我们会用一个例子，作为参考，读者可灵活变通，配置出自己想要的存储结构。<br>MaoXian 支持你很灵活地配置各种类型文件的存放路径，只要这些路径都以『MaoXian 的根目录』打头就行，即所有裁剪下来的文件都必须存储在『根目录』下。<br>从存储设置页面，你可以了解到 MaoXian 的默认存储路径是这样构成的：<br>下载路径 / 根目录 / 分类目录 / 裁剪目录 / 文件名<br>其中：<br>
<br>下载路径 是指你选用的处理程序的默认下载路径，即浏览器的下载目录或『本地程序』里配置的下载目录。
<br>分类目录 和 裁剪目录 是可选的，你可以配置各个路径，使其不包含这些可选的目录，或者只包含一个，或者都包含。
<br>注： 许多路径相关的设置项都允许你使用变量，你可以点击相关的『可用变量』进行查看，利用变量和存储路径各部分的组合，可以很灵活地配置你的存储结构，但有一点要提醒读者的是：你配置的存储结构要避免发生文件覆盖的情况。<br>我们将配置下方的存储结构<br>~/Documents/ob-notes/web-clippings $ tree
.
└── read-later
    └── 20230529_测试博客功能_1685369680
        ├── assets
        │&nbsp;&nbsp; └── 5f05cab82dc67034430a15a011750962.png
        └── index.md

复制<br>各部分解释如下：<br>
<br>read-later 是分类目录，此例中，使用的是默认目录
<br>20230529_测试博客功能_1685369680 是裁剪目录，其中 20230529 为当前日期信息，测试博客功能 为标题，1685369680 为时间戳（可以避免文件覆盖）。
<br>index.md 为主文件
<br>assets 为存储图片的文件夹
<br>5f05cab82dc67034430a15a011750962.png 为图片文件
<br>该存储结构的特点为：<br>
<br>每个裁剪下来的网页的全部文件，都会存于裁剪目录中，你可以随便移动该裁剪目录，而无需更新 md 文件里面的链接。
<br>文件路径自带日期和标题，日期可用于按名字排序，标题可方便浏览。
<br>图片统一保存在 assets 文件夹下，在浏览时可迅速定位到 md 文件。
<br><br>不管你要配置的存储路径包不包含 分类目录，配置『默认分类』都很有必要。我们推荐你都配置它，<br>下图中，我们把它的值配置为 read-later 。<br><img alt="根目录和默认分类" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/root-folder-and-default-category.png" referrerpolicy="no-referrer"><br><br>裁剪目录配置为 $YYYY$MM$DD_$TITLE_$TIME-INTSEC，如下图：<br><img alt="裁剪目录" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/clipping-folder.png" referrerpolicy="no-referrer"><br><br>主文件保持不变，使用默认值，如下图：<br><img alt="主文件" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/main-file.png" referrerpolicy="no-referrer"><br><br>资源文件（即图片文件），修改文件名为 $MD5URL$EXT 因为我们在『裁剪目录』上已经加了时间戳，所以这里去掉。如下图：<br><img alt="资源文件" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/asset-files.png" referrerpolicy="no-referrer"><br><br>我们的保存格式为 Markdown， MaoXian 会自动把这些内嵌网页文件嵌入到主 Md 文件里，所以该项不需要配置，保持默认值就好。<br><br>这个文件记录着本次裁剪的元信息，示例内容如下，如果你确定以后都用不到这些元信息，则可以不保存该文件。保存该文件的好处是：方便其他程序识别和处理这些裁剪下来的文件。<br>{
  "version": "2.0",
  "clipId": "1685345270",
  "format": "md",
  "title": "测试博客功能",
  "link": "http://dev.pc:3000/blog/other/2016/01/01/test-blog-feature.html",
  "category": "test",
  "tags": [
    "标签A",
    "标签B"
  ],
  "created_at": "2023-05-29 15:27:50",
  "mainPath": "index.md",
  "paths": [
    "index.json",
    "a-title_测试博客功能",
    "assets/1685345270-5f05cab82dc67034430a15a011750962.png",
    "index.md"
  ]
}
复制<br><img alt="不保存元信息文件" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/dont-save-meta-file.png" referrerpolicy="no-referrer"><br><br>这个文件只是为了在文件系统里起标识作用，如果你的 markdown 文件的存储路径，将包含标题信息。则建议不要保存该文件。如图：<br><img alt="不保存标题文件" src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/dont-save-title-file.png" referrerpolicy="no-referrer"><br>到此，我们的示例存储结构就配置好了，希望你可成功配置你的存储结构 :)<br><br>你可以在 设置页面 &gt; Markdown 里设置 Markdown 的模板与格式。由于每个人的需求不同，我个人只配置了 YAML Front Matter。下面是我的 Markdown 模板，供参考：<br>---
标题: {{title}}{{^title}}无标题{{/title}}
源网址: {{url}}
时间: {{createdAt}}
分类: {{category}}{{^category}}未分类{{/category}}
标签: {{#tags}}
 - {{.}}{{/tags}}{{^tags}}
 - 无{{/tags}}
---

{{content}}

复制<br>Markdown 格式，请自行配置，设置页面已经展示得很清楚。<br><br>
<br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/index-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/index-zh-CN.html" target="_blank">网站</a> - 项目首页，可找到很全的信息。
<br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/faq-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/faq-zh-CN.html" target="_blank">常见问题</a> - 使用过程中，比较经常遇到的问题。
<br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/privacy-policy-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/privacy-policy-zh-CN.html" target="_blank">隐私说明</a> - 查看该扩展如何对待你的隐私的。
<br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/why-not-publish-on-cws-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/why-not-publish-on-cws-zh-CN.html" target="_blank">为什么 MaoXian 不再在「谷歌商店」上线</a> - 了解为啥 MaoXian 从谷歌扩展商店下架的经过。
<br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/native-app/index-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/native-app/index-zh-CN.html" target="_blank">本地程序</a>
<br><a data-tooltip-position="top" aria-label="https://mika-cn.github.io/maoxian-web-clipper/assistant/index-zh-CN.html" rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/assistant/index-zh-CN.html" target="_blank">毛线助手</a> - 可使用它，在裁剪之前修改网页的状态。
<br><br>文章来源: <a rel="noopener" class="external-link" href="https://mika-cn.github.io/maoxian-web-clipper/obsidian-zh-CN.html#config-iframes" target="_blank">https://mika-cn.github.io/maoxian-web-clipper/obsidian-zh-CN.html#config-iframes</a>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/用-maoxian-网摘保存网络文章到-obsidian.html</link><guid isPermaLink="false">工具软件/obsidian/用 MaoXian 网摘保存网络文章到 Obsidian.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate><enclosure url="https://mika-cn.github.io/maoxian-web-clipper/obsidian/test-download-request.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://mika-cn.github.io/maoxian-web-clipper/obsidian/test-download-request.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin)]]></title><description><![CDATA[ 
 <br><br>这个插件的主要功能有：快速插入Markdown代码，禅模式，浏览器搜索，状态栏显示当前文档大小，用户自定义命令，JavaScript和CSS代码片段，可拖动状态栏，设置面板增加最小化按钮等。<br><br>
<br>
快速插入常见Markdown代及一些HTML代码，包括Sup，Sub，Audio，Video，Iframe，左中右对齐，变量，脚注，Callout，锚点，HTML注释等。

<br>
3种禅模式，包括深度禅模式，轻禅模式，微禅模式，并且你可以自定义他们的样式。 

<br>
可以用浏览器搜索选中的文本。

<br>
状态栏显示当前文档大小。 

<br>
除了常见和的Markdown代码和常见HTML代码外，你还可以自定义你自己的代码，通过自定义命令输入框，可以把你的代码生成命令。

<br>
如果你想对笔记某个功能做细微的调整可以用CSS代码片段，当CSS不足时，你还可以通过JavaScript代码片段做进一步调整。

<br>
状态栏可以任意拖动，如果你的状态栏有时候遮挡重要的内容时，这个很有用。

<br>
设置面板最小化，这个功能可以让你的设置面板暂时隐藏起来，与关闭不同的是会保持你最小化前的信息状态，比如你输入的状态，滚动条的位置等。

<br>
颜色命令的颜色面板中常见的色块选自22种人类最易分辨的颜色。可参见文章<a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/508870810" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/508870810" target="_blank">20种不同的颜色</a>或<a data-tooltip-position="top" aria-label="https://www.researchgate.net/publication/237005166_A_Colour_Alphabet_and_the_Limits_of_Colour_Coding" rel="noopener" class="external-link" href="https://www.researchgate.net/publication/237005166_A_Colour_Alphabet_and_the_Limits_of_Colour_Coding" target="_blank">A Colour Alphabet and the Limits of Colour Coding</a>

<br><br>到这里下载 <a data-tooltip-position="top" aria-label="https://github.com/wish5115/obsidian-ii-plugin/releases/tag/1.1.1" rel="noopener" class="external-link" href="https://github.com/wish5115/obsidian-ii-plugin/releases/tag/1.1.1" target="_blank">Release obsidian-ii-plugin-1.1.1</a><br>下载后把 obsidian-ii-plugin.zip 解压后，放到插件目录，重启 obsidian，然后别忘了到设置里开启插件即可。<br><br>/ii，一般用于插入代码，ctrl+p + ii或右键菜单，一般用于对选择文字包裹代码。其他快捷方式，比如：如果想选择加粗命令也可以 /iib 等。<br>
/iiz 或 ctrl+p iiz 显示禅模式，你也可以自己设定快捷键。<br>禅模式可以通过命令面板ctrl+p + iiz触发，或者你也可以设置自己的快捷键。<br>浏览器搜索可以通过命令面板和右键菜单，通常使用右键菜单更方便。<br>时间和日期格式化，采用和官方一致的时间格式化代码，更多格式参见：<a data-tooltip-position="top" aria-label="https://momentjs.com/docs/#/parsing/string-format/" rel="noopener" class="external-link" href="https://momentjs.com/docs/#/parsing/string-format/" target="_blank">String + Format</a><br><br><br><img alt="我开发了一个快速输入Markdown代码的插件-20240318195702413.webp" src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件-20240318195702413.webp" style="width: 491px; max-width: 100%;"><br><img alt="我开发了一个快速输入Markdown代码的插件-20240318195748256.webp" src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件-20240318195748256.webp" style="width: 438px; max-width: 100%;"><br><img alt="我开发了一个快速输入Markdown代码的插件-20240318200631362.webp" src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件-20240318200631362.webp" style="width: 611px; max-width: 100%;"><br><br><img alt="我开发了一个快速输入Markdown代码的插件（ii-plugin）-20240320003419751.webp" src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件（ii-plugin）-20240320003419751.webp" style="width: 535px; max-width: 100%;"><br><img alt="我开发了一个快速输入Markdown代码的插件（ii-plugin）-20240320003447941.webp" src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件（ii-plugin）-20240320003447941.webp" style="width: 549px; max-width: 100%;"><br><br><img src="https://cdn.jsdelivr.net/gh/wish5115/obsidian-ii-plugin@main/assets/screenshots/iiplugin.gif" referrerpolicy="no-referrer"><br><br><img alt="我开发了一个快速输入Markdown代码的插件（ii-plugin）-20240320022804702.webp" src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件（ii-plugin）-20240320022804702.webp" style="width: 744px; max-width: 100%;"><br>
<img alt="我开发了一个快速输入Markdown代码的插件（ii-plugin）-20240320004046355.webp" src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件（ii-plugin）-20240320004046355.webp" style="width: 745px; max-width: 100%;"><br>Quick insert Markdown code： 开启这个功能，就会加入常见 Markdown 代码的命令，通过 /ii 可快速输入，也可以使用命令面板输入。<br>Show doc size in status： 开启这个功能，就会在状态栏显示当前文档占用空间的大小。<br>Zen mode： 开启这个功能，就会加入禅模式的命令，通过 /iiz 或命令面板可打开禅模式，或者自定义快捷键打开。<br>Show Chinese tips： 如果开启这个功能，会在命令列表里的右侧显示中文翻译，参见预览里的图片，默认情况下会根据你的语言自动开关。<br>Show Color picker modal： 这个功能是当你设置文字颜色或背景时，弹出颜色选择对话框供你选择，这里选择了大多数人类最易辨别的 20 种常见颜色，参见：<a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/508870810" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/508870810" target="_blank">20 种不同的颜色列表</a><br>Common color codes： 这里可以自定义你的常用颜色，注意，每个颜色代码单独占一行，这里选择了大多数人类最易辨别的 20 种常见颜色，参见：<a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/508870810" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/508870810" target="_blank">20 种不同的颜色列表</a><br>Show image and link modal： 这个功能是当你插入图片或链接时，弹出对话框供你填写更多内容。<br>Show media modal： 这个功能是当你插入音视频或 Iframe 时，弹出对话框供你填写更多内容。<br>Show tips in images and link code： 这个功能，当你插入空图片或链接代码时，会在代码中用文字提示每部分含义，对新手比较友好。<br>Use only standard Markdown code： 这个功能，当你插入 Markdown 代码时，使用标准 Markdown 格式插入。<br>Date format： 这个是当你插入日期时，使用的格式，采用和官方一致的时间格式化代码，更多格式参见：<a data-tooltip-position="top" aria-label="https://momentjs.com/docs/#/parsing/string-format/" rel="noopener" class="external-link" href="https://momentjs.com/docs/#/parsing/string-format/" target="_blank">String + Format</a><br>Time format： 这个是当你插入时间时，使用的格式，采用和官方一致的时间格式化代码，更多格式参见：<a data-tooltip-position="top" aria-label="https://momentjs.com/docs/#/parsing/string-format/" rel="noopener" class="external-link" href="https://momentjs.com/docs/#/parsing/string-format/" target="_blank">String + Format</a><br>Zen mode style： 这里可以自定义你的禅模式样式，包括编辑器样式和背景样式，事实上，你可以输入任何你想要的样式。<br><br>您有任何问题都可以到 <a data-tooltip-position="top" aria-label="https://github.com/wish5115/obsidian-ii-plugin/issues" rel="noopener" class="external-link" href="https://github.com/wish5115/obsidian-ii-plugin/issues" target="_blank">obsidian-ii-plugin/issues</a> 去反馈。<br><br>git clone https://github.com/wish5115/obsidian-ii-plugin.git
cd obsidian-ii-plugin
npm install
npm run dev
复制]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/我开发了一个快速输入markdown代码和禅模式的插件(ii-plugin).html</link><guid isPermaLink="false">工具软件/obsidian/我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin).md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 02 May 2024 03:25:47 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件-20240318195702413.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/我开发了一个快速输入markdown代码的插件-20240318195702413.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[如何用 github 搭建图床（亲测有效）]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://blog.csdn.net/xdnxl/article/details/129466060" rel="noopener" class="external-link" href="https://blog.csdn.net/xdnxl/article/details/129466060" target="_blank">blog.csdn.net</a>
<br>
这里是公众号：自学编程村，关注后，回复 “书籍”，领取 1000 多本计算机书籍，涵盖语言语法、数据结构算法、AI 相关书籍、开发相关等等各种书籍，应有尽有，你总会用到。<br>
.<br>
.<br>
关注方式见主页或文章底部。想要加群可从公众号中加我 wx
<br>本节内容，将会以极为简介、快速的方式，带领你认识<a data-tooltip-position="top" aria-label="https://so.csdn.net/so/search?q=%E5%9B%BE%E5%BA%8A&amp;spm=1001.2101.3001.7020" rel="noopener" class="external-link" href="https://so.csdn.net/so/search?q=%E5%9B%BE%E5%BA%8A&amp;spm=1001.2101.3001.7020" target="_blank">图床</a>、搭建图床。<br>我的这篇文章里所用的图片，就是用此种方法所搭建的图床上传而成的（如下图）。<br><img src="https://img-blog.csdnimg.cn/9b5b036fc51c4b66aa8e622279b7145f.png" referrerpolicy="no-referrer"><br>在这里，需要用到一个工具叫 <a data-tooltip-position="top" aria-label="https://so.csdn.net/so/search?q=PicGo&amp;spm=1001.2101.3001.7020" rel="noopener" class="external-link" href="https://so.csdn.net/so/search?q=PicGo&amp;spm=1001.2101.3001.7020" target="_blank">PicGo</a>。不过它的用法很简单。一会儿就搞定了。<br>【本文约 2500 字，看完大概需要 3-4 分钟】<br><br>所谓图床，就是存储图片的服务器。<br>我们写在线文档的时候，如果我们把图片仅仅存放在本地，那么别人来去访问这个文档的时候，图片就看不到了。<br>那么，为了避免这样一种情况，使得别人在访问我的文档的时候，图片不会丢失，那么我就需要将我的图片存放到别人也可以访问的服务器上。通常，我们就称这样的服务器为图床。<br>那么，我们接下来向大家介绍 如何搭建图床.<br>我们主要向大家介绍的是在 github 上来去搭建。<br>原因：<br>
1、走出去，面向世界。
2、不需要乱七八糟的审核、验证等等。你只要有自身的账户和密码即可。总而言之，过程简单，不繁琐，免费。
<br>当然，它也是有缺点的。<br>比如它的服务器在国外，往往访问速度比较慢，容易出错等。但是，我相信这不会难倒我们程序员的 hh，况且，我也会在文章中给出相关解决的办法。<br><br>其实这个问题，相信各路大神都是可以各显神通的。<br>在这里，我提供一种方法，可以使用 steam++。这是一种不用那种代理 (tizi) 的方法。因为是 steam++，它是可以从你的联想商店里下载的！！！当然，你也可以直接上网搜。<br>需要注意一点的是，steam++ 换名字了，它叫 Watt Toolkit<br>下面是链接：<br><a rel="noopener" class="external-link" href="https://steampp.net/" target="_blank">https://steampp.net/</a><br>最最关键的一点，它十分简单易用，极其简单。不用注册，不用登录，下载好了就可以用了。<br><br>其实，下载好后你自己也就会用了。<br>这里简单再说下吧。<br><img src="https://img-blog.csdnimg.cn/a7cc8fc3ba25416ebe20c0507b6f4016.png" referrerpolicy="no-referrer"><br>用法就是这样。所以说它是真的简单。<br>启用加速后，进入 github，我们现在来正式开始搭建图床。<br><br>我们接下来要做的事情，具体来说，就是在 github 里建立一个代码仓库，然后用该仓库用作我们图床的服务器存储。<br>具体做法：<br><br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111621099.png" referrerpolicy="no-referrer"><br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111627486.png" referrerpolicy="no-referrer"><br><br>右上角<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111629237.png" referrerpolicy="no-referrer"><br>然后，下拉，直到左侧到底，选择 Developer settings<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111631448.png" referrerpolicy="no-referrer"><br>然后选择经典的 Tokens 就可以<br><img src="https://img-blog.csdnimg.cn/img_convert/658f1b98193eaf2b60d6a46bc7b2487f.png" referrerpolicy="no-referrer"><br>然后创建 Tokens<br>[外链图片转存失败, 源站可能有防盗链机制, 建议将图片保存下来直接上传 (img-Q8WOVYAr-1678526006049)(null)]<br>接下来它可能跳转到登录界面让你输入密码，该怎么输入就输入即可。就是你此 github 用户的登录密码。<br>然后可以给令牌 (token) 做个 Note(标记)，然后选择令牌 (token) 截止时间。这里不建议选永久。基本是该图床你用到多久就选多久即可。<br>（你要是真选永久也行）<br><img src="https://img-blog.csdnimg.cn/img_convert/57184c751df65b6161b881e31bb0ebea.png" referrerpolicy="no-referrer"><br>紧接着把这个 repo 全部选上：<br><img src="https://img-blog.csdnimg.cn/img_convert/9dc2662beeb5715784bf11c69d338241.png" referrerpolicy="no-referrer"><br>然后拉到底部，选择创建就行了。<br><img src="https://img-blog.csdnimg.cn/img_convert/3857284c359666ea3ec43f12a23fadfd.png" referrerpolicy="no-referrer"><br>这个 Token 是你的服务器（即你的账户下的 github 服务器）的令牌，暂时和你的仓库还没有什么关系。<br>然后创建完以后，就会出现一串 Token 字符串，你把这个 Token 数字复制、保存下来 (可以新创一个 txt 文件，保存到里面)。因为你可能一会儿就见不到了。<br>2.3 使用 PicGo 来实现图片上传<br><br>首先要说一下，PicGo 是一款软件。我们就是用它来实现图片上传的。所以说，它是核心软件。<br>下载方法也比较简单。这里推荐山东大学的镜像网站：<br><a rel="noopener" class="external-link" href="https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo/v2.3.1/" target="_blank">https://mirrors.sdu.edu.cn/github-release/Molunerfinn_PicGo/v2.3.1/</a><br>进去之后，选择这个下载就行。（基本上这种都是你看哪种下载的人多就选哪种 hhh）<br>[外链图片转存失败, 源站可能有防盗链机制, 建议将图片保存下来直接上传 (img-2rtwdIPm-1678526006036)(null)]<br>点进去，然后下载。<br>按照指引下载、安装即可。<br>安装完之后打开，然后进行配置。<br><br>1、选择【图床设置】-&gt;【Github】<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111646625.png" referrerpolicy="no-referrer"><br>2、然后进行配置：<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111647023.png" referrerpolicy="no-referrer"><br>具体配置方法：<br>（1）设定仓库名，实际上就是用户名 + 仓库名。这个仓库就是你刚刚在 2.1 中新建的仓库。<br>具体来说，就是这个东西：<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111649599.png" referrerpolicy="no-referrer"><br>（2）设定分支名：就是你的仓库在哪个分支里，就填哪个分支。一般有 main 分支，master 分支等。我这里是自己新创建的一个 img 分支。你填自己所在的分支就好。关于分支，具体来说，可以在这里查看：<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111651341.png" referrerpolicy="no-referrer"><br>（3）设定 Token：就是刚刚在 2.2 中我们复制的 Token 字符串。将其填进去即可。<br>（4）设定存储路径，一般来说，它可以是你项目仓库中的一个文件夹。我们这里就统一设置成了 img/<br><img src="https://img-blog.csdnimg.cn/img_convert/5ce43deeaa318858a9c52716c930e4d1.png" referrerpolicy="no-referrer"><br>（5）设置自定义域名。这个是比较关键的。我们可以用一个免费的加速域名作为我们自定义域名。<br>那么你所设置的就应当为 <a rel="noopener" class="external-link" href="https://cdn.jsdelivr.net/gh/" target="_blank">https://cdn.jsdelivr.net/gh/</a> + 你的账户名 + 你的仓库名 @你的分支名。比如，我上面的就是 <a rel="noopener" class="external-link" href="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img" target="_blank">https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img</a> 按照需要改成你自己的。<br>需要注意的是，这里一定要设置成 @，而不要设置成 / 我也是花了很长很长时间才搞明白。。。设置成 / 以后，你会惊奇地发现，它在你的 typora 里面显示不了。。。<br>配置完以后，就可以点击确定，然后也可以将其设置为默认图床。<br><br>上传方式很简单。<br>直接拖拽就可以了。<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111701009.png" referrerpolicy="no-referrer"><br>【ps：在上传的时候，一定要注意，把 steam++ 给关了】<br>然后，我们能够在相册中看到我们已经上传的图片，可以查看、复制已经上传的图片的 URL，同时也可以将上传的图片删除。<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111703788.png" referrerpolicy="no-referrer"><br>然后，我们也可以对 PicGo 进行一系列的设置。<br>比如启用时间戳，这样在多次上传同一张图片的时候就不会有问题了。<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111706586.png" referrerpolicy="no-referrer"><br>比如可以开启日志功能 (默认开启)，这样我们上传失败可以通过查看日志来具体查看是什么原因。<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111706550.png" referrerpolicy="no-referrer"><br>2.4 设置 Typora 实现自动上传<br>这一点有个前提，就是你有那种代理呦 hhh，因为我们这里用 steam++ 无法实现上传。否则，你可能会因为超时，而无法实现自动上传，只能手动将图片移到 PicGo 里面，然后再将 URL 复制到 Typora 里面啦~~<br>1、首先，点击【文件】-&gt;【偏好设置】<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111709336.png" referrerpolicy="no-referrer"><br>2、再次，选择【图像】。<br>然后按照下图所示，插入图片时选择上传图片。然后在上传服务内选择 PicGo，并选择 PicGo.exe 的路径。<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111710320.png" referrerpolicy="no-referrer"><br>这里的可以这样来去配置：<br><img src="https://cdn.jsdelivr.net/gh/jianxiangwudi/MyPic@img/img/202303111711193.png" referrerpolicy="no-referrer"><br>然后这样的话，你将你的截图直接粘贴到 Typora 里面，你的 Typora 会将链接直接通过 PicGo 上传到你 Github 服务器的仓库中。然后别人和你就都可以通过访问这个链接来实现图片共享啦。这样，你在发送你的文件的时候，图片就不会丢失了。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/如何用-github-搭建图床（亲测有效）.html</link><guid isPermaLink="false">工具软件/obsidian/如何用 github 搭建图床（亲测有效）.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:21:56 GMT</pubDate><enclosure url="https://img-blog.csdnimg.cn/9b5b036fc51c4b66aa8e622279b7145f.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://img-blog.csdnimg.cn/9b5b036fc51c4b66aa8e622279b7145f.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床]]></title><description><![CDATA[ 
 <br>痛点：<br>
github 网速慢，不稳定<br>
gitee 不能做图床]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/gitee+github+jsdelivr+picgo+image-upload-tool打造个人免费图床.html</link><guid isPermaLink="false">工具软件/obsidian/gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:21:44 GMT</pubDate></item><item><title><![CDATA[dataview排序]]></title><description><![CDATA[ 
 <br><br>/**
 * Return a sorted array sorted by the given key; an optional comparator can be provided, which will
 * be used to compare the keys in leiu of the default dataview comparator.
 */
sort&lt;U&gt;(key: ArrayFunc&lt;T, U&gt;, direction?: "asc" | "desc", comparator?: ArrayComparator&lt;U&gt;): DataArray&lt;T&gt;;
复制<br>这个函数签名表示一个排序方法，它接受三个参数：<br>
<br>
key (ArrayFunc&lt;T, U&gt;): 这是一个从数组元素类型 T 映射到比较键类型 U 的函数。例如，如果你有一个对象数组，这个函数可以用来提取每个对象中的某个属性（比如 ctime 或 title）作为排序的依据。

<br>
direction ("asc" | "desc"，可选): 指定排序的方向，可以是 "asc"（升序）或 "desc"（降序）。默认可能是根据实现决定的，但通常没有明确指定时默认为升序。

<br>
comparator (ArrayComparator&lt;U&gt;，可选): 这是一个可选的比较器函数，类型为 ArrayComparator&lt;U&gt;，用于自定义如何比较由 key 函数提取出的键值 U。这个参数允许你提供自己的逻辑来决定两个键值之间的大小关系，而不是使用默认的比较逻辑（通常是基于 &lt; 和 &gt; 操作符的比较）。

<br><br>假设你有以下数据结构和排序需求：<br>interface Item {
    id: number;
    name: string;
    customValue: number;
}

const items: Item[] = [
    { id: 1, name: "Item 2", customValue: 10 },
    { id: 2, name: "Item 1", customValue: 5 },
    // ...
];

// 自定义比较器，例如，我们想让customValue相等时，根据id降序
const customComparator = (a: number, b: number): number =&gt; {
    if (a === b) {
        // 当customValue相等时，根据id降序排列
        return b - a;
    } else {
        return a - b; // 否则，常规升序排列
    }
};

// 调用排序方法，按customValue排序，方向为升序，但使用自定义比较器
const sortedItems = items.sort((item) =&gt; item.customValue, "asc", customComparator);
复制<br>在这个例子中，customComparator 作为第三个参数传递给了 sort 方法，它会在比较 customValue 字段时被用到，允许你控制在特定条件下的排序逻辑，比如当 customValue 相等时，进一步根据 id 进行排序。<br><br>要使用上述函数实现先按 customValue 降序排列，再在 customValue 相同的情况下按 name 升序排列，你需要定义一个复合的排序逻辑。在这种情况下，你可以直接在 key 函数中实现这个逻辑，或者创建一个复合键（combination key）来同时考虑两个排序条件。然而，由于提供的函数签名不直接支持复合键或多重排序条件作为单独参数，我们可以采取一种变通方式，即在 comparator 参数中实现这个复合逻辑。这里是如何做的：<br>interface Item {
    id: number;
    name: string;
    customValue: number;
}

const items: Item[] = [
    { id: 1, name: "Item 2", customValue: 10 },
    { id: 2, name: "Item 1", customValue: 5 },
    // 其他项...
];

// 自定义比较器，实现复合排序逻辑
const compositeComparator = (a: Item, b: Item): number =&gt; {
    // 首先比较customValue，降序
    if (a.customValue !== b.customValue) {
        return b.customValue - a.customValue; // 降序
    }
    // 如果customValue相同，则按name升序
    return a.name.localeCompare(b.name); // 升序
};

// 调用排序方法，仅需自定义比较器即可实现复合排序
const sortedItems = items.sort(compositeComparator);

console.log(sortedItems);
复制<br>在这个例子中，我们没有直接使用 sort 函数签名中提供的第三个参数 comparator（因为我们没有直接比较单一的键值），而是直接定义了一个比较函数 compositeComparator，它接收两个 Item 对象并比较它们的 customValue（降序）以及在 customValue 相同时比较它们的 name（升序）。然后，我们直接使用这个比较器对 items 进行排序，而不需要显式指定 key 或 direction，因为我们的比较逻辑已经覆盖了这两个方面。<br><br>如果不支持 TypeScript 的 interface，你可能是在使用原生 JavaScript 或者一个不支持接口定义的环境。在这种情况下，你可以直接使用对象字面量来定义你的数据结构，并通过传统的 JavaScript 函数来实现排序逻辑。下面是如何在不使用 interface 的情况下实现同样的排序需求：<br>// 数据模型示例
const items = [
    { id: 1, name: "Item 2", customValue: 10 },
    { id: 2, name: "Item 1", customValue: 5 },
    // 其他项...
];

// 复合比较器函数，用于实现复合排序逻辑
function compositeComparator(a, b) {
    // 首先比较customValue，降序
    if (a.customValue !== b.customValue) {
        return b.customValue - a.customValue; // 降序
    }
    // 如果customValue相同，则按name升序
    return a.name.localeCompare(b.name); // 升序
}

// 调用数组的sort方法，并传入比较器函数
const sortedItems = items.sort(compositeComparator);

console.log(sortedItems);
复制<br>这段代码展示了如何在不使用 TypeScript 接口的情况下，直接使用 JavaScript 对象和函数来定义数据结构和排序逻辑。通过定义一个比较函数，我们依然能够实现在多个条件下的复合排序。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/dataview排序.html</link><guid isPermaLink="false">工具软件/obsidian/dataview排序.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 15 May 2024 02:24:52 GMT</pubDate></item><item><title><![CDATA[checkCallback判断逻辑优化]]></title><description><![CDATA[ 
 checkCallback函数在按下快捷键和执行命令时被调用，返回结果影响命令是否显示，第一次传入true，第二次传入false。优化逻辑可以简化判断条件和提高复用性。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/checkcallback判断逻辑优化.html</link><guid isPermaLink="false">工具软件/obsidian/checkCallback判断逻辑优化.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 21 Mar 2024 15:59:05 GMT</pubDate></item><item><title><![CDATA[WebDAV在各端的软件有哪些]]></title><description><![CDATA[ 
 <br>在 Mac、Windows、iPhone、Android 平台上，有许多应用支持 WebDAV 协议并可实现文件实时同步，以下是一些例子：<br><br>
<br>Finder: macOS 内置支持 WebDAV，可以直接将 WebDAV 服务器挂载为网络卷。
<br>Transmit: 这是一款高级 FTP/SFTP 客户端，也支持 WebDAV，可以实现文件的实时上传与同步。
<br>Cyberduck: 免费开源的 FTP 和 WebDAV 客户端，支持文件浏览和同步。
<br><br>
<br>File Explorer: Windows 系统自带的文件浏览器可以通过添加网络位置的方式连接 WebDAV 服务器。
<br>BitKinex: 功能全面的多协议文件传输客户端，支持 WebDAV 同步。
<br>NetDrive: 可以将 WebDAV 服务器映射为本地磁盘驱动器，并实现自动同步。
<br>WebDrive: 类似 NetDrive，也能将 WebDAV 资源映射为本地硬盘，并支持实时同步。
<br><br>
<br>Documents by Readdle: 支持多种云存储服务，包括 WebDAV，可以进行文件管理和同步。
<br>iCloud Drive（间接方式）: iOS 设备可以通过 iCloud Drive 连接至支持 WebDAV 的服务，但不是直接支持 WebDAV。
<br>GoodReader: 一款流行的 PDF 阅读器，也支持 WebDAV 连接，可用于文件同步。
<br><br>
<br>Solid Explorer: 这是一个文件管理器，内建 WebDAV 客户端，支持同步功能。
<br>SyncMate: 一个跨平台的同步工具，可在 Android 设备上实现与 WebDAV 服务器的同步。
<br>FolderSync: 提供多种云服务的同步选项，其中包括 WebDAV，可以设定自动同步或手动同步。
<br>以上列举的是一部分常见且受欢迎的 WebDAV 客户端应用，它们通常都支持文件的实时更新与同步。不过，请注意，应用的具体功能和同步策略可能会随着版本更新而发生变化，因此建议在选择应用时查阅最新版本的官方说明。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/webdav在各端的软件有哪些.html</link><guid isPermaLink="false">工具软件/obsidian/WebDAV在各端的软件有哪些.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 21 Mar 2024 21:04:36 GMT</pubDate></item><item><title><![CDATA[为什么选择它]]></title><description><![CDATA[ 
 Unison是一个开源、免费、轻量级并具有多平台支持的文件同步工具。它基于事件同步，支持增量和全量同步、本地和远程同步等。Unison的安装和使用都非常简单，只需按照文档设置参数即可。通过设置不同的选项，可以实现快速、静默、自动化的同步，并忽略特定的文件或目录。使用Unison可以进行双向同步和单向同步，还可以模拟增量和全量同步。具体的详细使用方法可以参考官方文档。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/unison实现文件双向同步的利器.html</link><guid isPermaLink="false">工具软件/obsidian/Unison实现文件双向同步的利器.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 01 May 2024 14:45:09 GMT</pubDate></item><item><title><![CDATA[效果]]></title><description><![CDATA[ 
 安装 Solarized 主题，开启深色模式，同时应用 common.css 和 Solarized-dark.css 代码片段以获得所需效果。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/solarized深色主题+代码片段模仿logseq主题风格.html</link><guid isPermaLink="false">工具软件/obsidian/Solarized深色主题+代码片段模仿Logseq主题风格.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 25 Mar 2024 05:28:34 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/solarized深色主题+代码片段模仿logseq主题风格-20240314190457160.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/solarized深色主题+代码片段模仿logseq主题风格-20240314190457160.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[当前同步的痛点是什么 ？]]></title><description><![CDATA[ 
 RemotelySave+InfiniCloud是当前最简单且相对安全的Obsidian同步方案之一，通过使用webdav和InfiniCloud解决了安装软件复杂、网速慢、数据同步延迟等问题。推荐使用RemotelySave插件在手机端操作，在PC端几乎不需要任何干预。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/remotelysave+infinicloud最简单的多端同步方案实践.html</link><guid isPermaLink="false">工具软件/obsidian/RemotelySave+InfiniCloud最简单的多端同步方案实践.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 16 Mar 2024 05:59:28 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/remotelysave+infinicloud最简单的多端同步方案实践-20240310200817581.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/remotelysave+infinicloud最简单的多端同步方案实践-20240310200817581.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[为什么是它]]></title><description><![CDATA[ 
 Obsidian笔记是一款支持多平台、Markdown、代码高亮、双链、白板和日记的开放格式存储的笔记软件，具有丰富的插件和自定义功能，能满足程序员的各种需求。]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/obsidian最适合程序员的笔记软件.html</link><guid isPermaLink="false">工具软件/obsidian/Obsidian最适合程序员的笔记软件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 14 Mar 2024 13:38:53 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/obsidian最适合程序员的笔记软件-20240312170508938.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/obsidian最适合程序员的笔记软件-20240312170508938.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Obsidian 社区插件]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/" target="_blank">pkmer.cn</a>
<br>
Obsidian 社区插件推荐，优秀插件介绍和使用方法——Obsidian 允许其他开发者编写第三方插件来扩展 Obsidian 的功能。
<br>obsidian 社区插件<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/authors/os" rel="noopener" class="external-link" href="https://pkmer.cn/authors/os" target="_blank">OS</a><br>于&nbsp; 2024-01-23 17:36 &nbsp;发布<br>分享<br><br>插件 ID：obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6 obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6 obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6：Obsidian 社区插件推荐，优秀插件介绍和使用方法<br>Obsidian 允许其他开发者编写第三方插件来扩展 Obsidian 的功能。你可以把这点理解清楚 Chrome 或者 Edge 浏览器一样的扩展。<br>Obsidian 最强大的地方在于插件系统，即使是官方的一些功能，也是通过插件来实现的。因此插件可以按维护者分为核心插件和社区插件两类。核心插件由官方维护，随着 Obsidian 本体进行发行，社区插件由社区插件开发者维护，通过 Obsidian 插件市场进行发布。<br>插件机制提供了极大的自由度，用户可以随意搭配使用，开启或关闭，社区插件可以不安装，甚至可以延迟加载，按需加载。这充分考虑到了不同的人有不同的需求，保证每个人使用 Obsidian 都是定制化，轻量化的。带来自由度的同时，需要自己控制功能的复杂度，并不是插件越多越好，功能越多越好，按需使用在无限制的自由度中才能获得真正的自由。社区相当多的贡献者提供开箱即用库，插件测评，教程文档等分享，适度交流可能会有比较大的收益。<br><br><br>默认情况下，Obsidian 将打开安全模式，以保护用户免受潜在的伤害。在安全模式下，Obsidian 不会运行任何第三方插件。<br>
提示
第三方插件可以访问你电脑上的文件，连接互联网，甚至安装额外的程序。了解更多关于插件安全性的信息，请阅读 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs" target="_blank">此部分</a>。
<br>为了安装第三方插件，你需要在 设置 -&gt; 第三方插件 -&gt; 安全模式 中关闭安全模式。<br><br>禁用安全模式后，你可以在 设置 -&gt; 第三方插件 -&gt; 社区插件 -&gt; 浏览 中打开第三方插件列表页面，从而找到由社区成员开发的第三方插件。<br>插件安装后，你可以在 设置 -&gt; 第三方插件 下找到已安装的插件。插件需要启用才能生效。当然，你也可以在那里卸载它们。<br>
无法访问安装第三方插件

<br>可以使用 PKMer 社区提供的 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/pkmer-market/pkmer" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/pkmer-market/pkmer" target="_blank">pkmer</a> 插件

<br><br>Obsidian 非常重视你的数据安全，这使得我们非常重视安全问题，第三方插件的安全性也包括在内。<br>由于框架的技术原因，Obsidian 官方 和 PKMer 都无法限制插件的权限或访问级别。同时，由于 Obsidian 是一个免费软件，目前我们仍没有精力人工审查每个插件。<br>值得庆幸的是，Obsidian 拥有一个氛围良好的社区，因此我们可以依靠社区信任来确保第三方插件的安全性。<br>一般来说，你可以信任在社区中流行的大多数插件。为了进一步确保插件的安全性，我们要求所有社区插件在 GitHub 上开源。 但是，如果你正在处理重要的数据，我们仍建议你在安装插件前检查插件代码，从而更好地保证数据安全。 你可以在插件的详细信息页面找到插件的 Github 仓库地址。<br>如果你发现第三方插件有安全漏洞，你可以通过在 GitHub 上添加问题来告知插件作者。如果你认为某个插件是恶意的，请联系我们，让我们调查并删除这个插件。<br><br>来自社区各个达人的使用技巧 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7" target="_blank">Obsidian 使用技巧</a><br><br>无论是初入江湖的软件新手，还是经验丰富的江湖老手，面对一个全新的软件时，都难免会遇到一些问题。我们深知，Obsidian 插件日新月异，每个插件有其独特的特点和使用方法。<br>遇到问题时，我们也为您提供了一些简单又实用的描述，帮助您高效地解决问题。我们相信，无论您是新手还是老手，在经过一些练习和摸索后，都能够掌握使用该软件所需的技能和技巧，并在其中体验到乐趣和便捷。<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/pkmer-market/pkmer" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/pkmer-market/pkmer" target="_blank">pkmer</a>：PKMer 不需要魔法，完美解决 Obsidian 无法加载第三方插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian42-brat" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian42-brat" target="_blank">obsidian42-brat</a>：让你可以安装未上架的插件、主题
<br><br>这些插件可直接优化或提升 Obsidian 笔记编辑的用户体验。它们一般会直接应用于笔记编辑窗口，使 Obsidian 的操作界面更加直观、可视化，从而提升用户的使用体验。许多插件中还集成了 callout、可视化操作及浮动目录等功能，让你更容易地浏览、查看和编辑笔记内容。所有这些特性的集成对于 Obsidian 用户来说，可以让用户的操作过程变得更为简单、直观，同时也增加了对用户的使用体验的提升。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-global-search-and-replace" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-global-search-and-replace" target="_blank">obsidian-global-search-and-replace</a>：给 Obsidian 全库进行文本替换
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-typing-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-typing-obsidian" target="_blank">easy-typing-obsidian</a>：包含编辑时自动格式化文本和符号编辑增强。自动格式化文本对文档的格式进行规范化，并且美化文档的观感，强优化用户的编辑体验
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-latex-suite" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-latex-suite" target="_blank">obsidian-latex-suite</a>：通过片段、文本扩展和编辑器增强功能，使排版 LaTeX 数学与手写一样快
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dynamic-highlights" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dynamic-highlights" target="_blank">obsidian-dynamic-highlights</a>：根据正则表达式，为笔记内容增加高亮和样式；另外也有一篇文章分享了 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docsghlights-%E6%8F%92%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docsghlights-%E6%8F%92%E4%BB%B6%E7%9A%84%E5%87%A0%E7%A7%8D%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF" target="_blank">Dynamic-Highlights 插件的几种使用场景</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/remember-cursor-position" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/remember-cursor-position" target="_blank">remember-cursor-position</a>：记住每个文件光标和滚动位置
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-remember-file-state" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-remember-file-state" target="_blank">obsidian-remember-file-state</a>：
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cm-typewriter-scroll-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cm-typewriter-scroll-obsidian" target="_blank">cm-typewriter-scroll-obsidian</a>：打字机风格的滚动，使视图保持在编辑器的中心
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/typewriter-mode" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/typewriter-mode" target="_blank">typewriter-mode</a>：使光标所在行始终处于屏幕某处，降低用 Obsidian 写中长文时用鼠标滚动调整页面的频繁
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/number-headings-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/number-headings-obsidian" target="_blank">number-headings-obsidian</a>：给笔记中的标题自动编号，以及动态目录
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/longform" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/longform" target="_blank">longform</a>：一款专为写作者和写作团队而设计的插件。它可以帮助用户创建和管理大型文学项目，例如书籍、小说、论文等。它可以将大文本拆分成更小的部分，例如章节、段落和场景，并提供基本编辑和组织工具。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/weather-fetcher" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/weather-fetcher" target="_blank">weather-fetcher</a>：来获取和插入当前的天气到笔记编辑器的插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-chat-view-qq" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-chat-view-qq" target="_blank">obsidian-chat-view-qq</a>：保存 QQ 消息到 Obsidian 中，并保持 QQ 的会话格式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cm-show-whitespace-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cm-show-whitespace-obsidian" target="_blank">cm-show-whitespace-obsidian</a>：在编辑器中显示空白和制表符
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/fantasy-name" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/fantasy-name" target="_blank">fantasy-name</a>：插入一个随机组合出来的人名
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/html-tabs" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/html-tabs" target="_blank">html-tabs</a>：在笔记中创建和渲染选项卡和标签面板
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/slash-commander" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/slash-commander" target="_blank">slash-commander</a>：定制 slash 命令列表。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/vscode-editor" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/vscode-editor" target="_blank">vscode-editor</a>：提供查看和编辑各种代码文件和代码块的功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/prozen" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/prozen" target="_blank">prozen</a>：禅模式启动！
<br><br>描述格式化是指通过使用不同的格式技巧和标点符号排版等方式来提高文本的可读性和视觉效果，使得文本更清晰易读、更美观易懂，同时也提高了文本质量和可读性。在 Obsidian 中，有多种插件可以帮助用户对文本进行描述格式化。<br>这些插件提供了不同的描述格式化功能，使用户能够更方便地将文本进行结构化、清晰化、排版美化等操作，提高文本质量和可读性。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-pangu" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-pangu" target="_blank">obsidian-pangu</a>：快速格式化文档
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-regex-pipeline" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-regex-pipeline" target="_blank">obsidian-regex-pipeline</a>：让用户用自定义的正则表达式进行格式化文本的插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-typing-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-typing-obsidian" target="_blank">easy-typing-obsidian</a>：自动格式化你的中英文标点输入格式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/prettify" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/prettify" target="_blank">prettify</a>：修复并格式化丑陋的 Markdown
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/editing-toolbar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/editing-toolbar" target="_blank">editing-toolbar</a>：添加一个浮动编辑栏，增强 Obsidian 的可视化编辑体验。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-comments" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-comments" target="_blank">obsidian-comments</a>：为笔记增加批注或评论。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/highlightr-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/highlightr-plugin" target="_blank">highlightr-plugin</a>：将小而美的高亮菜单添加到了 Obsidian 中，通过所见即所得的方式，为笔记内容中文本增加高亮颜色。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/style-text" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/style-text" target="_blank">style-text</a>：自定义 CSS 样式应用于笔记中的选定文本
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cmenu-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cmenu-plugin" target="_blank">cmenu-plugin</a>：提供一个 mini 工具栏，以获得更流畅的写作 / 编辑体验✍🏽
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E5%A4%96%E8%A7%82/css-%E7%89%87%E6%AE%B5/obsidian%E6%A0%B7%E5%BC%8F-%E7%89%B9%E6%AE%8A%E6%A0%87%E7%AD%BE-%E8%AE%A9markdown%E7%9A%84%E6%96%87%E6%9C%AC%E5%A4%9A%E5%BD%A9%E5%A4%9A%E8%89%B2" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E5%A4%96%E8%A7%82/css-%E7%89%87%E6%AE%B5/obsidian%E6%A0%B7%E5%BC%8F-%E7%89%B9%E6%AE%8A%E6%A0%87%E7%AD%BE-%E8%AE%A9markdown%E7%9A%84%E6%96%87%E6%9C%AC%E5%A4%9A%E5%BD%A9%E5%A4%9A%E8%89%B2" target="_blank">Obsidian 样式 - 特殊标签 - 让 Markdown 的文本多彩多色</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/control-characters" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/control-characters" target="_blank">control-characters</a>：显示隐藏的字符
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E5%A4%9A%E6%A0%8F%E5%B8%83%E5%B1%80" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E5%A4%9A%E6%A0%8F%E5%B8%83%E5%B1%80" target="_blank">Obsidian 如何制作多栏布局</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E8%83%BD%E5%83%8F%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0%E6%A0%B7%E5%88%86%E6%A0%8F%E5%98%9B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E8%83%BD%E5%83%8F%E5%85%B6%E4%BB%96%E7%AC%94%E8%AE%B0%E6%A0%B7%E5%88%86%E6%A0%8F%E5%98%9B" target="_blank">Obsidian 能像其他笔记样分栏嘛</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-columns" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-columns" target="_blank">obsidian-columns</a>：支持多种方式来设定分栏目
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/multi-column-markdown" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/multi-column-markdown" target="_blank">multi-column-markdown</a>：在 Obsidian 的预览模式下创建包含多列内容的 Markdown 文档
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E5%A4%96%E8%A7%82/css-%E7%89%87%E6%AE%B5/obsidian%E6%A0%B7%E5%BC%8F-mcl-multi-column" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E5%A4%96%E8%A7%82/css-%E7%89%87%E6%AE%B5/obsidian%E6%A0%B7%E5%BC%8F-mcl-multi-column" target="_blank">Obsidian 样式 - MCL Multi Column</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-timeline" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-timeline" target="_blank">obsidian-timeline</a>：用于构建漂亮的时间轴 / 时间线
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/creases" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/creases" target="_blank">creases</a>：给 Obsidian 的标题增加折叠和展开的功能。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/lapel" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/lapel" target="_blank">lapel</a>：在标题旁边显示标题等级
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/number-headings-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/number-headings-obsidian" target="_blank">number-headings-obsidian</a>：给笔记中的标题自动编号，以及动态目录
<br><br>这些插件致力于大幅强化 Obsidian 笔记中图片的操作体验，并提供诸多实用功能，例如方便地查看和管理笔记中的图片，将网络图片集成到本地，等等。这些插件都极大地丰富了 Obsidian 用户的图片使用体验，使用户可以更加方便地在笔记中插入、编辑和排序图片，并提高他们的使用效率。此外，它们还提供了许多高级功能和实用性的工具，例如图片大小调整、编辑、居中、旋转，以及自动生成文件名等。每一个细节都经过了认真优化，让用户可以获得更为舒适顺畅的图片使用体验。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-toolkit" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-toolkit" target="_blank">obsidian-image-toolkit</a>：提供笔记中查看图片的基本操作
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/awesome-image" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/awesome-image" target="_blank">awesome-image</a>：提供笔记中查看图片的基本操作
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-charts" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-charts" target="_blank">obsidian-charts</a>：为 Obsidian 中的笔记增加一个图表功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/copy-image-and-url-context-menu" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/copy-image-and-url-context-menu" target="_blank">Copy-Image-and-URL-context-menu</a>：为图片增加右键菜单，并提供了一些新功能，包括复制图像，复制网址等。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-captions" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-captions" target="_blank">obsidian-image-captions</a>：给图片增加说明题注，更新，功能更多
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-caption" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-caption" target="_blank">obsidian-image-caption</a>：给图片增加说明题注
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-local-images-plus" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-local-images-plus" target="_blank">obsidian-local-images-plus</a>：将你粘贴的网络图片，自定下载到本地并插入到你粘贴的位置
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-link" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-link" target="_blank">obsidian-file-link</a>：可以很容易地将文件链接添加到笔记中，提供界面化的选择文件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/mousewheel-image-zoom" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/mousewheel-image-zoom" target="_blank">mousewheel-image-zoom</a>： 能够通过按住可配置键（默认为左 alt），在编辑 / 阅读模式下通过滚轮来调节图像的大小
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-caption" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-caption" target="_blank">obsidian-image-caption</a>：为你笔记中的图片添加标题、说明
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%9C%A8obsidian%E4%B8%AD%E4%B8%BA%E5%9B%BE%E7%89%87%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%9C%A8obsidian%E4%B8%AD%E4%B8%BA%E5%9B%BE%E7%89%87%E6%B7%BB%E5%8A%A0%E6%B3%A8%E9%87%8A" target="_blank">在 Obsidian 中为图片添加注释</a>：社区实践多种方法解决图片注释问题
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/copy-image-and-url-context-menu" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/copy-image-and-url-context-menu" target="_blank">Copy-Image-and-URL-context-menu</a>：使得图像可以在阅读模式直接复制
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-camera" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-camera" target="_blank">obsidian-camera</a>：给你的笔记增加照相记录功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E5%92%8C%E7%BE%8E%E5%8C%96%E7%9B%AE%E5%BD%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E5%92%8C%E7%BE%8E%E5%8C%96%E7%9B%AE%E5%BD%95" target="_blank">Obsidian 如何生成和美化目录</a>
<br><br>这些插件和大纲、目录有关，它们提供了：快速生成大纲、目录；快速定位目录；快速修改挪动不同笔记标题下内容的能力。活用这些插件，有助于我们更好的组织和梳理自己笔记的核心脉络。<br>如果你对大纲和目录希望快速了解是否适合你，可以看这篇横向对比 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E5%92%8C%E7%BE%8E%E5%8C%96%E7%9B%AE%E5%BD%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/obsidian%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E5%92%8C%E7%BE%8E%E5%8C%96%E7%9B%AE%E5%BD%95" target="_blank">Obsidian 如何生成和美化目录</a><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dynamic-toc" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dynamic-toc" target="_blank">obsidian-dynamic-toc</a>：帮助你在笔记中生成对应的目录
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-plugin-toc" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-plugin-toc" target="_blank">obsidian-plugin-toc</a>：帮助你在笔记中生成对应的目录
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/any-block/any-block" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/any-block/any-block" target="_blank">any-block</a>：个简易而又强大的块编辑器，您可以通过某种方式灵活地创建一个 “块”。它还提供了一些有用的功能，比如&nbsp;列表转表格
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/floating-toc" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/floating-toc" target="_blank">floating-toc</a>：在笔记一侧生成悬浮目录，效果近似你在其他在线文档中看到的一样
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-quiet-outline" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-quiet-outline" target="_blank">obsidian-quiet-outline</a>：增强大纲插件，按需自动展开大纲
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-outliner" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-outliner" target="_blank">obsidian-outliner</a>：为 Obsidian 的大纲添加快捷操作
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/waypoint" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/waypoint" target="_blank">waypoint</a>：快速创建笔记 MOC 结构
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-list-callouts" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-list-callouts" target="_blank">obsidian-list-callouts</a>：在大纲列表上，通过设定的字符符号，生成对应的强化图标和强调高亮色
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/oin-gotoheading" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/oin-gotoheading" target="_blank">oin-gotoheading</a>：提供在笔记标题之间快速跳转的操作
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-zoom" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-zoom" target="_blank">obsidian-zoom</a>：通过快捷键，快速聚焦到大纲。并在笔记顶部生成标题的面包屑导航，该面包屑可以交互来定位大纲内容
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/automatic-list-styles" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/automatic-list-styles" target="_blank">automatic-list-styles</a>：不借用主题和 css 片段前提下。来实现有序列表，增加不同的层级的前缀符号样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/list-style" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/list-style" target="_blank">list-style</a>：在文本行内通过标准的 list style typs，来实现有序列表的多种不同的层级、样式的前缀符号样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tracker" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tracker" target="_blank">obsidian-tracker</a>：将笔记中的变化收集起来，并且提供不同预设的图形分析模板
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/order-list" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/order-list" target="_blank">order-list</a>：添加 “排序选定列表” 命令，以按末尾的数字对所选列表进行排序。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-party" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-party" target="_blank">obsidian-party</a>：Obsidian 上的 party.js 实现。在您的笔记中创建五彩纸屑、火花，甚至自定义效果！
<br><br>这些 Obsidian 插件为用户提供了丰富的功能和工具，其中包括添加简单日历视图管理、多视图项目管理、提醒待办事项、自然语言插入时间戳、基于进度条的任务管理、看板制作、日程规划、任务归类和可视化最后编辑时间等。这些插件的功能差异明显，可以根据个人或组织需求灵活选择使用，让你的事务管理事半功倍。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs" target="_blank">thino</a>：memos 全新版本 ~tada~
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docsemos" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docsemos" target="_blank">obsidian-memos</a>：提供一个简易轻巧的笔记和灵感收集方式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/card-board" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/card-board" target="_blank">card-board</a>：看板任务管理插件，不需要你特别维护看板数据，而是自动收集所有笔记中的任务
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/calendar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/calendar" target="_blank">calendar</a>：为 Obsidian 添加一个简单日历功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-projects" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-projects" target="_blank">obsidian-projects</a>：提供多视图的项目管理，包括 表格、看板、日历、画廊等多种视图样式，以适应不同组织需求
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-reminder-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-reminder-plugin" target="_blank">obsidian-reminder-plugin</a>：为 Markdown 中的待办事项，添加提醒管理。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tasks-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tasks-plugin" target="_blank">obsidian-tasks-plugin</a>：Obsidian 增强任务管理，为任务增加优先级，计划日期，完成日期等自动化和图形化操作界面。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-checklist-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-checklist-plugin" target="_blank">obsidian-checklist-plugin</a>：将所有笔记待办清单合并到一个视图中，你可以在这个视图种管理和完成相关的任务
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/progressbar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/progressbar" target="_blank">progressbar</a>：主要作用是将 progressbar 格式的代码块渲染为基于时间或手动的进度条
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-task-progress-bar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-task-progress-bar" target="_blank">obsidian-task-progress-bar</a>： 简洁易用的任务统计和完成查看工具
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-kanban" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-kanban" target="_blank">obsidian-kanban</a>：在 Obsidian 制作看板，可以连接你的笔记
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-day-planner" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-day-planner" target="_blank">obsidian-day-planner</a>：用于从 Markdown 笔记中的任务列表中规划和管理番茄钟计时器
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/checkbox-reorder" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/checkbox-reorder" target="_blank">checkbox-reorder</a>：针对任务列表的完成情况重新排序
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-badge" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-badge" target="_blank">obsidian-badge</a>：可以自定义一个进度样式，方便你传入任何地方。需要了解下简单的语法规则。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-task-archiver" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-task-archiver" target="_blank">obsidian-task-archiver</a>：帮你快速归类待办任务
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/completed-task-display" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/completed-task-display" target="_blank">completed-task-display</a>：提供控件来显示或隐藏已完成的任务。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tasks-calendar-wrapper" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tasks-calendar-wrapper" target="_blank">tasks-calendar-wrapper</a>：完美的时间线 / 日历视图的任务面板展示
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/calendar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/calendar" target="_blank">calendar</a>：添加一个简单的日历视图，用于可视化日记和在不同日记间跳转。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/nldates-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/nldates-obsidian" target="_blank">nldates-obsidian</a>：使用自然语言插入时间戳，并链接对应笔记中
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-last-modified-timestamp-in-status-bar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-last-modified-timestamp-in-status-bar" target="_blank">obsidian-last-modified-timestamp-in-status-bar</a>：在状态栏可视化你的最后编辑时间
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tokei" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tokei" target="_blank">tokei</a>：将一个数字时钟，放到笔记中
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cm-editor-syntax-highlight-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cm-editor-syntax-highlight-obsidian" target="_blank">cm-editor-syntax-highlight-obsidian</a>：允许在 Obsidian 的代码块中针对编程语言显示预设的高亮配色方案
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-codemirror-options" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-codemirror-options" target="_blank">obsidian-codemirror-options</a>：强化代码输入和编辑体验
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/code-block-copy" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/code-block-copy" target="_blank">code-block-copy</a>：在阅读模式中，为代码块右上角添加一个复制按钮，点击后自动复制代码块内容到剪贴板
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-code-copy" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-code-copy" target="_blank">obsidian-code-copy</a>：为代码块添加一个复制按钮。该功能官方已经提供
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/code-styler" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/code-styler" target="_blank">code-styler</a>：在阅读视图和编辑视图中对代码块和内联代码进行样式设置。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-better-codeblock" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-better-codeblock" target="_blank">obsidian-better-codeblock</a>：在阅读视图中为代码块添加标题、行号和折叠按钮
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/codeblock-tabs" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/codeblock-tabs" target="_blank">codeblock-tabs</a>：将连续的 CodeBlocks 创建标签组样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-code-tab" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-code-tab" target="_blank">obsidian-code-tab</a>：创造类似 leetcode 样式的混合代码块，且不仅限于代码块

<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/code-tab%E8%BF%98%E8%83%BD%E8%BF%99%E4%B9%88%E7%8E%A9" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/code-tab%E8%BF%98%E8%83%BD%E8%BF%99%E4%B9%88%E7%8E%A9" target="_blank">code-tab 还能这么玩</a>：codetab 插件的活用文章


<br><br>对于那些每天需要处理大量信息和笔记的用户来说，搜索是一个不可或缺的工具。为了满足用户不同的需求，在 Obsidian 中推出了多个强大的搜索插件，方便用户快速、准确地查找和管理笔记。这些插件操作简单、功能多样，可以根据关键字、标签、时间戳等多种方式进行搜索，快速定位笔记。此外，某些插件还支持高级搜索、全文搜索、模糊搜索等功能，让你更加轻松地处理大量信息和笔记。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/float-search" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/float-search" target="_blank">float-search</a>：给 Obsidian 增加悬浮搜索功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/fuzzy-chinese-pinyin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/fuzzy-chinese-pinyin" target="_blank">fuzzy-chinese-pinyin</a>：基于汉语拼音进行模糊搜索
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/search-on-internet" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/search-on-internet" target="_blank">search-on-internet</a>：快速在搜索引擎中搜索笔记内容
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/search-obsidian-in-google" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/search-obsidian-in-google" target="_blank">search-obsidian-in-google</a>：让你在谷歌搜索中搜索 Obsidian 中的笔记
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-better-command-palette" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-better-command-palette" target="_blank">obsidian-better-command-palette</a>：为命令面板添加了一个更用户友好、功能更丰富的强化
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/smart-connections" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/smart-connections" target="_blank">smart-connections</a>：该插件增强了核心插件 - 笔记漫游的功能
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/better-fn" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/better-fn" target="_blank">better-fn</a>：为 Obsidian 脚注增加悬浮展示功能，鼠标指向后，脚注的解释会出现在对应位置
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-footnotes" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-footnotes" target="_blank">obsidian-footnotes</a>：方便你增加脚注更加方便，可以通过快捷键快速在脚注和脚注解释内容之间快速切换。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tidy-footnotes" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tidy-footnotes" target="_blank">obsidian-tidy-footnotes</a>：可以将所有脚注都合并到一个地方，也能给脚注重新排序
<br><br>在 Obsidian 中，链接是笔记之间和笔记与外部资源之间重要的互动方式，链接的使用体验影响着用户在查找、组织和浏览笔记时的效率和舒适度。为了增强链接的使用体验，Obsidian 提供了多种链接管理插件。这些插件可以帮助用户进行链接的猜测和提取、显示链接对应的网站图标、提高链接的美观性和可读性。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-advanced-uri" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-advanced-uri" target="_blank">obsidian-advanced-uri</a>：Obsidian URI 的功能增强
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-advanced-uri-%E9%9D%92%E5%B9%B4%E4%B8%8E%E7%A6%85%E5%B8%88%E7%9A%84%E6%8A%80%E6%9C%AF%E5%B0%AC%E8%81%8A" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-advanced-uri-%E9%9D%92%E5%B9%B4%E4%B8%8E%E7%A6%85%E5%B8%88%E7%9A%84%E6%8A%80%E6%9C%AF%E5%B0%AC%E8%81%8A" target="_blank">obsidian-advanced-uri - 青年与禅师的技术尬聊</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/cubox-%E9%80%9A%E8%BF%87-advanced-uri-%E6%8F%92%E4%BB%B6%E5%AF%BC%E5%85%A5-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/cubox-%E9%80%9A%E8%BF%87-advanced-uri-%E6%8F%92%E4%BB%B6%E5%AF%BC%E5%85%A5-obsidian" target="_blank">Cubox 通过 Advanced Uri 插件导入 Obsidian</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/supercharged-links-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/supercharged-links-obsidian" target="_blank">supercharged-links-obsidian</a>：可帮助您根据笔记元数据（例如标签或 YAML 前言属性）设置保管库中链接的样式。可以自动向链接添加颜色、表情符号或其他样式，使其更醒目的进行导航。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-auto-link-title" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-auto-link-title" target="_blank">obsidian-auto-link-title</a>：自动在粘贴时，提取网页链接标题，创建一个 Markdown 链接形式与正确的标题
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/url-into-selection" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/url-into-selection" target="_blank">url-into-selection</a>：使用常规 Ctrl/Cmd+V 将链接（URL）插入到选定的文本中。也可以反过来，通过命令面板 / 快捷键将文本插入到选定的链接（URL）中
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/external-favicon" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/external-favicon" target="_blank">external-favicon</a>：可以在不使用任何自定义 CSS 的情况下看到链接对应的网站图标
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/link-favicon" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/link-favicon" target="_blank">link-favicon</a>：可以在不使用任何自定义 CSS 的情况下看到链接对应的网站图标
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-rich-links" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-rich-links" target="_blank">obsidian-rich-links</a>：为你笔记中的链接，增加美化样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-link-embed" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-link-embed" target="_blank">obsidian-link-embed</a>：帮你将网页 URL 转换为嵌入预览卡片样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-card-link" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-card-link" target="_blank">auto-card-link</a>：自动将链接变成卡片样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/links" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/links" target="_blank">links</a>：各种链接形式的相互转换
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/graph-analysis" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/graph-analysis" target="_blank">graph-analysis</a>：将图形分析能力添加到 Obsidian，此插件实现了一套算法，可以计算仓库中的笔记之间的关联关系
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-relation-pane" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-relation-pane" target="_blank">obsidian-relation-pane</a>：显示一个总结笔记间关系的面板
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-export-image" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-export-image" target="_blank">obsidian-export-image</a>：轻松将笔记转换为图片
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/pandoc-%E6%8F%92%E4%BB%B6%E5%AF%BC%E5%87%BA-word-%E6%A0%BC%E5%BC%8F-%E6%AD%A3%E7%A1%AE%E8%AF%86%E5%88%AB%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/pandoc-%E6%8F%92%E4%BB%B6%E5%AF%BC%E5%87%BA-word-%E6%A0%BC%E5%BC%8F-%E6%AD%A3%E7%A1%AE%E8%AF%86%E5%88%AB%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87" target="_blank">pandoc 插件导出 word 格式 正确识别本地图片</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/html-server" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/html-server" target="_blank">html-server</a>：帮你把 Obsidian 仓库作为一个 web 服务器，同时保持你的主题，并确保你的图像和文件链接的工作
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-to-notion" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-to-notion" target="_blank">obsidian-to-notion</a>：一键把 Obsidian 中的文件传输到 Notion 中
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-bake" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-bake" target="_blank">easy-bake</a>：轻松将许多 Obsidian 笔记编译成单个文件
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-booknote-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-booknote-plugin" target="_blank">obsidian-booknote-plugin</a>：让你在 Obsidian 中阅读标注 PDF
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-weread-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-weread-plugin" target="_blank">obsidian-weread-plugin</a>：让 Obsidian 和你的微信阅读联动
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/better-comment-toggle" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/better-comment-toggle" target="_blank">better-comment-toggle</a>：改进了注释的切换功能
<br><br>标签是一种简洁、灵活、直观的文档组织工具，可以帮助用户快速以及准确地对文档进行分类、归档和筛选。不同于传统的文件夹和目录管理方式，标签可以根据不同的主题和关键词进行动态分类和重组，方便进行多维度的筛选和查找。标签的使用不仅能加速文档的查找，快速定位到需要的文档内容，而且还能帮助用户更好地归档和组织自己的文档内容，从而提高文档的管理质量和效率。在数字化信息管理领域，标签已成为一种不可或缺的重要元素。<br>在 Obsidian 中，有多种标签管理插件可以帮助用户更好地管理标签，并提高标签的使用效率。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tag-wrangler" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tag-wrangler" target="_blank">tag-wrangler</a>：增强的标签管理体验，从标签面板中重命名、合并、切换和搜索标签面面俱到
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tag-buddy" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tag-buddy" target="_blank">tag-buddy</a>：简单易用的添加标签汇总、编辑工具
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tagfolder" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tagfolder" target="_blank">obsidian-tagfolder</a>：通过笔记中的标签，重新组织所有的笔记
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-frontmatter-tag-suggest" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-frontmatter-tag-suggest" target="_blank">obsidian-frontmatter-tag-suggest</a>：很好解决记忆标签和快速输入的问题，提供标签自动建议的方法，让你可以键入简单字母来快速联想出来对应的标签
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/multi-tag" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/multi-tag" target="_blank">multi-tag</a>：一次向多个笔记添加标签。右键单击文件夹，或者选择多个笔记并右键单击所选内容
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tag-word-cloud" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tag-word-cloud" target="_blank">tag-word-cloud</a>：展示你的标签 / 词 / 链接的词云图
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-basetag" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-basetag" target="_blank">obsidian-basetag</a>：这个插件在预览模式下渲染标签的缩略名称
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/colored-tags-wrangler" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/colored-tags-wrangler" target="_blank">colored-tags-wrangler</a>：一个简单而又强大的标签色彩样式整理器
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-tag" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-tag" target="_blank">auto-tag</a>：基于 AI 来为笔记生成标签
<br><br>鉴于 Obsidian 以 Markdown 为基础，表格编辑一直以来都是用户反馈的难点。 不过，以下列出的插件，将会帮助你解决这些问题，提高你在表格编辑方面的灵活性和操作性。这些插件以其巧妙的设计和出色的功能加以解决了 Obsidian 表格体验中的许多问题，使得 Obsidian 用户能够更加轻松地编辑和管理表格，并大幅提升你使用 Obsidian 时的效率和愉悦感。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-sortable" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-sortable" target="_blank">obsidian-sortable</a>：提供搜索 Obsidian 设置和插件设置选项的能力
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/table-editor-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/table-editor-obsidian" target="_blank">table-editor-obsidian</a>：改进了表格导航、格式和操作
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-excel-to-markdown-table" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-excel-to-markdown-table" target="_blank">obsidian-excel-to-markdown-table</a>：可以将来自 Microsoft Excel、Google Sheets、Apple Numbers 和 LibreOffice Calc 的数据粘贴为 Obsidian 编辑器中的 Markdown 表格。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-echarts" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-echarts" target="_blank">obsidian-echarts</a>：一个可以在 obsidian 里运行 echarts 的插件，具体可以参考官方示例库代码。插件需要依赖 dataview 插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/table-extended" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/table-extended" target="_blank">table-extended</a>：为表格增加合并列和行和省略表头的功能
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/canvas-presentation" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/canvas-presentation" target="_blank">canvas-presentation</a>：帮助你根据顺序演示白板中的卡片
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/optimize-canvas-connections" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/optimize-canvas-connections" target="_blank">optimize-canvas-connections</a>：优化 Canvas 中的连接线
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-mindmap-nextgen" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-mindmap-nextgen" target="_blank">obsidian-mindmap-nextgen</a>：用于将笔记预览为 Markmap 思维导图
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-enhancing-mindmap" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-enhancing-mindmap" target="_blank">obsidian-enhancing-mindmap</a>：让你在 Osidian 中绘制思维导图、大纲和 PDF 文件标注工具。包括多种模式，包括导图模式，表格模式，类白板模式。
<br><br>在 Obsidian 中，您可以使用多种绘图工具，例如 Excalidraw 和 mermaid，来完成流程图、UML 图等专业图表的绘制，以辅助表达您的笔记内容。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/obsidian-excalidraw-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/obsidian-excalidraw-plugin" target="_blank">obsidian-excalidraw-plugin</a>：在 Obsidian 中 使用 Excalidraw 绘图

<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/excalidraw%E8%84%9A%E6%9C%AC-slideshow%E5%AE%8C%E7%BE%8E%E5%AE%9E%E7%8E%B0%E7%94%BB%E6%9D%BF%E5%B9%BB%E7%81%AF%E7%89%87%E6%BC%94%E7%A4%BA%E7%9A%84%E8%84%9A%E6%9C%AC" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/excalidraw%E8%84%9A%E6%9C%AC-slideshow%E5%AE%8C%E7%BE%8E%E5%AE%9E%E7%8E%B0%E7%94%BB%E6%9D%BF%E5%B9%BB%E7%81%AF%E7%89%87%E6%BC%94%E7%A4%BA%E7%9A%84%E8%84%9A%E6%9C%AC" target="_blank">Excalidraw 脚本 - Slideshow 完美实现画板幻灯片演示的脚本</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/excalidraw%E5%B1%80%E9%83%A8%E5%B5%8C%E5%85%A5obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/excalidraw%E5%B1%80%E9%83%A8%E5%B5%8C%E5%85%A5obsidian" target="_blank">Excalidraw 局部嵌入 Obsidian</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E7%94%BB%E6%9D%BF%E5%B1%80%E9%83%A8%E6%88%96%E8%80%85%E5%85%A8%E5%B1%80%E6%92%AD%E6%94%BE%E5%8A%A8%E7%94%BB" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E7%94%BB%E6%9D%BF%E5%B1%80%E9%83%A8%E6%88%96%E8%80%85%E5%85%A8%E5%B1%80%E6%92%AD%E6%94%BE%E5%8A%A8%E7%94%BB" target="_blank">自定义 Excalidraw 脚本 - 画板局部或者全局播放动画</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E5%AE%9E%E7%8E%B0zotero%E4%B8%8Eexcalidraw%E7%9A%84%E6%8B%96%E6%8B%BD%E8%81%94%E5%8A%A8" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E5%AE%9E%E7%8E%B0zotero%E4%B8%8Eexcalidraw%E7%9A%84%E6%8B%96%E6%8B%BD%E8%81%94%E5%8A%A8" target="_blank">自定义 Excalidraw 脚本 - 实现 Zotero 与 Excalidraw 的拖拽联动</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E5%BB%BA%E7%AB%8B%E5%BA%93%E5%A4%96eagle%E7%B4%A0%E6%9D%90%E5%BA%93%E7%9A%84%E8%BF%9E%E6%8E%A5" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E5%BB%BA%E7%AB%8B%E5%BA%93%E5%A4%96eagle%E7%B4%A0%E6%9D%90%E5%BA%93%E7%9A%84%E8%BF%9E%E6%8E%A5" target="_blank">自定义 Excalidraw 脚本 - 建立库外 Eagle 素材库的连接</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E5%88%B6%E4%BD%9Cexcalidraw%E6%82%AC%E6%B5%AE%E5%A4%A7%E7%BA%B2%E4%BB%A5%E5%8F%8A%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E7%BA%BF%E5%9E%8B%E7%AC%94%E8%AE%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E5%88%B6%E4%BD%9Cexcalidraw%E6%82%AC%E6%B5%AE%E5%A4%A7%E7%BA%B2%E4%BB%A5%E5%8F%8A%E4%B8%80%E9%94%AE%E7%94%9F%E6%88%90%E7%BA%BF%E5%9E%8B%E7%AC%94%E8%AE%B0" target="_blank">自定义 Excalidraw 脚本 - 制作 Excalidraw 悬浮大纲以及一键生成线型笔记</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E4%BF%AE%E6%94%B9mindmap-format%E8%AE%BE%E7%BD%AE%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEframe%E5%AE%B9%E5%99%A8" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/excalidraw/%E8%87%AA%E5%AE%9A%E4%B9%89excalidraw%E8%84%9A%E6%9C%AC-%E4%BF%AE%E6%94%B9mindmap-format%E8%AE%BE%E7%BD%AE%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BEframe%E5%AE%B9%E5%99%A8" target="_blank">自定义 Excalidraw 脚本 - 修改 MindMap Format 设置思维导图 Frame 容器</a>


<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/mermaid-tools" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/mermaid-tools" target="_blank">mermaid-tools</a>：提供一个包含常见 mermaid 语法模板的面板，并且可以自定义
<br><br>窗口：在日常工作和学习中，我们需要通过窗口和界面布局来提高工作效率和信息管理的质量。在 Obsidian 中，有多种插件可以帮助用户更方便地窗口和界面布局。<br>这些插件可以根据用户的需要进行个性化布局和设置，提高工作效率和文档管理质量，是 Obsidian 的重要辅助工具。<br>而也有一些插件，提供了提供的多种视图模式有关，让你更加灵活的使用不同的视图模式，比如专注模式等。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-projects" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-projects" target="_blank">obsidian-projects</a>：提供多视图的项目管理，包括 表格、看板、日历、画廊等多种视图样式，以适应不同组织需求
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/workspaces-plus" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/workspaces-plus" target="_blank">workspaces-plus</a>：快速管理不同工作区不同布局对应不同工作流
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-view-mode-by-frontmatter" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-view-mode-by-frontmatter" target="_blank">obsidian-view-mode-by-frontmatter</a>：自定义每个笔记的视图
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-fullscreen-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-fullscreen-plugin" target="_blank">obsidian-fullscreen-plugin</a>：让笔记编辑器变为聚焦模式，或说全屏化
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-focus-mode" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-focus-mode" target="_blank">obsidian-focus-mode</a>：为 Obsidian 带来了专注模式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/zen" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/zen" target="_blank">zen</a>：帮你聚焦，让你的 Obsidian 进入到禅模式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/editor-width-slider" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/editor-width-slider" target="_blank">editor-width-slider</a>：允许你在状态栏中使用滑块来快速调整编辑器的行宽 / 栏宽
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/image-window" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/image-window" target="_blank">image-window</a>：允许在 Obsidian 中使用新窗口中打开图像和笔记
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-fullscreen-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-fullscreen-plugin" target="_blank">obsidian-fullscreen-plugin</a>：让笔记编辑器变为聚焦模式，或说全屏化
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-focus-mode" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-focus-mode" target="_blank">obsidian-focus-mode</a>：为 Obsidian 带来了专注模式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-toggle-sidebars" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-toggle-sidebars" target="_blank">easy-toggle-sidebars</a>：通过自定义按键和手势，达成快速开关侧边栏
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-hide-sidebars-when-narrow" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-hide-sidebars-when-narrow" target="_blank">obsidian-hide-sidebars-when-narrow</a>：自动根据宽度隐藏侧边栏
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-auto-hide" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-auto-hide" target="_blank">obsidian-auto-hide</a>：可以更轻松地折叠（和展开）侧边栏
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-toggle-sidebars" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/easy-toggle-sidebars" target="_blank">easy-toggle-sidebars</a>：便捷的控制侧边栏
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-sidebar-toggler" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-sidebar-toggler" target="_blank">obsidian-sidebar-toggler</a>：Obsidian 侧边栏的更精细的控制。用于外部窗口管理器。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tab-switcher" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/tab-switcher" target="_blank">Tab-Switcher</a>：使用 Ctrl + Tab 按最近使用的顺序切换选项卡，就像在浏览器中一样
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/vertical-tabs-view" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/vertical-tabs-view" target="_blank">Vertical-Tabs-View</a>：供垂直选项卡视图选项卡可以排序，但更改不会与原始选项卡同步
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/home-tab" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/home-tab" target="_blank">home-tab</a>：增强新建标签页的功能，在新建标签页增加搜索条。
<br><br>在 Obsidian 中，我们可以使用 frontmatter 这个元数据区域来添加笔记的一些额外信息，例如别名、标签等等。这些信息可以帮助我们更好地组织笔记和查找笔记。而且 Obsidian 还有一些插件可以帮助我们更好地管理 frontmatter，这里介绍几种常用的插件：<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/frontmatter-alias-display" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/frontmatter-alias-display" target="_blank">frontmatter-alias-display</a>：让你的笔记名下直接看到别名
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-metatable" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-metatable" target="_blank">obsidian-metatable</a>：美化 frontmatter 的显示样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-view-mode-by-frontmatter" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-view-mode-by-frontmatter" target="_blank">obsidian-view-mode-by-frontmatter</a>：自定义每个笔记的视图
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/metaedit" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/metaedit" target="_blank">metaedit</a>：帮你快捷管理 Obsidian 的元数据，可以预设 YAML 区域的值
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-meta-bind-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-meta-bind-plugin" target="_blank">obsidian-meta-bind-plugin</a>：让你的笔记具有交互性，通过各种控件修改笔记信息
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/metadata-menu" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/metadata-menu" target="_blank">metadata-menu</a>：图形化方便修改 YAML 值的一个工具
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-state-switcher" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-state-switcher" target="_blank">obsidian-state-switcher</a>：Yaml Manager 避免直接修改 Yaml 区字段，让 frontmatter 修改变得简单
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/frontmatter-alias-display" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/frontmatter-alias-display" target="_blank">frontmatter-alias-display</a>：让你在文件名下直接看到别名
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-metacopy" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-metacopy" target="_blank">obsidian-metacopy</a>：让你快速复制当前笔记的 Front-matter 的值。
<br><br>Obsidian 最具吸引力的特点之一，就是它拥有一个丰富的、逐渐壮大起来的插件生态圈。这些卓越的插件不仅增强了 Obsidian 的功能，而且可以在很大程度上提高你的工作和学习效率，让你从繁琐，重复的码字过程中解脱出来。相信这些插件能够帮助你更高效、便捷地管理和利用笔记，让你的学习、工作和生活更加舒适顺畅。相信下面这些插件能帮到你：<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/templater/templater-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/templater/templater-obsidian" target="_blank">templater-obsidian</a>：可以替代核心模板插件的效率神器

<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/templater%E5%AE%9E%E7%8E%B0%E5%85%B3%E9%94%AE%E8%AF%8D%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A5%97%E7%94%A8%E6%A8%A1%E6%9D%BF" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/templater%E5%AE%9E%E7%8E%B0%E5%85%B3%E9%94%AE%E8%AF%8D%E8%87%AA%E5%8A%A8%E5%8C%96%E5%A5%97%E7%94%A8%E6%A8%A1%E6%9D%BF" target="_blank">Templater 实现关键词自动化套用模板</a>


<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/quickadd/quickadd" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/quickadd/quickadd" target="_blank">quickadd</a>：组合 Obsidian 里所有操作，低阶使操作可视化自动化，高阶使用可编写脚本实现万物互联
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview" target="_blank">dataview</a>：高性能的索引 md 文件，并创建复杂的查询视图，如表格，列表，任务，日历视图

<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83%E5%BA%93" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83%E5%BA%93" target="_blank">Dataview 语法参考库</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95" target="_blank">开篇 - Dataview 基本语法</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98" target="_blank">进阶 - Dataview 语法实战</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C" target="_blank">应用 - Dataview 社区实践经验</a>


<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/various-complements" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/various-complements" target="_blank">various-complements</a>：这个 Obsidian 插件让你能够自动完成完成单词，和自定义内容的输入。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cmdr" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cmdr" target="_blank">cmdr</a>：给 Obsidian 的不同功能区增加自定义快捷按钮
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-completr" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-completr" target="_blank">obsidian-completr</a>：为 LaTeX, Frontmatter，callout 提供了自动补全功能，你还可以提供文件作为联想的文字。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-note-mover" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-note-mover" target="_blank">auto-note-mover</a>：可以自动将笔记根据规则，移动到各自的文件夹中
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-auto-template-prompt" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-auto-template-prompt" target="_blank">obsidian-auto-template-prompt</a>：在创建文件时自动打开一个命令窗口让你插入模板。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obs-text-wrapper" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obs-text-wrapper" target="_blank">obs-text-wrapper</a>：给选中文本加上 HTML 标签
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-wrap-with-shortcuts" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-wrap-with-shortcuts" target="_blank">obsidian-wrap-with-shortcuts</a>：给选中文本加上自定义前后缀标签
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dice-roller" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dice-roller" target="_blank">obsidian-dice-roller</a>：在文档任意地方生成需要随机的内容，这些随机的候选项可以你来定义
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-markdown-formatting-assistant-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-markdown-formatting-assistant-plugin" target="_blank">obsidian-markdown-formatting-assistant-plugin</a>：提供笔记编辑器中 快速输入 Markdown 语法的方式，此外还提供了一个命令行界面。该命令行界面平铺展示 OB 常用和所有命令提高工作效率。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/readme/text-extractor_readme" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/readme/text-extractor_readme" target="_blank">text-extractor_readme</a>：：在编辑器中扩展文本快捷键，运行 shell 命令和 python 脚本
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-text-expander" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-text-expander" target="_blank">obsidian-text-expander</a>：在编辑器中扩展文本快捷键，运行 shell 命令和 python 脚本
<br><br>图标和表情符号在现代通信和数字产业发展中已经成为必需的元素，它们可以使文本信息更生动、更具有表现力和个性化。在 Obsidian 中，用户可以通过安装插件来优化图标和表情符号的使用。<br>这些插件使得图标和表情符号的使用变得更加便捷、灵活和个性化，使文本信息传递更加生动、有趣，同时也丰富了用户心情和情感表达。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icons-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icons-plugin" target="_blank">obsidian-icons-plugin</a>：提供插入图标符号的功能。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icon-shortcodes" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icon-shortcodes" target="_blank">obsidian-icon-shortcodes</a>：通过键入 emoji 对应的短代码方式，快速筛选和输入。并支持自定义图标集合
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/emoji-shortcodes" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/emoji-shortcodes" target="_blank">emoji-shortcodes</a>：通过键入 emoji 对应的短代码方式，快速筛选和输入
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-emoji-toolbar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-emoji-toolbar" target="_blank">obsidian-emoji-toolbar</a>：快速搜索表情符号并将其插入到您的编辑器中
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/emoji-titler" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/emoji-titler" target="_blank">emoji-titler</a>：为笔记标题快速增加 emoji
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icon-swapper" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icon-swapper" target="_blank">obsidian-icon-swapper</a>：替换默认内置图标集合准备的，可以批量替换，也可以针对某个单一图标进行替换
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/emoji-magic" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/emoji-magic" target="_blank">emoji-magic</a>：允许使用关键字搜索 emoji 表情符号，轻松添加到笔记中
<br><br>对于那些对于审美有着极高追求的你来说，这些插件将会成为你 Obsidian 学习和管理的不可或缺的个性化增强工具。虽然这些插件看似只是小小的工具，但它们却有着强大而独特的功能，能够显着提升 Obsidian UI 和设计中的个性化要素。通过本身定制化的特点和某些极具创意的功能，这些插件将使 Obsidian 更加个性化和符合你的审美标准。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-banners" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-banners" target="_blank">obsidian-banners</a>：为文档页面添加头图和图标
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-style-settings" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-style-settings" target="_blank">obsidian-style-settings</a>：给主题，插件，css 片段提供样式设置的插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-color" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-color" target="_blank">obsidian-file-color</a>：让你文件管理多姿多彩
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icon-folder" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-icon-folder" target="_blank">obsidian-icon-folder</a>：允许你添加任何自定义图标 (类型为. svg) 或从图标包中添加到您的文件夹或文件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/custom-state-for-task-list" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/custom-state-for-task-list" target="_blank">custom-state-for-task-list</a>：优化你的任务样式
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/badges" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/badges" target="_blank">badges</a>：一个简易插件，通过内置的样式来在 Obsidian 中获得简易的徽章效果
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/heading-level-indent" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/heading-level-indent" target="_blank">heading-level-indent</a>：能根据标题级别缩进内容，用于创建视觉层次结构，使文档的结构和组织更容易理解
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-hider" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-hider" target="_blank">obsidian-hider</a>：自定义隐藏界面元素、信息
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/optimize-canvas-connections" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/optimize-canvas-connections" target="_blank">optimize-canvas-connections</a>：优化 Canvas 中的连接线
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-day-and-night" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-day-and-night" target="_blank">obsidian-day-and-night</a>：根据设定的时间自动切换浅色和深色主题
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dynamic-background" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-dynamic-background" target="_blank">obsidian-dynamic-background</a>：为 Obsidian 添加动态背景
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-minimal-settings" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-minimal-settings" target="_blank">obsidian-minimal-settings</a>：为你 Minimal 主题提供自定义选项
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-chat-view-qq" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-chat-view-qq" target="_blank">obsidian-chat-view-qq</a>：chat-view-qq 保存 QQ 消息到 Obsidian 中
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/show-diff" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/show-diff" target="_blank">show-diff</a>：在 Obsidian 文件中呈现 Git 差异
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-version-history-diff" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-version-history-diff" target="_blank">obsidian-version-history-diff</a>：比较同步和文件恢复插件以及当前文件的 Git 版本历史。添加一个命令来打开同步插件的版本历史。
<br><br>善于使用优秀的 Obsidian 插件，能够提高你的笔记管理效率和科学性。下面是一些实用的插件：它们提供了增强型文件管理器、面包屑导航、文件字数展示、窗格历史记录等多种功能，让你可以更高效地组织笔记、轻松浏览笔记目录，实现科学的笔记管理。此外，这些插件还支持多种文件夹展开和统计功能，让你更方便地管理笔记。优秀的笔记管理插件，将为你带来更加便捷、高效的学习和工作体验。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-tree-alternative" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-tree-alternative" target="_blank">file-tree-alternative</a>：提供了一个全新的增强型文件管理器
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/quick-explorer" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/quick-explorer" target="_blank">quick-explorer</a>：在应用标题栏和笔记标题栏增加面包屑导航功能，提供了笔记和目录快速切换的能力
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/novel-word-count" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/novel-word-count" target="_blank">novel-word-count</a>：在 Obsidian 的文件资源管理器窗格中显示每个文件、文件夹和保险库的字数，以及更多其他信息。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-order" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-order" target="_blank">file-order</a>：允许你快速给文件夹和文件排序并添加数字编号
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-archive" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-archive" target="_blank">auto-archive</a>：自动按照时间跨度归档你的笔记
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-collapse-all-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-collapse-all-plugin" target="_blank">obsidian-collapse-all-plugin</a>：单击对应图标或者使用命令，展开或关闭文件管理器中的文件夹
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/pane-relief" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/pane-relief" target="_blank">pane-relief</a>：每个窗格的历史记录、用于窗格移动和导航的快捷键等
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/recent-files-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/recent-files-obsidian" target="_blank">recent-files-obsidian</a>：显示最近打开的文件列表
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tagfolder" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tagfolder" target="_blank">obsidian-tagfolder</a>：通过笔记中的标签，重新组织所有的笔记
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/chronology" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/chronology" target="_blank">chronology</a>：按照月历模式导航，轻松了解编辑修改锅的笔记内容。
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/hidden-folder-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/hidden-folder-obsidian" target="_blank">hidden-folder-obsidian</a>：在文件管理器中快速隐藏文件夹
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-show-file-path" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-show-file-path" target="_blank">obsidian-show-file-path</a>：显示正在编辑的文件所在的路径
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/hidden-folder-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/hidden-folder-obsidian" target="_blank">hidden-folder-obsidian</a>：快速隐藏文件夹
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-trash-explorer" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-trash-explorer" target="_blank">obsidian-trash-explorer</a>：让你可以管理 Obsidian 的 .trash 文件夹（也叫软件回收站），从中恢复和删除文件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/edit-history" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/edit-history" target="_blank">edit-history</a>：保留您的笔记的自动编辑历史记录，可以查看历史记录，与之对比或恢复以前的编辑
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-explorer-markdown-titles" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-explorer-markdown-titles" target="_blank">file-explorer-markdown-titles</a>：在文件资源管理器中显示笔记的第一个 markdown 标题
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/vault-name-status-bar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/vault-name-status-bar" target="_blank">vault-name-status-bar</a>：在底部状态栏显示 Obsidian 仓库名
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-last-modified-timestamp-in-status-bar" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-last-modified-timestamp-in-status-bar" target="_blank">obsidian-last-modified-timestamp-in-status-bar</a>：在状态栏可视化你的最后编辑时间
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/attachment-management" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/attachment-management" target="_blank">attachment-management</a>：可以基于一些建议规则，自动化归类你笔记中的附件内容
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-gallery" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-gallery" target="_blank">obsidian-gallery</a>：让你的笔记变成画廊
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-layouts" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-image-layouts" target="_blank">obsidian-image-layouts</a>：在您的笔记中添加美丽的图像布局
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/find-unlinked-files" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/find-unlinked-files" target="_blank">find-unlinked-files</a>：遍历整个仓库，搜索没有反向链接的文件。它将创建一个文件，其中包含指向这些未链接文件的链接列表
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/settings-search" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/settings-search" target="_blank">settings-search</a>：提供搜索 Obsidian 设置和插件设置选项的能力
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-link" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-link" target="_blank">obsidian-file-link</a>：可以很容易地将文件链接添加到笔记中，提供界面化的选择文件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/nl-fast-image-cleaner" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/nl-fast-image-cleaner" target="_blank">nl-fast-image-cleaner</a>：快速删除笔记中图片和引用链接
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/oz-clear-unused-images" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/oz-clear-unused-images" target="_blank">oz-clear-unused-images</a>：清除笔记中不再使用的图像以节省空间
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-regex-pipeline" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-regex-pipeline" target="_blank">obsidian-regex-pipeline</a>：让用户用自定义的正则表达式进行格式化文本的插件，相比 Obsidian 自带的搜索替换，Regex Pipeline 利用正则表达式这个强大的文本处理技术可以执行更复杂的文本操作
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/open-with" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/open-with" target="_blank">open-with</a>：允许你通过在 Obsidian 中使用其他软件，打开笔记中常见格式文件
<br><br>许多学习者选择使用笔记应用程序以替代传统的纸笔笔记方式。尤其是 Obsidian 这类高效而强大的工具，不仅提供了优秀的笔记编写和管理功能，还有许多插件可供选择，能够满足用户多样化的需求，下面这些你不容错过：<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-language-learner" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-language-learner" target="_blank">obsidian-language-learner</a>：事半功倍，辅助你在 Obsidian 英语学习，提供查词，生词等功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-spaced-repetition" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-spaced-repetition" target="_blank">obsidian-spaced-repetition</a>：利用遗忘曲线间隔重复复习笔记中的内容
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/blindfold-obsidian" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/blindfold-obsidian" target="_blank">blindfold-obsidian</a>：实现了不依赖主题，和示例库的方法，来制作答案的隐藏和展示
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%A4%96%E8%AF%AD%E4%B9%A6%E9%98%85%E8%AF%BB%E5%B7%A5%E4%BD%9C%E6%B5%81" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%A4%96%E8%AF%AD%E4%B9%A6%E9%98%85%E8%AF%BB%E5%B7%A5%E4%BD%9C%E6%B5%81" target="_blank">外语书阅读工作流</a>：介绍了阅读和学习工作流外，配合 Spaced Repetition Recall 插件的使用方法
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-markdown-furigana" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-markdown-furigana" target="_blank">obsidian-markdown-furigana</a>：日文学习如何增加假名
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/japanese-word-splitter" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/japanese-word-splitter" target="_blank">japanese-word-splitter</a>：添加支持日语分词
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/novel-word-count" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/novel-word-count" target="_blank">novel-word-count</a>：在 Obsidian 的文件资源管理器窗格中显示每个文件、文件夹和保险库的字数，以及更多其他信息
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/better-word-count" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/better-word-count" target="_blank">better-word-count</a>：自定义统计全库字数，文件数等统计数据
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-explorer-note-count" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/file-explorer-note-count" target="_blank">file-explorer-note-count</a>：增加文件数量统计功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-daily-stats" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-daily-stats" target="_blank">obsidian-daily-stats</a>：自动统计笔记更新修改的热力图
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tracker" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tracker" target="_blank">obsidian-tracker</a>：将笔记中的变化收集起来，并且提供不同预设的图形分析模板
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/size-history" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/size-history" target="_blank">size-history</a>：用一个简单图表来展示查看仓库中笔记的增长曲线
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/typing-speed" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/typing-speed" target="_blank">typing-speed</a>：在状态栏显示你的输入速度
<br><br>为了让你更加高效地管理学习和工作中的海量笔记，这里向你推荐几款优秀的 Obsidian 插件，它们为 Obsidian 带来全新的标签页操作方式，提升笔记分类和定位的便捷性。这些插件不仅简单易用、操作方便，还可以让你在使用 Obsidian 时省去不必要的繁琐步骤。无论你是在寻找更高效的笔记组织方式还是提高工作效率，这些插件都会给你带来不同程度的改进和便利。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tabs" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tabs" target="_blank">obsidian-tabs</a>：为 Obsidian 增加标签页功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cycle-through-panes" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/cycle-through-panes" target="_blank">cycle-through-panes</a>：使用 ctrl + Tab 循环浏览你打开的 tab，就像在浏览器中浏览标签页一样
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/close-similar-tabs" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/close-similar-tabs" target="_blank">close-similar-tabs</a>：自动关闭重复打开的标签页，防止标签栏拥挤和冲突
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/double-click-tab" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/double-click-tab" target="_blank">double-click-tab</a>：双击标签标题时修改默认行为的插件，比如关闭标签
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-opener" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-opener" target="_blank">obsidian-opener</a>：提升打开标签页的体验
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-plugin-groups" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-plugin-groups" target="_blank">obsidian-plugin-groups</a>：帮你轻松地分组和管理 Obsidian 第三方插件，启动关闭，加载插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/quick-plugin-switcher" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/quick-plugin-switcher" target="_blank">quick-plugin-switcher</a>：更轻松的管理插件的启用
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tray" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-tray" target="_blank">obsidian-tray</a>：让 Obsidian 关闭窗口时，可以自动缩小到系统托盘
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-hover-editor" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-hover-editor" target="_blank">obsidian-hover-editor</a>：通过将悬停弹窗变成一个功能齐全的编辑器，来增强核心的 “页面预览” 原有的功能
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/customizable-menu" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/customizable-menu" target="_blank">customizable-menu</a>：右键菜单增强，可以自定义右键菜单绑定的命令，鼠标党福音
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/bartender" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/bartender" target="_blank">bartender</a>：Bartender 提供了拖拽排序文件夹功能，允许重新排列状态栏和侧边栏中的元素
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/css-editor" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/css-editor" target="_blank">css-editor</a>：在 Obsidian 中像笔记一样编辑 CSS 代码片段文件
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/surfing" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/surfing" target="_blank">surfing</a>：允许你在 Obsidian 的标签页中浏览任意网页
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/convert-url-to-iframe" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/convert-url-to-iframe" target="_blank">convert-url-to-iframe</a>：将任何 URL 转换为网页预览插入到笔记中
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/simple-embeds" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/simple-embeds" target="_blank">simple-embeds</a>：把 Twitter 和 YouTube 网页链接嵌入当前笔记中预览
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/search-obsidian-in-google" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/search-obsidian-in-google" target="_blank">search-obsidian-in-google</a>：让你在谷歌搜索中搜索 Obsidian 中的笔记
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-link" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-file-link" target="_blank">obsidian-file-link</a>：可以很容易地将文件链接添加到笔记中，提供界面化的选择文件
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docsn/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/zotlit" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docsn/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/zotlit" target="_blank">10-Obsidian/Obsidian 社区插件 / zotlit</a>：最完美的 Zotero 和 Obsidian 联动插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-zotero-desktop-connector" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-zotero-desktop-connector" target="_blank">obsidian-zotero-desktop-connector</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-custom-frames" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-custom-frames" target="_blank">obsidian-custom-frames</a>：让你在 Obsidian 中以 iframe 方式将 web 应用程序变成标签页
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-douban-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-douban-plugin" target="_blank">obsidian-douban-plugin</a>：给 Obsidian 增加和豆瓣信息同步的能力
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-weread-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-weread-plugin" target="_blank">obsidian-weread-plugin</a>：让 Obsidian 和你的微信阅读联动
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-to-anki-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-to-anki-plugin" target="_blank">obsidian-to-anki-plugin</a>：使用 AnkiConnect 来接收 Obsidian 的闪卡（Flashcards）数据
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/open-weather" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/open-weather" target="_blank">open-weather</a>：该插件以可配置的字符串格式返回 OpenWeather 的当前天气
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/rss-reader" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/rss-reader" target="_blank">rss-reader</a>：让你的 Obsidian 秒变 RSS 阅读器
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/readme/obsidian-leaflet-plugin_readme" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/readme/obsidian-leaflet-plugin_readme" target="_blank">obsidian-leaflet-plugin_readme</a>：在笔记中插入交互式地图，此地图基于 Leaflet.js。添加需要通过使用特定语法。

<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-leaflet-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-leaflet-plugin" target="_blank">obsidian-leaflet-plugin</a>：活用方法


<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidoom" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidoom" target="_blank">obsidoom</a>：让你在 Obsidian 上玩经典游戏 DOOM
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-textgenerator-plugin" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/obsidian-textgenerator-plugin" target="_blank">obsidian-textgenerator-plugin</a>：使用 OpenAI 的模型进行文本生成
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/copilot" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/copilot" target="_blank">copilot</a>：一个能像 chatGPT 网页版对话的 Obsidian AI 插件
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/smart-connections" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/smart-connections" target="_blank">smart-connections</a>：基于 OpenAI 提供的 api 查询本地库，推荐笔记链接，分析笔记相关性
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/companion" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/companion" target="_blank">companion</a>：以类似微软 Copilot 的交互方式，基于文本生成 AI 进行文本自动补全
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-tag" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/auto-tag" target="_blank">auto-tag</a>：基于 AI 来为笔记生成标签
<br><br>这里汇集了 Obsidian 中为移动端专门设计，或者主要功能是为了支持移动端的插件。<br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/android-nomedia" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/android-nomedia" target="_blank">android-nomedia</a>：不让仓库图片出现在你的手机相册中
]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/obsidian-社区插件.html</link><guid isPermaLink="false">工具软件/obsidian/Obsidian 社区插件.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 15 Mar 2024 19:35:33 GMT</pubDate></item><item><title><![CDATA[Obsidian 插件：Dataview]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview/" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview/" target="_blank">pkmer.cn</a>
<br>
Obsidian 插件：Dataview 高性能的索引笔记文件，并创建复杂的查询视图，如表格，列表，任务，日历视图
<br>插件 ID：dataview dataview dataview：Obsidian 插件：Dataview 高性能的索引笔记文件，并创建复杂的查询视图，如表格，列表，任务，日历视图<br><br>
**
插件名片
**
插件 ID：dataview<br>
插件作者：Michael Brenan<br>
插件描述：为 Obsidian 提供数据查询能力，这需要学习一些较为简单的语法，但可以实现丰富的查询和组合效果。包括生成表格，标签，跟踪特定的笔记变化，选择具体笔记内容。<br>
插件版本：0.5.55<br>
插件源码地址：<a data-tooltip-position="top" aria-label="https://github.com/blacksmithgu/obsidian-dataview" rel="noopener" class="external-link" href="https://github.com/blacksmithgu/obsidian-dataview" target="_blank">obsidian-dataview</a><br>
插件文档地址：<a data-tooltip-position="top" aria-label="https://blacksmithgu.github.io/obsidian-dataview/" rel="noopener" class="external-link" href="https://blacksmithgu.github.io/obsidian-dataview/" target="_blank">Dataview Doc</a><br>
国内下载地址：<a data-tooltip-position="top" aria-label="https://pkmer.cn/products/plugin/pluginMarket/?dataview" rel="noopener" class="external-link" href="https://pkmer.cn/products/plugin/pluginMarket/?dataview" target="_blank">下载安装</a>
<br>Obsidian 是一款强大的知识管理和笔记应用程序， Dataview 插件为 Obsidian 提供了更高级的数据查询和可视化功能，可帮助用户更好地组织和分析笔记内容。<br><br>Dataview 插件的用途主要有三个方面。<br>首先，Dataview 插件可以用于创建复杂的数据查询和筛选。用户可以使用类似于 SQL 的语法，通过在笔记中标记和注释特定的数据字段或属性，然后利用 Dataview 插件进行搜索、过滤和排序。这样能够很方便地查找特定信息、生成特定条件下的数据集合，或者执行一些统计和计算操作。这对于处理大量信息的复杂项目、管理项目清单或进行定量分析非常有用。<br>其次，Dataview 插件还可以用于创建和展示笔记内容的动态视图。用户可以基于数据的不同维度和属性，使用 Dataview 插件生成列表，表格，日历和任务列表，以便以更直观的方式展示笔记中的内容和关系，并加强对整体知识结构的把握。<br>最后，Dataview 插件还支持自定义模板和样式，使用户能够根据自己的需要进行个性化的数据展示和排版。用户可以使用 Markdown 语法结合强大的 Dataview 指令，根据自己的喜好和需求，定义不同的模板和样式。这使得用户能够更好地控制和定制输出内容的格式和布局，使其更符合个人审美和展示要求。<br>总之，Obsidian 的 Dataview 插件为用户提供了更高级的数据查询、可视化和个性化功能，可以帮助用户更好地组织、分析和展示笔记内容，提升知识管理和信息处理的效率。<br><br>本系列文章分为四个部分：基本语法、实例展示、语法实战、社区实践。<br>
<br>基本语法部分：共有 23 篇文章，从元数据开始讲起，介绍了所有 dataview 查询你会用到操作符、函数。如果你想系统的学习 dataview，不妨从这里一篇篇往下看。
<br>实例展示：共有 20 篇文章，每个操作符和每个函数的简单使用示例和进阶使用实例，不知道怎么用某个操作符或者函数就来这里看看。
<br>语法实战：感谢群友 Windysoul 撰写的 10 篇文章，这部分介绍了一些 dataview 可能的使用场景，附有具体代码。
<br>社区实践：这部分文章会持续更新，目前已经有 25 篇分享了 dataview 使用的技巧。感谢群友 @calmwaves @刘同学 的分享，感谢群友 @秋暖 纠正的大量文字错误。其他愿意分享 dataview 使用经验和技巧的也欢迎放在这里。
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/01---%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/01---%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B" target="_blank">01 - 简单示例</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/10---metadata-%E5%85%83%E6%95%B0%E6%8D%AE" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/10---metadata-%E5%85%83%E6%95%B0%E6%8D%AE" target="_blank">10 - Metadata 元数据</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/11---%E6%B7%BB%E5%8A%A0%E5%85%83%E6%95%B0%E6%8D%AE%E8%87%B3%E6%96%87%E4%BB%B6" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/11---%E6%B7%BB%E5%8A%A0%E5%85%83%E6%95%B0%E6%8D%AE%E8%87%B3%E6%96%87%E4%BB%B6" target="_blank">11 - 添加元数据至文件</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/12---%E6%B7%BB%E5%8A%A0%E5%85%83%E6%95%B0%E6%8D%AE%E8%87%B3%E5%88%97%E8%A1%A8%E5%92%8C%E4%BB%BB%E5%8A%A1" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/12---%E6%B7%BB%E5%8A%A0%E5%85%83%E6%95%B0%E6%8D%AE%E8%87%B3%E5%88%97%E8%A1%A8%E5%92%8C%E4%BB%BB%E5%8A%A1" target="_blank">12 - 添加元数据至列表和任务</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/13---metadata%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/13---metadata%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B" target="_blank">13 - Metadata 的数据类型</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/14---%E9%9A%90%E5%BC%8F%E5%AD%97%E6%AE%B5" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/14---%E9%9A%90%E5%BC%8F%E5%AD%97%E6%AE%B5" target="_blank">14 - 隐式字段</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/15---literals-%E5%AD%97%E9%9D%A2%E5%B8%B8%E9%87%8F" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/15---literals-%E5%AD%97%E9%9D%A2%E5%B8%B8%E9%87%8F" target="_blank">15 - Literals 字面常量</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/20---%E5%9B%9B%E7%A7%8D%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/20---%E5%9B%9B%E7%A7%8D%E6%9F%A5%E8%AF%A2%E6%96%B9%E5%BC%8F" target="_blank">20 - 四种查询方式</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/21---%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/21---%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B" target="_blank">21 - 查询类型</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/22---%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/22---%E6%9F%A5%E8%AF%A2%E5%AD%97%E6%AE%B5" target="_blank">22 - 查询字段</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/23---%E6%93%8D%E4%BD%9C%E7%AC%A6" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/23---%E6%93%8D%E4%BD%9C%E7%AC%A6" target="_blank">23 - 操作符</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/24---%E8%A1%A8%E8%BE%BE%E5%BC%8F" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/24---%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank">24 - 表达式</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/30---function-%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/30---function-%E5%87%BD%E6%95%B0" target="_blank">30 - Function 函数</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/31---dql-%E4%B8%8E-sql-%E7%9A%84%E5%BC%82%E5%90%8C" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/31---dql-%E4%B8%8E-sql-%E7%9A%84%E5%BC%82%E5%90%8C" target="_blank">31 - DQL 与 SQL 的异同</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/32---dataview-%E4%B8%AD%E7%9A%84%E6%95%B0%E5%80%BC%E8%BF%90%E7%AE%97%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/32---dataview-%E4%B8%AD%E7%9A%84%E6%95%B0%E5%80%BC%E8%BF%90%E7%AE%97%E5%87%BD%E6%95%B0" target="_blank">32 - Dataview 中的数值运算函数</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/33---dataview-%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/33---dataview-%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" target="_blank">33 - Dataview 中的对象操纵函数</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/34---dataview-%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/34---dataview-%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" target="_blank">34 - Dataview 中的字符串操纵函数</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/35---dataview-%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%94%A8%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/35---dataview-%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%94%A8%E5%87%BD%E6%95%B0" target="_blank">35 - Dataview 中的实用函数</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/40---faq-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/40---faq-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98" target="_blank">40 - FAQ - 常见问题</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/41---dql-%E4%B8%8E-sql-%E7%9A%84%E5%BC%82%E5%90%8C" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/41---dql-%E4%B8%8E-sql-%E7%9A%84%E5%BC%82%E5%90%8C" target="_blank">41 - DQL 与 SQL 的异同</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/42---iso-8601" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/42---iso-8601" target="_blank">42 - ISO 8601</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/43---yaml-%E5%9F%BA%E7%A1%80" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/43---yaml-%E5%9F%BA%E7%A1%80" target="_blank">43 - YAML 基础</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E8%A1%A8%E6%A0%BC%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E8%A1%A8%E6%A0%BC%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 表格简单查询示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E8%A1%A8%E6%A0%BC%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E8%A1%A8%E6%A0%BC%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 表格进阶查询示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%AE%9A%E5%88%B6%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC%E5%B9%B6%E4%B8%BA%E8%A1%A8%E6%A0%BC%E5%88%97%E6%B7%BB%E5%8A%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E6%A0%B7%E5%BC%8F" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%AE%9A%E5%88%B6%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC%E5%B9%B6%E4%B8%BA%E8%A1%A8%E6%A0%BC%E5%88%97%E6%B7%BB%E5%8A%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E6%A0%B7%E5%BC%8F" target="_blank">Dataview 实战 - 定制你的数据表格并为表格列添加个性化样式</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E5%88%97%E8%A1%A8%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E5%88%97%E8%A1%A8%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 列表简单查询示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E5%88%97%E8%A1%A8%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E5%88%97%E8%A1%A8%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 列表进阶查询示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E4%BB%BB%E5%8A%A1%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E4%BB%BB%E5%8A%A1%E7%AE%80%E5%8D%95%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 任务简单查询示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E4%BB%BB%E5%8A%A1%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E4%BB%BB%E5%8A%A1%E8%BF%9B%E9%98%B6%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 任务进阶查询示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E6%97%A5%E5%8E%86%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview-%E6%97%A5%E5%8E%86%E6%9F%A5%E8%AF%A2%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 日历查询示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E4%BE%8B" target="_blank">Dataview 语法实战 - 自定义排序的简单实例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C%E5%AE%9E%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%92%E5%BA%8F%E8%BF%9B%E9%98%B6%E6%93%8D%E4%BD%9C%E5%AE%9E%E4%BE%8B" target="_blank">Dataview 语法实战 - 自定义排序进阶操作实例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-flatten%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%85%A5%E9%97%A8%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-flatten%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%85%A5%E9%97%A8%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 语法实战 - FLATTEN 操作符入门示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-flatten%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%9B%E9%98%B6%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-flatten%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%9B%E9%98%B6%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 语法实战 - FLATTEN 操作符进阶示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-group-by-%E6%93%8D%E4%BD%9C%E7%AC%A6%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-group-by-%E6%93%8D%E4%BD%9C%E7%AC%A6%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 语法实战 - GROUP BY 操作符简单示例</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-group-by-%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%9B%E9%98%B6%E7%A4%BA%E4%BE%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-group-by-%E6%93%8D%E4%BD%9C%E7%AC%A6%E8%BF%9B%E9%98%B6%E7%A4%BA%E4%BE%8B" target="_blank">Dataview 语法实战 - GROUP BY 操作符进阶示例</a>；
<br><a class="internal-link" data-href="/Pkmer-Docsiew-中的构造函数" href="https://wxkj.asia/mynote/Pkmer-Docsiew-中的构造函数" target="_self" rel="noopener">Dataview 中的构造函数</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/32---dataview-%E4%B8%AD%E7%9A%84%E6%95%B0%E5%80%BC%E8%BF%90%E7%AE%97%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/32---dataview-%E4%B8%AD%E7%9A%84%E6%95%B0%E5%80%BC%E8%BF%90%E7%AE%97%E5%87%BD%E6%95%B0" target="_blank">Dataview 中的数值运算函数</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/33---dataview-%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/33---dataview-%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" target="_blank">Dataview 中的对象、数组操纵函数</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/34---dataview-%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/34---dataview-%E4%B8%AD%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E7%BA%B5%E5%87%BD%E6%95%B0" target="_blank">Dataview 中的字符串操纵函数</a>；
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/35---dataview-%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%94%A8%E5%87%BD%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/35---dataview-%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%94%A8%E5%87%BD%E6%95%B0" target="_blank">Dataview 中的实用函数</a>；
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B1%87%E9%9B%86%E4%B8%BB%E9%A2%98--%E5%85%B3%E4%BA%8E%E7%AC%94%E8%AE%B0%E7%9A%84%E5%88%9B%E5%BB%BA%E6%97%A5%E6%9C%9F%E5%92%8C%E4%B8%BB%E9%A2%98%E7%9A%84%E6%B1%87%E9%9B%86" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B1%87%E9%9B%86%E4%B8%BB%E9%A2%98--%E5%85%B3%E4%BA%8E%E7%AC%94%E8%AE%B0%E7%9A%84%E5%88%9B%E5%BB%BA%E6%97%A5%E6%9C%9F%E5%92%8C%E4%B8%BB%E9%A2%98%E7%9A%84%E6%B1%87%E9%9B%86" target="_blank">汇集主题 -- 关于笔记的创建日期和主题的汇集</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E6%9F%90%E4%B8%80%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E6%9F%90%E4%B8%80%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95" target="_blank">添加某一主题笔记列表 -- 表格用法</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E6%9F%90%E4%B8%80%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E6%9F%90%E4%B8%80%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" target="_blank">添加某一主题笔记列表 -- 基本用法</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E6%9F%90%E4%B8%80%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E6%9F%90%E4%B8%80%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95" target="_blank">添加某一主题笔记列表 -- 进阶用法</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%A1%A8%E6%A0%BC%E7%94%A8%E6%B3%95" target="_blank">添加相同主题笔记列表 -- 表格用法</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95" target="_blank">添加相同主题笔记列表 -- 基本用法</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95" target="_blank">添加相同主题笔记列表 -- 进阶用法</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E5%AE%8C%E5%85%A8%E7%9B%B8%E5%90%8C" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E5%AE%8C%E5%85%A8%E7%9B%B8%E5%90%8C" target="_blank">添加相同主题笔记列表 -- 完全相同</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E6%8C%87%E5%AE%9A%E6%9C%88%E4%BB%BD" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%90%8C%E4%B8%BB%E9%A2%98%E7%AC%94%E8%AE%B0%E5%88%97%E8%A1%A8--%E6%8C%87%E5%AE%9A%E6%9C%88%E4%BB%BD" target="_blank">添加相同主题笔记列表 -- 指定月份</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E6%8F%90%E5%8F%96%E5%B9%B6%E5%B1%95%E7%A4%BA%E7%AC%94%E8%AE%B0%E8%84%9A%E6%B3%A8" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E6%8F%90%E5%8F%96%E5%B9%B6%E5%B1%95%E7%A4%BA%E7%AC%94%E8%AE%B0%E8%84%9A%E6%B3%A8" target="_blank">Dataview 实战 - 提取并展示笔记脚注</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-obsidian-dataview-%E5%BC%95%E7%94%A8%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-obsidian-dataview-%E5%BC%95%E7%94%A8%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87" target="_blank">Dataview 实战 - Obsidian dataview 引用本地图片</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%8F%91%E6%8C%A5%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E9%AD%94%E5%8A%9B-%E6%8E%8C%E6%8F%A1-dataview-%E7%9A%84%E5%9B%9B%E5%A4%A7%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%8F%91%E6%8C%A5%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E9%AD%94%E5%8A%9B-%E6%8E%8C%E6%8F%A1-dataview-%E7%9A%84%E5%9B%9B%E5%A4%A7%E6%9F%A5%E8%AF%A2%E7%B1%BB%E5%9E%8B" target="_blank">Dataview 实战 - 发挥元数据的魔力 - 掌握 Dataview 的四大查询类型</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%AE%9A%E5%88%B6%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC%E5%B9%B6%E4%B8%BA%E8%A1%A8%E6%A0%BC%E5%88%97%E6%B7%BB%E5%8A%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E6%A0%B7%E5%BC%8F" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%AE%9A%E5%88%B6%E4%BD%A0%E7%9A%84%E6%95%B0%E6%8D%AE%E8%A1%A8%E6%A0%BC%E5%B9%B6%E4%B8%BA%E8%A1%A8%E6%A0%BC%E5%88%97%E6%B7%BB%E5%8A%A0%E4%B8%AA%E6%80%A7%E5%8C%96%E6%A0%B7%E5%BC%8F" target="_blank">Dataview 实战 - 定制你的数据表格并为表格列添加个性化样式</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%80%92%E8%AE%A1%E6%97%B6%E6%88%96%E8%80%85%E6%AD%A3%E8%AE%A1%E6%97%B6%E5%88%97%E8%A1%A8" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%80%92%E8%AE%A1%E6%97%B6%E6%88%96%E8%80%85%E6%AD%A3%E8%AE%A1%E6%97%B6%E5%88%97%E8%A1%A8" target="_blank">Dataview 实战 - 制作一个倒计时或者正计时列表</a>
<br><a class="internal-link" data-href="/Pkmer-Docs/10-obsidian/obsidian外观/css-片段/obsidian样式-dataview在table视图下标签出现错位断裂的修复" href="https://wxkj.asia/mynote/Pkmer-Docs/10-obsidian/obsidian外观/css-片段/obsidian样式-dataview在table视图下标签出现错位断裂的修复" target="_self" rel="noopener">Obsidian 样式 - DataView 在 table 视图下标签出现错位断裂的修复</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E9%80%9A%E8%BF%87dataview%E5%88%97%E5%87%BA%E6%A0%87%E7%AD%BE%E6%89%80%E5%9C%A8%E6%AE%B5%E8%90%BD%E5%86%85%E5%AE%B9" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E9%80%9A%E8%BF%87dataview%E5%88%97%E5%87%BA%E6%A0%87%E7%AD%BE%E6%89%80%E5%9C%A8%E6%AE%B5%E8%90%BD%E5%86%85%E5%AE%B9" target="_blank">Dataview 实战 - 通过 Dataview 列出标签所在段落内容</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%AC%94%E8%AE%B0%E9%93%BE%E6%8E%A5" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%AC%94%E8%AE%B0%E9%93%BE%E6%8E%A5" target="_blank">Dataview 实战 - 如何不显示笔记链接</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%80%92%E8%AE%A1%E6%97%B6%E6%88%96%E8%80%85%E6%AD%A3%E8%AE%A1%E6%97%B6%E5%88%97%E8%A1%A8" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%80%92%E8%AE%A1%E6%97%B6%E6%88%96%E8%80%85%E6%AD%A3%E8%AE%A1%E6%97%B6%E5%88%97%E8%A1%A8" target="_blank">Dataview 实战 - 制作一个倒计时或者正计时列表</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E6%9F%A5%E8%AF%A2%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E6%9F%A5%E8%AF%A2%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E4%B8%AD%E7%9A%84%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87" target="_blank">Dataview 实战 - 如何查询一个文件中的所有图片</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E5%8C%85%E5%90%AB%E7%89%B9%E5%AE%9A%E6%96%87%E5%AD%97%E7%9A%84%E6%96%87%E4%BB%B6%E6%88%96%E5%85%83%E6%95%B0%E6%8D%AE" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E5%8C%85%E5%90%AB%E7%89%B9%E5%AE%9A%E6%96%87%E5%AD%97%E7%9A%84%E6%96%87%E4%BB%B6%E6%88%96%E5%85%83%E6%95%B0%E6%8D%AE" target="_blank">Dataview 实战 - 列出包含特定文字的文件或元数据</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%A1%A8%E7%9A%84%E5%88%97%E4%B8%AD%E6%98%BE%E7%A4%BA%E4%B8%A4%E4%B8%AA%E5%85%83%E6%95%B0%E6%8D%AE%E5%AD%97%E6%AE%B5" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E8%A1%A8%E7%9A%84%E5%88%97%E4%B8%AD%E6%98%BE%E7%A4%BA%E4%B8%A4%E4%B8%AA%E5%85%83%E6%95%B0%E6%8D%AE%E5%AD%97%E6%AE%B5" target="_blank">Dataview 实战 - 在同一个表的列中显示两个元数据字段</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E8%AE%A9-dataview-%E8%AF%86%E5%88%AB%E4%B8%8D%E5%90%8C%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%97%A5%E6%9C%9F" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E8%AE%A9-dataview-%E8%AF%86%E5%88%AB%E4%B8%8D%E5%90%8C%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%97%A5%E6%9C%9F" target="_blank">Dataview 实战 - 如何让 Dataview 识别不同格式的日期</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E7%BB%9F%E8%AE%A1%E5%B1%9E%E6%80%A7%E5%80%BC%E4%B8%BA%E7%A9%BA%E7%9A%84%E5%80%BC" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E7%BB%9F%E8%AE%A1%E5%B1%9E%E6%80%A7%E5%80%BC%E4%B8%BA%E7%A9%BA%E7%9A%84%E5%80%BC" target="_blank">Dataview 实战 - 如何统计属性值为空的值</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E9%80%9A%E8%BF%87dataview%E5%88%97%E5%87%BA%E5%85%B3%E9%94%AE%E5%AD%97%E6%89%80%E5%9C%A8%E7%9A%84%E8%A1%8C%E5%92%8C%E8%A1%8C%E6%95%B0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E9%80%9A%E8%BF%87dataview%E5%88%97%E5%87%BA%E5%85%B3%E9%94%AE%E5%AD%97%E6%89%80%E5%9C%A8%E7%9A%84%E8%A1%8C%E5%92%8C%E8%A1%8C%E6%95%B0" target="_blank">Dataview 实战 - 通过 Dataview 列出关键字所在的行和行数</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E5%9C%A8%E6%9F%A5%E8%AF%A2%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BE%93%E5%87%BA" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E5%9C%A8%E6%9F%A5%E8%AF%A2%E4%B8%AD%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BE%93%E5%87%BA" target="_blank">Dataview 实战 - 如何在查询中创建自定义输出</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E4%B8%8E%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E6%9C%89%E7%9B%B8%E5%90%8C%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%87%E4%BB%B6" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E4%B8%8E%E5%BD%93%E5%89%8D%E6%96%87%E4%BB%B6%E6%9C%89%E7%9B%B8%E5%90%8C%E5%85%83%E6%95%B0%E6%8D%AE%E7%9A%84%E6%96%87%E4%BB%B6" target="_blank">Dataview 实战 - 列出与当前文件有相同元数据的文件</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E8%8E%B7%E5%8F%96%E5%89%8D%E5%90%8E%E7%9A%84%E6%97%A5%E8%AE%B0%E9%93%BE%E6%8E%A5%EF%BC%88%E4%B8%8D%E4%B8%80%E5%AE%9A%E6%98%AF%E6%98%A8%E5%A4%A9%EF%BC%89" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E8%8E%B7%E5%8F%96%E5%89%8D%E5%90%8E%E7%9A%84%E6%97%A5%E8%AE%B0%E9%93%BE%E6%8E%A5%EF%BC%88%E4%B8%8D%E4%B8%80%E5%AE%9A%E6%98%AF%E6%98%A8%E5%A4%A9%EF%BC%89" target="_blank">Dataview 实战 - 获取前后的日记链接（不一定是昨天）</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E8%8E%B7%E5%8F%96%E6%9C%80%E6%96%B0%E6%89%93%E5%BC%80%E7%9A%84%E4%BB%BB%E5%8A%A1" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E8%8E%B7%E5%8F%96%E6%9C%80%E6%96%B0%E6%89%93%E5%BC%80%E7%9A%84%E4%BB%BB%E5%8A%A1" target="_blank">Dataview 实战 - 获取最新打开的任务</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%B0%86%E4%B8%80%E5%91%A8%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E6%98%BE%E7%A4%BA%E4%B8%BAemojis(%E4%B9%A0%E6%83%AF%E8%B7%9F%E8%B8%AA)" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%B0%86%E4%B8%80%E5%91%A8%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE%E6%98%BE%E7%A4%BA%E4%B8%BAemojis(%E4%B9%A0%E6%83%AF%E8%B7%9F%E8%B8%AA)" target="_blank">Dataview 实战 - 将一周的元数据显示为 emojis(习惯跟踪)</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E9%93%BE%E6%8E%A5%E9%A1%B5%E9%9D%A2" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E4%B8%8D%E5%AD%98%E5%9C%A8%E7%9A%84%E9%93%BE%E6%8E%A5%E9%A1%B5%E9%9D%A2" target="_blank">Dataview 实战 - 列出不存在的链接页面</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E6%AF%8F%E5%B9%B4%E7%9A%84%E6%9F%90%E4%B8%AA%E6%9C%88%E4%BB%BD%E7%9A%84%E6%A3%80%E7%B4%A2%E7%BB%93%E6%9E%9C%E5%BA%94%E8%AF%A5%E6%80%8E%E4%B9%88%E5%86%99" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E6%AF%8F%E5%B9%B4%E7%9A%84%E6%9F%90%E4%B8%AA%E6%9C%88%E4%BB%BD%E7%9A%84%E6%A3%80%E7%B4%A2%E7%BB%93%E6%9E%9C%E5%BA%94%E8%AF%A5%E6%80%8E%E4%B9%88%E5%86%99" target="_blank">Dataview 实战 - 列出每年的某个月份的检索结果应该怎么写</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E4%BB%A5%E6%9F%90%E4%B8%AA%E5%AD%97%E6%AF%8D%E5%BC%80%E5%A4%B4%E7%9A%84%E6%96%87%E4%BB%B6%E6%88%96%E5%85%83%E6%95%B0%E6%8D%AE" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E4%BB%A5%E6%9F%90%E4%B8%AA%E5%AD%97%E6%AF%8D%E5%BC%80%E5%A4%B4%E7%9A%84%E6%96%87%E4%BB%B6%E6%88%96%E5%85%83%E6%95%B0%E6%8D%AE" target="_blank">Dataview 实战 - 列出以某个字母开头的文件或元数据</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E7%9A%84%E6%95%B0%E7%9B%AE" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E5%A6%82%E4%BD%95%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E7%9A%84%E6%95%B0%E7%9B%AE" target="_blank">Dataview 实战 - 如何查询结果的数目</a>
<br><a class="internal-link" data-href="/Pkmer-Docs/10-obsidian/obsidian使用技巧/每日字数的热力图" href="https://wxkj.asia/mynote/Pkmer-Docs/10-obsidian/obsidian使用技巧/每日字数的热力图" target="_self" rel="noopener">Dataview 实战 - 每日字数的热力图</a>
<br><a class="internal-link" data-href="/Pkmer-Docs/10-obsidian/obsidian外观/css-片段/obsidian样式-可滚动的dataview表格视图" href="https://wxkj.asia/mynote/Pkmer-Docs/10-obsidian/obsidian外观/css-片段/obsidian样式-可滚动的dataview表格视图" target="_self" rel="noopener">Dataview 实战 - 给 Dataview 加个滚动条</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E8%BF%9B%E5%BA%A6%E6%9D%A1" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E7%A4%BE%E5%8C%BA%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C/dataview%E5%AE%9E%E6%88%98-%E8%BF%9B%E5%BA%A6%E6%9D%A1" target="_blank">Dataview 实战 - 进度条</a>
<br><a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E7%89%B9%E5%AE%9A%E6%A0%87%E9%A2%98%E4%B8%8B%E7%9A%84%E5%85%83%E7%B4%A0" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%E7%A4%BE%E5%8C%BA%E6%8F%92%E4%BB%B6/dataview/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98/dataview%E8%AF%AD%E6%B3%95%E5%AE%9E%E6%88%98-%E5%88%97%E5%87%BA%E7%89%B9%E5%AE%9A%E6%A0%87%E9%A2%98%E4%B8%8B%E7%9A%84%E5%85%83%E7%B4%A0" target="_blank">Dataview 语法实战 - 列出特定标题下的元素</a>
<br>本文链接：<a rel="noopener" class="external-link" href="https://pkmer.cn/show/20230501110213" target="_blank">https://pkmer.cn/show/20230501110213</a>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/obsidian-插件：dataview.html</link><guid isPermaLink="false">工具软件/obsidian/Obsidian 插件：Dataview.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 16 Mar 2024 06:10:49 GMT</pubDate></item><item><title><![CDATA[Mermaid 语法 - 流程图]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://pkmer.cn/Pkmer-Docs/02-%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80/mermaid/mermaid%E8%AF%AD%E6%B3%95-%E6%B5%81%E7%A8%8B%E5%9B%BE/" rel="noopener" class="external-link" href="https://pkmer.cn/Pkmer-Docs/02-%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80/mermaid/mermaid%E8%AF%AD%E6%B3%95-%E6%B5%81%E7%A8%8B%E5%9B%BE/" target="_blank">pkmer.cn</a>
<br>
Mermaid 语法，流程图，节点，连接——所有流程图 均由节点，几何形状和连线，箭头或线条组成。
<br>mermaid<br><br>插件 ID：mermaid%E8%AF%AD%E6%B3%95-%E6%B5%81%E7%A8%8B%E5%9B%BE mermaid%E8%AF%AD%E6%B3%95-%E6%B5%81%E7%A8%8B%E5%9B%BE mermaid%E8%AF%AD%E6%B3%95 %E6%B5%81%E7%A8%8B%E5%9B%BE：Mermaid 语法，流程图，节点，连接<br><br>所有流程图 均由节点，几何形状和连线，箭头或线条组成。mermaid 代码定义了这些节点和边的组成和交互方式。<br>你还可以选择不同的箭头类型，多方向箭头以及与子图之间的链接。<br>
注意：请勿将关键字 end 用于流程图的节点名称。将所有或任何一个字母大写，以防止流程图中断，例如 “End” 或 “END”。
<br><br>```mermaid
graph LR
    id
复制<br>
### 一个包含文本的节点

也可以在矩形框中设置与 id 不同的文本。如果多次设定文本，节点会使用最后一段文本用于显示。另外，如果稍后为节点定义连线，则可以省略文本定义。渲染矩形框时将使用之前定义的文本。

复制<br><br>
### 图

这条语句声明了流程图的方向。

下述代码声明了流程图是从上到下的（`TD` 或 `TB`）。

复制<br><br>
下述代码声明了流程图是从左到右的（`LR`）。

复制<br><br><br>可设置的流程方向有：<br>
<br>TB - 从上到下
<br>TD - 从上到下（和 TB 相同）
<br>BT - 从下到上
<br>RL - 从右到左
<br>LR - 从左到右
<br><br><br>```mermaid
graph LR
    id1(mermaid)
复制<br>
#### 运动场形状节点

复制<br><br>
#### 子程序形状节点

复制<br><br>
#### 圆柱形节点

#### 圆形节点

复制<br><br>
#### 鱼尾旗形状节点

复制<br><br>
目前只有向右的鱼尾旗形状可用

#### 菱形节点

复制<br><br>
#### 六边形节点

复制<br><br>
#### 平行四边形节点

复制<br><br>
#### 平行四边形节点（不同方向）

复制<br><br>
#### 梯形节点（下宽上窄）

复制<br><br>
#### 梯形节点（上宽下窄）

复制<br><br>
### 节点之间的连接

节点可以用连线进行连接。可以用不同类型的边线连接节点或将文字附加在连线上。

#### 带箭头的连接

复制<br><br>
#### 开放式连接

复制<br><br>
#### 带文字的连接

复制<br><br>
或者

复制<br><br>
#### 带文字和箭头的连接

复制<br><br>
或者

#### 虚线连接

复制<br><br>
#### 带文字的虚线连接

复制<br><br>
#### 加粗的连接

复制<br><br>
#### 带文字的加粗连接

复制<br><br>
#### 一串连接

可以在一行中声明多个连接：

复制<br><br>
也可以在同一行中声明多个节点连接：

复制<br><br>
可以以非常简洁的方式描述依赖关系，如下所示一行代码：

复制<br><br>
同样的图形，如果使用基本语法，需要四行代码。但也请注意，这可能会使流程图难以以 Markdown 形式阅读。我想到了瑞典语单词 `lagom`，意思是：不要太多也不要太少。

下面的代码和上面的一行代码等价：

复制<br><br>
#### 新的箭头类型

以下是支持的新类型的箭头：

复制<br><br>
#### 多方向箭头

复制<br><br>
#### 连接线的最小长度

流程图中的每个节点最终被分配到所呈现的图形中的一个级别，即被分配到垂直或水平级别 (取决于流程图的方向)，基于它所连接的节点。默认情况下，连接可以跨越任意数量的级别，但是您可以通过在连接定义中添加额外的破折号来指定一个连接比其他连接更长。

在下面的示例中，从节点 B 到节点 E 的连接中添加了两个额外的破折号，因此它比常规连接跨越了多两个级别：

复制<br><br>
&gt; ** 注意：** 渲染引擎可能会使连接长于定义的级别，以适应其他连接。

当连接标签写在连接的中间时，必须在连接的右侧添加额外的破折号。下面的例子和上述等价：

复制<br><br>
对于虚线或加粗的连接线，使用的字符看上去是同样的形状，如下表所示：

&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;&lt;strong&gt;长度&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/th&gt;&lt;th&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/th&gt;&lt;/tr&gt;&lt;/thead&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;普通&lt;/td&gt;&lt;td&gt;&lt;code&gt;---&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;----&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;-----&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;普通带箭头&lt;/td&gt;&lt;td&gt;&lt;code&gt;--&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;---&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;----&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;加粗&lt;/td&gt;&lt;td&gt;&lt;code&gt;===&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;====&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;=====&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;加粗带箭头&lt;/td&gt;&lt;td&gt;&lt;code&gt;==&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;===&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;====&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;虚线&lt;/td&gt;&lt;td&gt;&lt;code&gt;-.-&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;-..-&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;-...-&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;虚线带箭头&lt;/td&gt;&lt;td&gt;&lt;code&gt;-.-&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;-..-&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;td&gt;&lt;code&gt;-...-&amp;gt;&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;

中断语法的特殊字符
---------

可以将文本放在引号中，以渲染会引起歧义的文字。如下例所示：

复制<br><br>
### 转义字符的实体代码

可以使用下述示例的语法转义字符：

复制<br><br>```mermaid
graph LR
    A["一个双引号:#quot;"] --&gt;B["一个十进制数字表示的符号:#9829;"]

复制<br>数字为十进制，因此 # 符号可以编码为 #35;。此外，也支持使用 HTML 字符名称。<br><br>```mermaid
subgraph title
    graph definition
end
复制<br>
Syntax error in graphmermaid version 9.4.3

一个例子：

复制<br><br>
Loading graph...

您还可以为子图设置 id：

复制<br><br>
Loading graph...

多子图流转
-----

在多个子图中，可以在子图之间设置连接线，如下面的例子所示：

复制<br><br>
Loading graph...

子图的方向
-----

在多个流程图中，您可以使用方向语句来设置子图将呈现的方向，就像下面的例子所示：

复制<br><br>
Loading graph...

交互
--

可以在节点上定义点击时跳转到超链接。

默认情况下，超链接在同一浏览器选项卡 / 窗口中打开。可以通过在 click 定义中添加链接目标来更改此设置 （支持 `_self`，`_blank`，`_parent` 和 `_top`）：

复制<br><br>
Loading graph...

注释
--

可以在流程图中输入注释，解析器将忽略该注释。注释需要在独立的行内，并且必须以 `%%` 开头。注释开始到下一个换行符之后的任何文本都将被视为注释，包括任何流程图语法：

复制<br><br>
Loading graph...

样式和类 class
----------

### 连接线样式

可以对连接线进行样式设置。例如，您可能希望对流程中倒退的连接线进行样式设置。因为连接不像节点那样可以设置 id，所以需要其他确定连接应附加到哪种样式的方法。

使用在流程图中定义连接的序号指定连接。在下面的示例中，在 linkStyle 语句中定义的样式将属于图中的第四个连接：

复制<br>Error parsing Mermaid diagram!

No diagram type detected matching given configuration for text: linkStyle 3 stroke:#ff3,stroke-width:4px,color:red;
复制<br>
Loading graph...

### 节点样式

可以为节点定义指定的样式，例如更粗的边框或不同的背景色：

复制<br><br>
Loading graph...

### 类 Class

比每次定义样式更方便的是定义一个样式 class，并将该 class 添加到不同的节点上。

class 定义如下所示：

复制<br>Error parsing Mermaid diagram!

No diagram type detected matching given configuration for text: classDef className fill:#f9f,stroke:#333,stroke-width:4px
复制<br>
Loading graph...

将 class 添加到节点的示例如下：

复制<br>Error parsing Mermaid diagram!

No diagram type detected matching given configuration for text: class nodeId1 className;
复制<br>
Loading graph...

也可以用一条语句将一个 class 添加到一系列的节点上：

Loading graph...

添加 class 的一种更短的形式是使用 `:::` 运算符将 classname 添加到节点，如下所示：

复制<br><br>
Loading graph...

### 默认 class

如果一个 class 被命名为 default，它的样式将被分配给所有没有指定 class 的节点。

复制<br>Error parsing Mermaid diagram!

No diagram type detected matching given configuration for text: classDef default fill:#f9f,stroke:#333,stroke-width:4px
复制<br>
Loading graph...

*   在图的声明中，语句现在也可以在没有分号的情况下结束。用分号结束图形语句是可选的。因此，下面的图声明与图的过往声明同样有效。
*   在顶点和连接之间允许使用单个空格。但是，顶点及其文本与连接及其文本之间不应存在任何空格。图声明的旧语法也将起作用，因此此新功能是可选的，并被引入以提高可读性。

下面是流程图边线的新的声明方式，和过去的语法同样有效。

复制<br><br>
Loading graph...
复制]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/mermaid-语法-流程图.html</link><guid isPermaLink="false">工具软件/obsidian/Mermaid 语法 - 流程图.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 14 Mar 2024 18:42:39 GMT</pubDate></item><item><title><![CDATA[Mac下fswatch+shell实现简悦导出markdown到obsidian]]></title><description><![CDATA[ 
 配置下载文件的路径和仓库文件夹路径，通过脚本自动将下载的Markdown文件移动到指定文件夹中，并可选择手动或自动保存路径]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/mac下fswatch+shell实现简悦导出markdown到obsidian.html</link><guid isPermaLink="false">工具软件/obsidian/Mac下fswatch+shell实现简悦导出markdown到obsidian.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 02 May 2024 04:40:11 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/mac+fswatch+shell实现简悦markdown导出到obsidian-20240303122736440.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/mac+fswatch+shell实现简悦markdown导出到obsidian-20240303122736440.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[DataView 入门教程]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:标签" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#标签</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:标签" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#标签</a> 
 <br><br>```dataview
&lt;QUERY-TYPE&gt; &lt;WITHOUT ID&gt; &lt;字段&gt;
FROM &lt;来源&gt;
&lt;WHERE&gt; &lt;条件表达式&gt;
&lt;SORT&gt; &lt;排序依据 排序方式&gt;
&lt;GROUP BY&gt; &lt;分组依据&gt;
&lt;LIMIT&gt; &lt;限定显示记录数&gt;
&lt;FLATTEN&gt; &lt;拆分表达式&gt;
```
复制<br><br><br>以表格的形式显示符合查询条件的文件清单和相关属性。<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  aliases as "别名",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
SORT file.cday DESC
```
复制<br><br>以无序列表的形式显示符合查询条件的文件清单。<br>```dataview
LIST
FROM "200-学习箱/210-知识库搭建"
```
复制<br><br>仅以任务列表的形式显示符合查询条件的任务列表。<br>```dataview
TASK
FROM "200-学习箱/210-知识库搭建"
```
复制<br><br>以日历视图的形式显示查询结果，日历现在还有个 Bug，经常会显示两个重复月份的日历。<br>```dataview
CALENDAR file.cday
WHERE contains(file.name, "PicGo")
```
//必须加日期型的字段作为日历中的定位
CALENDAR file.cday
WHERE contains(file.name, "PicGo")
复制<br><br><br><br><br>:&nbsp;之前的为属性名，直接使用，不需要&nbsp;file.属性<br><br><br>查询实例<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  aliases as "别名",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
SORT file.cday DESC
```
复制<br><br><br>```dataview
LIST
FROM #DataView 
```
复制<br><br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  aliases as "别名",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
SORT file.cday DESC
```
TABLE WITHOUT ID
  file.link as "文件名称",
  aliases as "别名",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
SORT file.cday DESC
```
复制<br><br>```dataview
TABLE WITHOUT ID
  file.link as "文件名",
  file.tasks.text as "任务名",
  choice(file.tasks.completed, "是", "否") as "已完成"
FROM "200-学习箱/210-知识库搭建/Markdown for macOS"
```
复制<br><br>```dataview
LIST
FROM [[内部文件链接]]   
```
//查询 [[内部文件链接]] 被哪些文件链接，即入链

```dataview
LIST
FROM outgoing([[Markdown for macOS]]) 
```
复制<br><br>即将 1、2、4 来源联合起来使用<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  aliases as "别名",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建" and outgoing([[Markdown for macOS]])
SORT file.cday DESC
```
复制<br><br><br>
<br>1. 包含指定文本
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE icontains(file.name,"obsidian")
```

// contains(file.name,"obsidian") 大小写敏感
// icontains(file.name,"obsidian") 大小写不敏感
复制<br>
<br>2. 不包含指定文本
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE !icontains(file.name,"obsidian")
```
复制<br>
<br>3. 以特定文本开头
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE startswith(file.name,"Obsidian")
```
复制<br>
<br>4. 以特定文本结尾
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE endswith(file.name,"COS")
```
复制<br>
<br>5. 英文大小写转换
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE endswith(lower(file.name),"cos")
```

```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE startswith(upper(file.name),"OBSIDIAN")
```
复制<br><br>
<br>1. 等于与不等于
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE number1 = 9
```

```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE !(number1 = 9)
```
复制<br>
<br>2. 大于或大于等于
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE number1 &gt;= 8
```
复制<br><br>
<br>3. 小于或小于等于
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE number1 &lt;= 9
```

// 当文件 YAML 没有定义该属性时，该属性值默认为 0
复制<br>
<br>4. 数字的四则运算
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE number1 - number1 &lt;= 0
```
复制<br><br>
<br>1. 日期的格式化
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  dateformat(file.ctime,"HH:mm: ss") as "创建时间",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE file.cday &lt;= date("2023-02-20")
```

//日期格式化通常只作为输出显示格式定义，不作为条件
复制<br>
<br>2. 等于指定日期
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE file.cday = date("2023-02-19")
```
复制<br>
<br>3. 大于等于指定日期
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE file.cday &gt;= date("2023-02-19")
```
复制<br>
<br>4. 小于等于指定日期
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE file.cday &lt;= date("2023-02-20")
```
复制<br>
<br>5. 常用的日期属性
<br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE file.cday.month = date(today).month
```

// year
// month
// day
// date (today)
// date (now)
// date (tomorrow)
// date (yesterday)
// date (sow)
// date (eow)

```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE file.cday &gt;= date(sow) and file.cday &lt;= date(eow)
```
复制<br><br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE file.starred
```

```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE !file.starred
```

```dataview
TASK
WHERE !fullyCompleted
```
// 如果本级任务未完成，下级任务已完成，会将下级已完成的一起显示

```dataview
TASK
WHERE fullyCompleted
```
复制<br>Boolean 类字段的格式化，就是将 true、false 转换为更偏于用户阅读的是 / 否，或者是 yes / no<br><br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE contains(tags,"DataView")
```

```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE !contains(tags,"DataView")
```
// 如果 YAML 中没有定议 tags，则默认为空
复制<br><br>```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE contains(file.outlinks, [[内部文件链接]])
```

```dataview
TABLE WITHOUT ID
  file.link as "文件名称",
  dateformat(file.cday,"yyyy-MM-dd") as "创建日期",
  choice(file.starred, "是", "否") as "加星"
FROM "200-学习箱/210-知识库搭建"
WHERE contains(file.inlinks, [[Markdown for macOS]])
```
复制<br><br>&lt;条件1&gt; and &lt;条件2&gt;

1. 只满足&lt;条件1&gt;，不会被显示到查询结果中
2. 只满足&lt;条件2&gt;，不会被显示到查询结果中
3. 同时满足&lt;条件1&gt;和&lt;条件2&gt;，会显示到查询结果中
复制<br><br>&lt;条件1&gt; or &lt;条件2&gt;

1. 只满足&lt;条件1&gt;，会被显示到查询结果中
2. 只满足&lt;条件2&gt;，会被显示到查询结果中
3. 同时满足&lt;条件1&gt;和&lt;条件2&gt;，会显示到查询结果中
复制<br><br>仅发生在需要同时运用 and 和 or 两个边接符时，才需要使用括号定义优先级

（&lt;条件1&gt; or &lt;条件2&gt;) and &lt;条件3&gt;

1. 只满足&lt;条件1&gt;，不会被显示到查询结果中
2. 只满足&lt;条件2&gt;，不会被显示到查询结果中
3. 只满足&lt;条件3&gt;，不会被显示到查询结果中
4. 同时满足&lt;条件1&gt;和&lt;条件2&gt;，不会显示到查询结果中
5. 同时满足&lt;条件1&gt;和&lt;条件3&gt;，会显示到查询结果中
6. 同时满足&lt;条件2&gt;和&lt;条件3&gt;，会显示到查询结果中
7. 同时满足&lt;条件1&gt;、&lt;条件2&gt;和&lt;条件3&gt;，会显示到查询结果中
仅发生在需要同时运用 and 和 or 两个边接符时，才需要使用括号定义优先级

（&lt;条件1&gt; and &lt;条件2&gt;) or &lt;条件3&gt;

1. 只满足&lt;条件1&gt;，不会被显示到查询结果中
2. 只满足&lt;条件2&gt;，不会被显示到查询结果中
3. 只满足&lt;条件3&gt;，会被显示到查询结果中
4. 同时满足&lt;条件1&gt;和&lt;条件2&gt;，会显示到查询结果中
5. 同时满足&lt;条件1&gt;和&lt;条件3&gt;，会显示到查询结果中
6. 同时满足&lt;条件2&gt;和&lt;条件3&gt;，会显示到查询结果中
7. 同时满足&lt;条件1&gt;、&lt;条件2&gt;和&lt;条件3&gt;，会显示到查询结果中
复制<br>官方文档：<br><a data-tooltip-position="top" aria-label="https://blacksmithgu.github.io/obsidian-dataview/" rel="noopener" class="external-link" href="https://blacksmithgu.github.io/obsidian-dataview/" target="_blank">Dataview</a>]]></description><link>https://wxkj.asia/mynote/工具软件/obsidian/dataview-入门教程.html</link><guid isPermaLink="false">工具软件/obsidian/DataView 入门教程.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 07 May 2024 06:10:48 GMT</pubDate></item><item><title><![CDATA[在 Mac 上安排关机定时器的]]></title><description><![CDATA[ 
 <br>在 Mac 上安排关机定时器的 3 种方法<br>如果您经常忘记在晚上关闭 Mac 或想要确保它在特定时间自动关闭，本文适合您。 在 Mac 上安排关机计时器是一个简单的过程，可以使用多种方法来完成。 本文将列出安排 Mac 关机的所有可能方法。<br>无论您是想节省能源还是减少 Mac 的磨损，只需正确按照以下步骤操作即可。 让我们从安排关机的最常见方式开始。<br><br>电源调度功能内置于 Mac 中，使您能够在方便时在 Mac 上设置关机定时器。 但是，对于 macOS Ventura，Apple 从系统偏好设置中删除了节能器选项，让您可以安排唤醒、睡眠、启动和关闭。<br>因此，如果您在 Monterey 或更早版本上运行 Mac，请按照以下步骤操作，如果您运行的是 macOS Ventura，请转到下一个方法。<br>第1步：单击桌面上的 Apple 徽标，然后从下拉菜单中选择系统偏好设置。<br>笔记：或者，按键盘上的“Command + Space”键，键入 系统偏好设置， 并按下回车键。<br>第2步： Go 节能器。<br><img alt="找到节能器" src="https://digitalixy.com/image/1673974919.jpg" referrerpolicy="no-referrer"><br>步骤 3：选择计划选项。<br><img alt="选择计划选项" src="https://digitalixy.com/image/1673974955.png" referrerpolicy="no-referrer"><br>第四步：指定日期、时间和要执行的操作。<br><img alt="指定要执行的日期、时间和操作" src="https://digitalixy.com/image/1673974998.png" referrerpolicy="no-referrer"><br>步骤 5: 最后点击应用。<br><img alt="点击应用" src="https://digitalixy.com/image/1673975036.png" referrerpolicy="no-referrer"><br>就是这样。 您已成功安排 Mac 在指定时间关机。 如果您觉得这些步骤太长而无法遵循，可以使用一些方便的应用程序，例如 <a data-tooltip-position="top" aria-label="https://apps.apple.com/app/timer-clock/id427066347?ign-mpt=uo%3D8" rel="noopener" class="external-link" href="https://apps.apple.com/app/timer-clock/id427066347?ign-mpt=uo%3D8" target="_blank">定时器时钟</a> （付费）和 <a data-tooltip-position="top" aria-label="https://apps.apple.com/in/app/almighty-powerful-tweaks/id1576440429?mt=12" rel="noopener" class="external-link" href="https://apps.apple.com/in/app/almighty-powerful-tweaks/id1576440429?mt=12" target="_blank">全能 – 强大的调整</a> （免费增值）相对容易地完成工作。<br>也就是说，如果您使用的是 macOS Ventura，或者想在不触及“节能器”选项的情况下执行相同的操作，请转到下一个方法。<br>第1步：按键盘上的“Command + Space”键，键入 终端然后按回车键。<br>笔记： 你可以 打开终端 以各种方式，例如从 LaunchPad、应用程序文件夹等。<br><img alt="类型终端" src="https://digitalixy.com/image/1673975078.png" referrerpolicy="no-referrer"><br>第2步：键入以下命令并按回车键。<br>sudo shutdown -h +30<br>笔记：“-h”可让您设置计时器，而“+30”是 Mac 关机前的分钟数。 您可以添加任意小时数，但请务必将其转换为分钟数。<br><img alt="输入以下命令并按 Return" src="https://digitalixy.com/image/1673975117.png" referrerpolicy="no-referrer"><br>步骤 3: Enter 您的用户密码进行身份验证，然后按回车键。<br>笔记：当您输入密码时，它不会显示。<br><img alt="Enter  您的用户密码" src="https://digitalixy.com/image/1673975154.png" referrerpolicy="no-referrer"><br>你有它。 如果您做对了所有事情，终端将确认并设置您的关机计时器。<br><img alt="为进程分配进程 ID" src="https://digitalixy.com/image/1673975190.png" referrerpolicy="no-referrer"><br>它还会为进程分配一个进程 ID (PID) 编号。 请记下 ID 号，因为它在禁用关机计时器时很有用。 如果这些步骤对您来说太复杂，可以使用第三方应用程序来简化流程。 继续阅读。<br><br>设置用于关闭 Mac 的桌面快捷方式是一次性过程，非常简单。 按照以下说明进行操作。<br>第1步：按键盘上的“Command + Space”键，键入 文本编辑， 并按下回车键。<br><img alt="输入文本编辑" src="https://digitalixy.com/image/1673975222.png" referrerpolicy="no-referrer"><br>第2步：单击新建文档。<br><img alt="单击新建文档" src="https://digitalixy.com/image/1673975252.png" referrerpolicy="no-referrer"><br>它将在视图中打开一个空白文本文档。<br>步骤 3：按“Command+Shift+T”访问明文字段。<br><img alt="在视图中打开一个空白文本文档" src="https://digitalixy.com/image/1673975285.png" referrerpolicy="no-referrer"><br>第四步：键入以下命令，然后按 Return 键两次。<br>#!/bin/bash<br><img alt="输入以下命令" src="https://digitalixy.com/image/1673975317.png" referrerpolicy="no-referrer"><br>步骤 5：键入以下命令。<br>sudo shutdown -h +30  <br>笔记：“-h”可让您设置计时器，而“+30”是 Mac 关机前的分钟数。 您可以添加任意小时数，但请务必将其转换为分钟数。  <br><img alt="Enter  命令或复制它" src="https://digitalixy.com/image/1673975351.png" referrerpolicy="no-referrer"><br>步骤 6：最后，按“Command+S”来 使用简单的名称和目的地（首选桌面）保存文件。 取消选中“如果未提供扩展名，请使用”.txt“。” 选项并点击 Save.<br><img alt="按“Command+S”保存文件" src="https://digitalixy.com/image/1673975384.png" referrerpolicy="no-referrer"><br>现在，要使文件可执行，请继续执行以下步骤。<br>步骤 7: 按键盘上的“Command + Space”键，键入 终端然后按回车键。<br><img alt="类型终端" src="https://digitalixy.com/image/1673975078.png" referrerpolicy="no-referrer"><br>步骤 8：将您创建的 .txt 文件拖放到终端上，然后按回车键。<br><img alt="拖放 .txt 文件" src="https://digitalixy.com/image/1673975452.png" referrerpolicy="no-referrer"><br><img alt="按返回" src="https://digitalixy.com/image/1673975489.png" referrerpolicy="no-referrer"><br>步骤 9: Enter 您的用户密码，然后按回车键。<br>笔记：当您输入密码时，不会显示密码。<br><img alt="Enter  您的用户密码" src="https://digitalixy.com/image/1673975526.png" referrerpolicy="no-referrer"><br>之后，关机计时器将开始计时，您的 Mac 将在设定的时间后关机。<br><img alt="关机定时器将开始" src="https://digitalixy.com/image/1673975561.png" referrerpolicy="no-referrer"><br>既然您知道如何启用关机计时器，那么了解如何禁用它同样重要。 继续阅读。<br><br>关闭关机定时器很容易，只需几个步骤。 您所要做的就是终止进程 ID (PID)。 请按照以下步骤操作。<br>第1步：按键盘上的“Command + Space”键，键入 终端然后按回车键。<br><img alt="类型终端" src="https://digitalixy.com/image/1673975078.png" referrerpolicy="no-referrer"><br>第2步：键入以下命令并按回车键。<br>sudo kill [pid number]<br>笔记：如果您不记得 PID 编号，请键入 sudo killall 关机。 它将禁用 Mac 上的所有活动关机计时器。<br><img alt="Enter  带有 pid 的命令" src="https://digitalixy.com/image/1673975631.png" referrerpolicy="no-referrer"><br>步骤 3: Enter 您的用户密码，然后按回车键。<br>笔记：当您输入密码时，不会显示密码。<br><img alt="Enter  您的用户密码，然后按 Return" src="https://digitalixy.com/image/1673975665.png" referrerpolicy="no-referrer"><br>你有它。 您已禁用 Mac 的定时关机。 如果您有任何疑问，请查看下面的常见问题解答部分。<br><br>1. 如果不关闭 Mac 会怎样？<br>只要您经常使用 Mac 并且它处于良好的工作状态，长时间让 Mac 开机通常不是问题。<br>2. 如何在 1 小时后关闭我的 Mac？<br>打开终端 &gt; 输入 sudo shutdown -h +60 &gt; 按 Return &gt; 输入您的用户密码（不会显示）&gt; 再按 Return。 你去了，你已经安排了关机。<br>3. Mac 可以定时休眠吗？<br>是的，您可以在终端中使用“pmset”命令为您的 Mac 设置睡眠定时器。 但是，您需要具有管理员权限才能使用 pmset 命令。<br>第1步：打开终端<br>
第2步: 键入命令 sudo 预设睡眠 [time]<br>
代替 [time] 与您要设置计时器的秒数。<br>
步骤 3: Enter 出现提示时输入您的密码，然后按回车键。<br>要取消计时器，请按照上述步骤并键入 sudo pmset 睡眠取消。 这将取消睡眠定时器，您的 Mac 将保持唤醒状态。<br><br>无论您是要设置每日关机计时器还是一次性事件，本文中提到的方法都可以帮助您实现。 我们希望本文能帮助您获得在 Mac 上安排关机计时器所需的信息。<br><br>文章来源: <a rel="noopener" class="external-link" href="https://digitalixy.com/howto/1059821.html" target="_blank">https://digitalixy.com/howto/1059821.html</a>]]></description><link>https://wxkj.asia/mynote/工具软件/在-mac-上安排关机定时器的.html</link><guid isPermaLink="false">工具软件/在 Mac 上安排关机定时器的.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:35 GMT</pubDate><enclosure url="https://digitalixy.com/image/1673974919.jpg" length="0" type="image/jpeg"/><content:encoded>&lt;figure&gt;&lt;img src="https://digitalixy.com/image/1673974919.jpg"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[github加速方案]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:tools" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#tools</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:github" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#github</a> 
 <br><a href="https://wxkj.asia/mynote?query=tag:tools" class="tag" target="_blank" rel="noopener">#tools</a> <a href="https://wxkj.asia/mynote?query=tag:github" class="tag" target="_blank" rel="noopener">#github</a> <br>
<br>
免费 dns<br>
<img alt="github加速方案-20240221181405493.webp" src="https://wxkj.asia/mynote/lib/media/github加速方案-20240221181405493.webp" style="width: 315px; max-width: 100%;">

<br>
<a data-tooltip-position="top" aria-label="https://steampp.net/download" rel="noopener" class="external-link" href="https://steampp.net/download" target="_blank">Watt Toolkit</a> 

<br>图床 URL 示例<br>
<a rel="noopener" class="external-link" href="https://cdn.jsdelivr.net/gh/wish5115/obsidian-ii-plugin@main/assets/screenshots/list1.png" target="_blank">https://cdn.jsdelivr.net/gh/wish5115/obsidian-ii-plugin@main/assets/screenshots/list1.png</a>]]></description><link>https://wxkj.asia/mynote/工具软件/github加速方案.html</link><guid isPermaLink="false">工具软件/github加速方案.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 19 Mar 2024 22:19:25 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/github加速方案-20240221181405493.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/github加速方案-20240221181405493.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[linux]]></title><description><![CDATA[ 
 <br>1、双向同步：unison+inotify 用于启动切换的场景<br>
2、单向同步：rsync +inotify &nbsp;用于手工恢复的场景<br>好用的ftp<br>
<a data-tooltip-position="top" aria-label="https://www.ncftp.com/" rel="noopener" class="external-link" href="https://www.ncftp.com/" target="_blank">NcFTP Software</a><br>
教程<br>
ncftpput -R -u 用户 -p 密码 主机 远程目录 D:\本地目录<br>Mac 不支持 flock 的解决方案<br>
<a data-tooltip-position="top" aria-label="https://github.com/discoteq/flock" rel="noopener" class="external-link" href="https://github.com/discoteq/flock" target="_blank">GitHub - discoteq/flock: flock(1) locks files</a><br>fdfind + ripgrep 文件搜索和文件内容搜索]]></description><link>https://wxkj.asia/mynote/工具软件/linux.html</link><guid isPermaLink="false">工具软件/linux.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 15 May 2024 00:34:55 GMT</pubDate></item><item><title><![CDATA[logseq]]></title><description><![CDATA[ 
 <br><a data-tooltip-position="top" aria-label="https://zhuanlan.zhihu.com/p/343854552" rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/343854552" target="_blank">Logseq小白系列教程入门篇一 - 知乎</a>]]></description><link>https://wxkj.asia/mynote/工具软件/logseq.html</link><guid isPermaLink="false">工具软件/logseq.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:21:00 GMT</pubDate></item><item><title><![CDATA[快捷键]]></title><description><![CDATA[ 
 <br><br>新建文件	⌘+N（command+n 按键）<br>
快速生成标签页	⌘+T<br>
显示/隐藏侧边栏	⇧+⌘+L<br>
专注模式	F 8（选择和输入栏高亮，其它置灰）<br>标题	<br>
⌘+1（一级标题）<br>
⌘+2（二级标题）<br>
⌘+3（三级标题）<br>
⌘+4（四级标题）<br>
⌘+5（五级标题）<br>
⌘+6（六级标题）<br>正文	⌘+0（数字 0 零）<br>
下划线	⌘+U<br>
删除线	⇧ + ⌃ + ~ (左上角·～键)<br>
加粗	⌘+B<br>
斜体	⌘+I（字母 iℹ️）<br>
无序列表	⌥+⌘+U<br>
有序列表	⌥+⌘+O（字母 o 哦）<br>
任务列表	⌥+⌘+X（是的，添加任务打勾完成✅）<br>
增加缩进	⌘+】（增加缩进）；⌘+【（减少缩进）<br>
引用	⌥+⌘+Q（引用文字变灰，左侧有竖线｜）<br>
插入链接	⌘+K（添加外部链接）<br>
跳转至文章开头	⌘+上箭头（按键上）<br>
跳转至文章结尾	⌘+下箭头（按键下）<br>
查找/替换	⌘+F<br>
插入表格	⌥+⌘+T<br>
快速打开笔记	⇧+⌘+O<br>
输入表情	⌃ + ⌘+空格键（没错，里面有惊喜 ）<br>
分割线	⌥+⌘+ —（减号按键）<br>
复制	⌘+C<br>
粘贴	⌘+V<br>
撤销	⌘+Z<br>
整行删除	⌘+⌫]]></description><link>https://wxkj.asia/mynote/工具软件/typora.html</link><guid isPermaLink="false">工具软件/typora.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate></item><item><title><![CDATA[我开发了一个可以置顶笔记的app]]></title><description><![CDATA[ 
 <br><br>我们平时使用 obsidian 或其他文档文件的时候有没有这样的体会，就是我需要对照某个笔记的内容清单做一些事情。<br>这是时候，如果某个笔记能置顶就好了，然后就可以悬浮在桌面上来边对照边修改了。<br>DocOnTop 就是为这个需求而开发的。<br><br>这是托盘菜单<br><img src="https://wxkj.asia/mynote/lib/media/我开发了一个可以置顶笔记的app-20240402200049126.webp"><br>这是主窗口<br><img src="https://wxkj.asia/mynote/lib/media/我开发了一个可以置顶笔记的app-20240402195913205.webp"><br>这是配置项<br><img src="https://wxkj.asia/mynote/lib/media/我开发了一个可以置顶笔记的app-20240405153218437.webp"><br><br>在托盘图标里配置好参数就可以了。<br><br><a data-tooltip-position="top" aria-label="https://github.com/wish5115/Niva-DocOnTop/releases/tag/1.0.0" rel="noopener" class="external-link" href="https://github.com/wish5115/Niva-DocOnTop/releases/tag/1.0.0" target="_blank">DocOnTop-1.0.0</a>  <br><br><a data-tooltip-position="top" aria-label="https://github.com/wish5115/Niva-DocOnTop/issues" rel="noopener" class="external-link" href="https://github.com/wish5115/Niva-DocOnTop/issues" target="_blank">DocOnTop/issues</a>]]></description><link>https://wxkj.asia/mynote/工具软件/我开发了一个可以置顶笔记的app.html</link><guid isPermaLink="false">工具软件/我开发了一个可以置顶笔记的app.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 05 Apr 2024 07:58:45 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/我开发了一个可以置顶笔记的app-20240402200049126.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/我开发了一个可以置顶笔记的app-20240402200049126.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[关于图床的一些使用心得总结]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://juejin.cn/post/7084137919845236743" rel="noopener" class="external-link" href="https://juejin.cn/post/7084137919845236743" target="_blank">juejin.cn</a>
<br><br><br>
<br>非隐私图片：使用 Github、七牛云 (http)、SM.MS 图床、路过图床。
<br>隐私图片：使用阿里云 OSS、七牛云 (https)（绑定的域名不能丢）。
<br>测试环境（和日常使用）可以凭自己喜好； 生产环境还是选择阿里云 oss 这种付费的比较靠谱。<br><br>
<br>优点：免费，不用考虑存储费用和流量费用。
<br>缺点：

<br>隐私差（仓库公开）。 根据仓库名和 readme 中的关键词就能搜到。（虽然可以把仓库名和 readme 中关于 picture bed 的描述去掉了。但这也只是减少了被检索到的概率。只要仓库被人访问，里面的所有图片都会被看到。）<br>
总结：github 可以用作 picture bed，但只适合存放普通图片，隐私图片还是存在别的付费地方（因为要外链访问，所以也是公开的，但是被访问的概率比 github 要小得多）。
<br>网页端需要点开具体图片文件才能预览。


<br>获取 url 的一个方法：在浏览器打开 github 的图片，把此时的 url 中的 blob 改为 raw。然后这个 url 就可以在 markdown 中直接使用了。<br>
（不过这样并不稳定，通常应该使用下面一段里提到的 jsdelivr 的 cnd 加速）<br><br>
jsdelivr 的介绍：<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Flfri%2Fp%2F12212878.html" rel="noopener" class="external-link" title="https://www.cnblogs.com/lfri/p/12212878.html" href="https://link.juejin.cn?target=https%3A%2F%2Fwww.cnblogs.com%2Flfri%2Fp%2F12212878.html" target="_blank">快速免费的公用 CDN —— jsDelivr</a> 。 参考：<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fqq_36759224%2Farticle%2Fdetails%2F98058240" rel="noopener" class="external-link" title="https://blog.csdn.net/qq_36759224/article/details/98058240" href="https://link.juejin.cn?target=https%3A%2F%2Fblog.csdn.net%2Fqq_36759224%2Farticle%2Fdetails%2F98058240" target="_blank">Github+jsDelivr+PicGo 打造稳定快速、高效免费图床</a> 。
<br>PicGo 中 github 的设置里，自定义域名设置为：https://cdn.jsdelivr.net/gh/用户名/图床仓库名，就可以使用免费的 cdn 加速了。<br><br>
<br>优点：稳定安全。
<br>缺点：存储和流量都收费（但其实很便宜）。
<br>计算了一下阿里云 oss 的存储计费价格：存储文件小于 5.6G 时，按量计费划算；存储文件大于 5.6G 时，开通资源包（一年 8.1 元 40G 存储空间）比较划算。<br>
至于 cdn 流量费用，不必计算，因为没得选 必须用。<br><br>
网站：<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fportal.qiniu.com%2Fkodo%2Foverview" rel="noopener" class="external-link" title="https://portal.qiniu.com/kodo/overview" href="https://link.juejin.cn?target=https%3A%2F%2Fportal.qiniu.com%2Fkodo%2Foverview" target="_blank">七牛云 - 对象存储</a>
<br>七牛云需要自己设置域名，稍微有点麻烦（有个备案域名就行，简单设置一下 cname 解析，并不难）。折腾一下就可以白嫖 10G 存储空间和 10G http 流量也挺好的。<br>
<br>优点：每月有 10G 的免费存储空间和 10G HTTP 流量。
<br>缺点：

<br>https 流量收费。 免费的 http 流量有时候网站会不显示图片（因为网站开了 https），而且 http 的安全性比较差。但是七牛云存储空间设置成 https 又会产生流量费用。
<br>绑定的域名不能丢。 需要使用自己的备案域名，如果域名过期了，以往的链接会失效。批量替换新的 url 工作量会很大。（相当于自己的这个域名被绑死了，不能扔.）


<br>图片外链测试成功：<br>
<img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ce9583396484b1e9dd8341eda358b8c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" referrerpolicy="no-referrer"><br><br>（又拍云联盟申请被拒了，pass）<br>~- 优点：加入又拍云联盟后，每月有免费的 10G 存储和 15G HTPP/HTTPS 流量（代金券形式发放，一次性发一年）。~ ~- 缺点：每年申请又拍云联盟一次（可以忽略）；自己的网站底部按要求添加又拍云的标识（可以忽略）。~<br><br>
<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fsm.ms%2F" rel="noopener" class="external-link" title="https://sm.ms/" href="https://link.juejin.cn?target=https%3A%2F%2Fsm.ms%2F" target="_blank">sm.ms 图床</a>
<br>
<br>优点：

<br>免费（5G 的存储空间）；不用考虑流量问题。
<br>网页端有预览功能。
<br>上传后不可修改（不可重命名）。 对于外链 url 这算优点，保证了以往引用的的外链 url 不会失效。（它用的不是直链，实测重命名不会影响之前外链的 url）


<br>缺点：

<br>使用 PicGo 上传有时会出现上传失败的情况，可能是网络原因？（后来使用体验好了很多。）。
<br>可能会跑路？不过它在免费图床里算是最可靠的了。它跑路的概率肯定比下面的路过图床的概率低。
<br>网有点慢。
<br>有预览功能，但只是一列排开，（相较于下面的路过图床来说）没有相册那种形式方便。但也不错了。
<br>上传时不可以重命名、不可以剪裁。（严格来说，这不算是缺点）。


<br>sm.ms 图床 url test：<br>
<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fsm.ms%2Fimage%2Fcs7MkqmKAloD4Lf" rel="noopener" class="external-link" title="https://sm.ms/image/cs7MkqmKAloD4Lf" href="https://link.juejin.cn?target=https%3A%2F%2Fsm.ms%2Fimage%2Fcs7MkqmKAloD4Lf" target="_blank"></a><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f5513a927845428eb7d0bd125fcf8674~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" referrerpolicy="no-referrer"><br><br>
<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fimgtu.com%2F" rel="noopener" class="external-link" title="https://imgtu.com/" href="https://link.juejin.cn?target=https%3A%2F%2Fimgtu.com%2F" target="_blank">路过图床 (imgtu.com)</a>
<br>个人认为是仅次于 sm.ms 的选择，毕竟已经自 2011 年运营至了。跑路的可能性不大。 但是不建议作为主力，虽然跑路的可能性不大，但还是有的。<br>
<br>优点：

<br>不限空间、不限流量。
<br>比 sm.ms 的图片管理更人性化，更接近相册的形式。
<br>上传时可以剪裁。上传后可以重命名。


<br>缺点:  

<br>删除太容易了。 相比于 sm.ms，路过图床的删除图片的方式更方便，个人认为这是个缺点，万一不小心删除了相册，那相册里所有图片的 url 就全失效了。  
<br>上传后可以重命名（对于外链 url 这算是缺点，因为修改了图片名称，以往的 url 就算失效了）。（它用的不是直链，实测重命名不会影响之前外链的 url）  
<br>换过域名。从 imgchr.com 换成了 imgtu.com 。


<br><br>
<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fwww.imgurl.org%2Fvip%2Fmanage%2Fupload" rel="noopener" class="external-link" title="https://www.imgurl.org/vip/manage/upload" href="https://link.juejin.cn?target=https%3A%2F%2Fwww.imgurl.org%2Fvip%2Fmanage%2Fupload" target="_blank">ImgURL 免费图床</a>
<br>这个名字有点……，和国外的 imgur.com 太像了。<br>
<br>优点：

<br>免费。不用考虑存储费用和流量费用。


<br>缺点：

<br>难保不会跑路 (可能性不大)。
<br>上传数量受限制。每日 20 涨，每月 400 张。


<br><br>（自己搭建图床） 昨天看到了相关视频，突然萌生了自己搭建图床的想法（vps 部署别人的开源程序）。<br>
了解之后，可选项有：<br>
<br>Chevereto （国外的） <a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Frodber%2Fchevereto-free" rel="noopener" class="external-link" title="https://github.com/rodber/chevereto-free" href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Frodber%2Fchevereto-free" target="_blank">rodber/chevereto-free (github.com)</a><br>
搭建环境要求：

<br>Apache/Nginx
<br>PHP 5.5+
<br>MySQL 5.0+


<br>Imgurl （国内的）<br>
<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fhelloxz%2Fimgurl" rel="noopener" class="external-link" title="https://github.com/helloxz/imgurl" href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fhelloxz%2Fimgurl" target="_blank">helloxz/imgurl (github.com)</a><br>
搭建环境要求：

<br>PHP &gt;= 5.6
<br>PDO_SQLite
<br>GD2
<br>ImageMagick
<br>fileinfo
<br>pathinfo


<br>这个有点麻烦了，然后对 vps 性能也有一点要求。 不过安全性无疑是最高的。<br><br>
<a data-tooltip-position="top" aria-label="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FMolunerfinn%2FPicGo" rel="noopener" class="external-link" title="https://github.com/Molunerfinn/PicGo" href="https://link.juejin.cn?target=https%3A%2F%2Fgithub.com%2FMolunerfinn%2FPicGo" target="_blank">Molunerfinn/PicGo: A simple &amp; beautiful tool for pictures uploading built by vue-cli-electron-builder (github.com)</a>
<br>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具<br>
<br>优点：很好用，可以支持多个图床工具： <img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ca1be8992a6d46a6900264796ebbf6c7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" referrerpolicy="no-referrer">
<br>缺点：上传后直接把 url 复制到剪切板的功能并不完善：

<br>图片名称有中文、空格时，url 不对
<br>上传后的路径 / 目录中有空格时，url 不对。


<br>解决方法：登陆相应图床的网页端，手动复制 url。]]></description><link>https://wxkj.asia/mynote/工具软件/关于图床的一些使用心得总结.html</link><guid isPermaLink="false">工具软件/关于图床的一些使用心得总结.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate><enclosure url="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ce9583396484b1e9dd8341eda358b8c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp" length="0" type="false"/><content:encoded>&lt;figure&gt;&lt;img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ce9583396484b1e9dd8341eda358b8c~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[windows]]></title><description><![CDATA[ 
 <br>hidecmd.exe<br>隐藏运行 bat，下载地址：<a data-tooltip-position="top" aria-label="https://github.com/agowa/hidecmd/releases" rel="noopener" class="external-link" href="https://github.com/agowa/hidecmd/releases" target="_blank">Releases · agowa/hidecmd</a>]]></description><link>https://wxkj.asia/mynote/工具软件/windows.html</link><guid isPermaLink="false">工具软件/windows.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 17:27:08 GMT</pubDate></item><item><title><![CDATA[mac 安装Beyond Compare，并永久使用_comparebeyond mac-CSDN博客]]></title><description><![CDATA[ 
 <br><br>

文章浏览阅读6.3k次，点赞7次，收藏21次。一.下载：首先下载Beyond Compare最新版本，链接如下：<a data-tooltip-position="top" aria-label="https://www.scootersoftware.com/download.php%E4%B8%8B%E8%BD%BD%E5%AE%8C%E7%9B%B4%E6%8E%A5%E8%A7%A3%E5%8E%8B%E6%89%93%E5%BC%80%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B9%8B%E5%89%8D%E4%BD%BF%E7%94%A8%E8%BF%87%EF%BC%8C%E4%BC%9A%E5%87%BA%E7%8E%B0%EF%BC%9A%E8%AF%84%E4%BC%B0%E6%A8%A1%E5%BC%8F%E9%94%99%E8%AF%AF%EF%BC%8C%E8%BE%93%E5%85%A5%E5%AF%86%E9%92%A5%E6%88%96%E8%B4%AD%E4%B9%B0%E6%8F%90%E7%A4%BA%E6%AD%A4%E6%97%B6%E6%88%91%E4%BB%AC%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4registry.dat%EF%BC%8C%E5%86%8D%E8%AF%95%E7%94%A830%E5%A4%A9%EF%BC%8C%E5%85%B7%E4%BD%93%E6%93%8D%E4%BD%9C%E5%A6%82%E4%B8%8B%EF%BC%9Acd" rel="noopener" class="external-link" href="https://www.scootersoftware.com/download.php%E4%B8%8B%E8%BD%BD%E5%AE%8C%E7%9B%B4%E6%8E%A5%E8%A7%A3%E5%8E%8B%E6%89%93%E5%BC%80%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%B9%8B%E5%89%8D%E4%BD%BF%E7%94%A8%E8%BF%87%EF%BC%8C%E4%BC%9A%E5%87%BA%E7%8E%B0%EF%BC%9A%E8%AF%84%E4%BC%B0%E6%A8%A1%E5%BC%8F%E9%94%99%E8%AF%AF%EF%BC%8C%E8%BE%93%E5%85%A5%E5%AF%86%E9%92%A5%E6%88%96%E8%B4%AD%E4%B9%B0%E6%8F%90%E7%A4%BA%E6%AD%A4%E6%97%B6%E6%88%91%E4%BB%AC%E9%80%9A%E8%BF%87%E5%88%A0%E9%99%A4registry.dat%EF%BC%8C%E5%86%8D%E8%AF%95%E7%94%A830%E5%A4%A9%EF%BC%8C%E5%85%B7%E4%BD%93%E6%93%8D%E4%BD%9C%E5%A6%82%E4%B8%8B%EF%BC%9Acd" target="_blank">https://www.scootersoftware.com/download.php下载完直接解压打开，如果之前使用过，会出现：评估模式错误，输入密钥或购买提示此时我们通过删除registry.dat，再试用30天，具体操作如下：cd</a>  Library/Application\ Support/Beyond\ Com..._comparebeyond mac
<br><br>“original.png” could not be found.<br><a data-tooltip-position="top" aria-label="https://blog.csdn.net/quanqxj" rel="noopener" class="external-link" title="权权qxj" href="https://blog.csdn.net/quanqxj" target="_blank">权权qxj</a> “newCurrentTime2.png” could not be found. 于 2019-12-02 15:31:37 发布<br>一.下载：<br>
首先下载Beyond <a data-tooltip-position="top" aria-label="https://so.csdn.net/so/search?q=Compare&amp;spm=1001.2101.3001.7020" rel="noopener" class="external-link" href="https://so.csdn.net/so/search?q=Compare&amp;spm=1001.2101.3001.7020" target="_blank">Compare</a>最新版本，链接如下：<br>
<a rel="noopener" class="external-link" href="https://www.scootersoftware.com/download.php" target="_blank">https://www.scootersoftware.com/download.php</a><br>下载完直接解压打开，如果之前使用过，会出现：<br>评估模式错误，输入密钥或购买提示<br>此时我们通过删除registry.dat，再试用30天，具体操作如下：<br>cd Library/Application\ Support/Beyond\ Compare/ rm -rf registry.dat
复制<br>“2019120215280616.png” could not be found.<br>
此时，便可打开Beyond Compare程序了，下面就可以找到运行的目录，想永久使用，做如下操作：<br>创建BCompare文件<br>
注意：Beyond Compare每次启动后会先检查注册信息，试用期到期后就不能继续使用。解决方法是在启动前，先删除注册信息，然后再启动，这样就可以永久免费试用了。
<br>
<br>
1.进入Mac应用程序目录下，找到刚刚安装好的Beyond Compare，路径如下 /Applications/Beyond\ Compare.app/Contents/MacOS/。

<br>
2.修改启动程序文件BCompare为BCompare.real。

<br>
3.在当前目录下新建一个文件BCompare，文件内容如下：
#!/bin/bash # 删除注册信息 rm "/Users/$(whoami)/Library/Application Support/Beyond Compare/registry.dat” # 启动真实的Bcompare文件 "`dirname "$0"`"/BCompare.real $@
复制

<br>4.保存BCompare文件<br>5.修改文件的权限：<br>chmod a+x /Applications/Beyond\ Compare.app/Contents/MacOS/BCompare
复制<br>“2019120215292975.png” could not be found.<br>
这样Beyond Compare就可以永久使用了]]></description><link>https://wxkj.asia/mynote/工具软件/mac-安装beyond-compare，并永久使用_comparebeyond-mac.html</link><guid isPermaLink="false">工具软件/mac 安装Beyond Compare，并永久使用_comparebeyond mac.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 14 Mar 2024 16:43:38 GMT</pubDate></item><item><title><![CDATA[从本地同步到远程]]></title><description><![CDATA[ 
 <br><br>remote_path="/htdocs/mynote"
local_path="/Users/wish/_data/webpage"
ftp_host="ftp.epizy.com"
ftp_port="21"
ftp_user=""
ftp_pass=""

lftp -u "$ftp_user,$ftp_pass" -e "set ssl:verify-certificate no; set mirror:use-pget-n 10; mirror -R --verbose --delete --only-newer --exclude-glob='.DS_Store*' $local_path $remote_path; quit" ftp://$ftp_host:$ftp_port
复制<br>这个命令的作用是：<br>-u "xxxx,xxxx"：使用给定的用户名和密码登录 FTP 服务器。<br>
-e：后面跟着的字符串是要执行的命令序列。<br>
set ssl:verify-certificate no;：关闭 SSL 证书验证。<br>
set mirror:use-pget-n 10;：设置 mirror 命令使用最大 10 个并行连接进行文件传输。<br>
mirror -R --verbose --delete --only-newer /Users/wish/_data/webpage /htdocs/mynote;：执行 mirror 命令，以递归方式（-R 或 --reverse)从本地目录 /Users/wish/_data/webpage 同步到远程目录 /htdocs/mynote，并且是详细模式（--verbose)，删除远程上不存在于本地的文件（--delete)，以及仅上传本地较新的文件（--only-newer)。<br>
quit：退出 lftp。<br><br>#从远程到本地
#lftp -u "username,password" -e "set ssl:verify-certificate no; set mirror:use-pget-n 10; mirror --verbose --delete --only-newer -R /htdocs/mynote /Users/wish/_data/webpage; quit" ftp://ftp.epizy.com

复制<br>这里的变化点：<br>-R 或 --reverse 参数仍然保留，因为它指示 mirror 命令进行反向同步，即从远程同步到本地。<br>
将远程目录 /htdocs/mynote 放在 mirror 命令的第一个位置，本地目录 /Users/wish/_data/webpage 放在第二个位置。<br>
其余选项含义不变：<br>set ssl:verify-certificate no; 依然关闭 SSL 证书验证（请注意，生产环境中不建议这么做）。<br>
set mirror:use-pget-n 10; 仍设置最多 10 个并行连接进行传输。<br>
--verbose 输出详细同步过程信息。<br>
--delete 删除本地不存在于远程服务器上的文件。<br>
--only-newer 只下载远程文件中比本地文件新（基于文件修改时间）的文件。<br><br># 忽略文件
# lftp -u "username,password" -e "
#     open ftp://ftp.example.com:port;
#     set mirror:use-pget-n 10;
#     set exclude-list '/path/to/exclude1 /path/to/exclude2';
#     mirror --verbose --delete --only-newer --exclude-glob='*.tmp' --exclude-from=$HOME/.lftp/excludes.txt -R /remote/path /local/path;
#     quit
# " ftp://ftp.example.com:port
复制<br>在这个示例中：<br>set exclude-list 命令可以接受一个或多个路径，用来排除不需要同步的远程目录。<br>
mirror 命令中的 --exclude-glob='*.tmp' 参数可以排除所有扩展名为.tmp 的文件。<br>
--exclude-from=HOME/.lftp/excludes.txt 文件已存在，并且包含了您想要排除的文件或目录的正则表达式。<br>请注意，--exclude-glob 参数使用 glob 模式匹配，而从文件中读取的排除规则使用的是正则表达式。这两种排除方式可以结合使用，以满足你的不同需求。]]></description><link>https://wxkj.asia/mynote/工具软件/lftp使用.html</link><guid isPermaLink="false">工具软件/lftp使用.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 22 Mar 2024 18:50:47 GMT</pubDate></item><item><title><![CDATA[fswatch和rsync的使用]]></title><description><![CDATA[ 
 The text provides instructions on how to use fswatch and rsync for monitoring and backup purposes. It explains the parameters and options of both commands and provides a practical example of combining them to create a one-way file backup system.]]></description><link>https://wxkj.asia/mynote/工具软件/fswatch和rsync的使用.html</link><guid isPermaLink="false">工具软件/fswatch和rsync的使用.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 04:13:06 GMT</pubDate></item><item><title><![CDATA[[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？]]></title><description><![CDATA[ 
 <br>
本文由 <a data-tooltip-position="top" aria-label="http://ksria.com/simpread/" rel="noopener" class="external-link" href="http://ksria.com/simpread/" target="_blank">简悦 SimpRead</a> 转码， 原文地址 <a data-tooltip-position="top" aria-label="https://blog.csdn.net/qq_31061155/article/details/124388364" rel="noopener" class="external-link" href="https://blog.csdn.net/qq_31061155/article/details/124388364" target="_blank">blog.csdn.net</a>
<br>使用 google 谷歌浏览器提示更新，可是点击更新后提示：无法访问此网站；<br><img src="https://img-blog.csdnimg.cn/img_convert/9e166a046d492f69465293f1d98370de.png" referrerpolicy="no-referrer"><br>国内如何下载更新 google 谷歌浏览器？<br>1、google 谷歌浏览器提示更新，点击更新按钮后，选择点击 Chrome 版本太旧；<br><img src="https://img-blog.csdnimg.cn/img_convert/02df6ec9186938071d98af4aa5bd9ca9.png" referrerpolicy="no-referrer"><br><img src="https://img-blog.csdnimg.cn/img_convert/8856d9dae1912ba17f2b8beed323a3d9.png" referrerpolicy="no-referrer"><br>2、点击后提示无法更新 Chrome 谷歌浏览器，请点击重新安装 Chrome；<br><img src="https://img-blog.csdnimg.cn/img_convert/fb498698ab5ba009108b35010d401200.png" referrerpolicy="no-referrer"><br>3、打开谷歌浏览器官方网站，遇到无法访问此网站；<br><img src="https://img-blog.csdnimg.cn/img_convert/6a259abbedc4c55590c4a39adcc1ecea.png" referrerpolicy="no-referrer"><br><img src="https://img-blog.csdnimg.cn/img_convert/dda32234d19d5a7d677e4717c1d1790a.png" referrerpolicy="no-referrer"><br>4、【解决办法】电脑上访问「&nbsp;<a data-tooltip-position="top" aria-label="https://www.ciling.cn/" rel="noopener" class="external-link" title="词令" href="https://www.ciling.cn/" target="_blank">词令</a> 」官网，输入词令「 <a data-tooltip-position="top" aria-label="https://www.ciling.cn/?q=%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8" rel="noopener" class="external-link" title="谷歌浏览器" href="https://www.ciling.cn/?q=%E8%B0%B7%E6%AD%8C%E6%B5%8F%E8%A7%88%E5%99%A8" target="_blank">谷歌浏览器</a> 」搜索直达升级更新谷歌 Chrome 浏览器；<br><img src="https://img-blog.csdnimg.cn/img_convert/757dfa4ee1670c167e811a20c3934f3a.png" referrerpolicy="no-referrer"><br>5、在电脑上通过词令直达进入可访问的谷歌浏览器官方网站，点击「 <a data-tooltip-position="top" aria-label="https://so.csdn.net/so/search?q=%E4%B8%8B%E8%BD%BD&amp;spm=1001.2101.3001.7020" rel="noopener" class="external-link" href="https://so.csdn.net/so/search?q=%E4%B8%8B%E8%BD%BD&amp;spm=1001.2101.3001.7020" target="_blank">下载</a> Chrome 」；<br><img src="https://img-blog.csdnimg.cn/img_convert/2097f95f01f4040740dffcf107b5e03a.png" referrerpolicy="no-referrer"><br>6、下载完成安装 Chrome 谷歌浏览器即可更新成功；<br><img src="https://img-blog.csdnimg.cn/img_convert/929cf3344ab5c5ba6f95ce61d6afb673.png" referrerpolicy="no-referrer"><br>原文来源：<a data-tooltip-position="top" aria-label="https://www.caochai.com/article-1849.html" rel="noopener" class="external-link" title="www.caochai.com/article-1849.html" href="https://www.caochai.com/article-1849.html" target="_blank">www.caochai.com/article-1849.html</a>]]></description><link>https://wxkj.asia/mynote/工具软件/[经验教程]-国内如何下载更新-google-谷歌浏览器及更新谷歌-chrome-浏览器无法访问此网站怎么办？.html</link><guid isPermaLink="false">工具软件/[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 26 Apr 2024 19:32:26 GMT</pubDate><enclosure url="https://img-blog.csdnimg.cn/img_convert/9e166a046d492f69465293f1d98370de.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src="https://img-blog.csdnimg.cn/img_convert/9e166a046d492f69465293f1d98370de.png"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Unison帮助文档翻译]]></title><description><![CDATA[ 
 <br>--- start-multi-column: unison help docs<br>number of columns: 2
复制<br>Usage: unison [options]<br>
or unison root1 root2 [options]<br>
or unison profilename [options]<br>Basic options:<br>  General:<br>
-doc xxx            show documentation ('-doc topics' lists topics)<br>
-version            print version and exit<br>  What to sync:<br>
-group              synchronize group attributes<br>
-ignore xxx         add a pattern to the ignore list<br>
-ignorenot xxx      add a pattern to the ignorenot list<br>
-nocreation xxx     prevent file creations on one replica<br>
-nodeletion xxx     prevent file deletions on one replica<br>
-noupdate xxx       prevent file updates and deletions on one replica<br>
-owner              synchronize owner<br>
-path xxx           path to synchronize<br>
-perms n            part of the permissions which is synchronized<br>
-root xxx           root of a replica (should be used exactly twice)<br>
-times              synchronize modification times<br>  How to sync:<br>
-batch              batch mode: ask no questions at all<br>  How to sync (text interface (CLI) only):<br>
-auto               automatically accept default (nonconflicting) actions<br>
-silent             print nothing except error messages<br>
-terse              suppress status messages<br>  Text interface (CLI):<br>
-i                  interactive profile mode (text UI); command-line only<br>Advanced options:<br>  Fine-tune sync:<br>
-acl                synchronize ACLs<br>
-atomic xxx         add a pattern to the atomic list<br>
-follow xxx         add a pattern to the follow list<br>
-force xxx          force changes from this replica to the other<br>
-forcepartial xxx   add a pattern to the forcepartial list<br>
-ignorecase xxx     identify upper/lowercase filenames (true/false/default)<br>
-immutable xxx      add a pattern to the immutable list<br>
-immutablenot xxx   add a pattern to the immutablenot list<br>
-links xxx          allow the synchronization of symbolic links<br>
(true/false/default)<br>
-merge xxx          add a pattern to the merge list<br>
-nocreationpartial xxx add a pattern to the nocreationpartial list<br>
-nodeletionpartial xxx add a pattern to the nodeletionpartial list<br>
-noupdatepartial xxx add a pattern to the noupdatepartial list<br>
-prefer xxx         choose this replica's version for conflicting changes<br>
-preferpartial xxx  add a pattern to the preferpartial list<br>
-rsrc xxx           synchronize resource forks (true/false/default)<br>
-xattrignore xxx    add a pattern to the xattrignore list<br>
-xattrignorenot xxx add a pattern to the xattrignorenot list<br>
-xattrs             synchronize extended attributes (xattrs)<br>  How to sync:<br>
-backup xxx         add a pattern to the backup list<br>
-backupcurr xxx     add a pattern to the backupcurr list<br>
-backupcurrnot xxx  add a pattern to the backupcurrnot list<br>
-backupdir xxx      directory for storing centralized backups<br>
-backuploc xxx      where backups are stored ('local' or 'central')<br>
-backupnot xxx      add a pattern to the backupnot list<br>
-backupprefix xxx   prefix for the names of backup files<br>
-backups            (deprecated) keep backup copies of all files (see also<br>
'backup')<br>
-backupsuffix xxx   a suffix to be added to names of backup files<br>
-confirmbigdel      ask about whole-replica (or path) deletes (default true)<br>
-confirmmerge       ask for confirmation before committing results of a merge<br>
-copyonconflict     keep copies of conflicting files<br>
-dontchmod          when set, never use the chmod system call<br>
-fastcheck xxx      do fast update detection (true/false/default)<br>
-fat                use appropriate options for FAT filesystems<br>
-ignoreinodenumbers ignore inode number changes when detecting updates<br>
-maxbackups n       number of backed up versions of a file<br>
-numericids         don't map uid/gid values by user/group names<br>
-sortbysize         list changed files by size, not name<br>
-sortfirst xxx      add a pattern to the sortfirst list<br>
-sortlast xxx       add a pattern to the sortlast list<br>
-sortnewfirst       list new before changed files<br>  How to sync (text interface (CLI) only):<br>
-repeat xxx         synchronize repeatedly (text interface only)<br>
-retry n            re-try failed synchronizations N times (text ui only)<br>  Text interface (CLI):<br>
-color xxx          use color output for text UI (true/false/default)<br>
-dumbtty            do not change terminal settings in text UI<br>  Graphical interface (GUI):<br>
-height n           height (in lines) of main window in graphical interface<br>  Remote connections:<br>
-addversionno       add version number to name of unison on server<br>
-clientHostName xxx set host name of client<br>
-halfduplex         (deprecated) force half-duplex communication with the<br>
server<br>
-killserver         kill server when done (even when using sockets)<br>
-listen xxx         listen on this name or addr in server socket mode (can<br>
repeat)<br>
-rsync              activate the rsync transfer mode (default true)<br>
-servercmd xxx      name of unison executable on remote server<br>
-socket xxx         act as a server on a socket<br>
-sshargs xxx        other arguments (if any) for remote shell command<br>
-sshcmd xxx         path to the ssh executable<br>
-stream             (deprecated) use a streaming protocol for transferring<br>
file contents (default true)<br>
-testserver         exit immediately after the connection to the server<br>
-xferbycopying      optimize transfers using local copies (default true)<br>  Archive management:<br>
-ignorearchives     ignore existing archive files<br>  Other:<br>
-addprefsto xxx     file to add new prefs to<br>
-contactquietly     suppress the 'contacting server' message during startup<br>
-copymax n          maximum number of simultaneous copyprog transfers<br>
-copyprog xxx       external program for copying large files<br>
-copyprogrest xxx   variant of copyprog for resuming partial transfers<br>
-copythreshold n    use copyprog on files bigger than this (if &gt;=0, in Kb)<br>
-diff xxx           set command for showing differences between files<br>
-ignorelocks        ignore locks left over from previous run (dangerous!)<br>
-include xxx        include a profile's preferences<br>
-key xxx            define a keyboard shortcut for this profile (in some UIs)<br>
-label xxx          provide a descriptive string label for this profile<br>
-log                record actions in logfile (default true)<br>
-logfile xxx        logfile name<br>
-maxerrors n        maximum number of errors before a directory transfer is<br>
aborted<br>
-maxsizethreshold n prevent transfer of files bigger than this (if &gt;=0, in<br>
Kb)<br>
-maxthreads n       maximum number of simultaneous file transfers<br>
-mountpoint xxx     abort if this path does not exist<br>
-rootalias xxx      register alias for canonical root names<br>
-showarchive        show 'true names' (for rootalias) of roots and archive<br>
-source xxx         include a file's preferences<br>
-ui xxx             select UI ('text' or 'graphic'); command-line only<br>
-unicode xxx        assume Unicode encoding in case insensitive mode<br>
-watch              when set, use a file watcher process to detect changes<br>Expert options:<br>
-debug xxx          debug module xxx ('all' -&gt; everything, 'verbose' -&gt; more)<br>
-dumparchives       dump contents of archives just after loading<br>
-fastercheckUNSAFE  skip computing fingerprints for new files (experts only!)<br>
-selftest           run internal tests and exit<br>--- end-column ---<br>使用方法： unison [options］<br>
或 unison root1 root2 [选项]<br>
或 unison profilename [选项]<br>基本选项：<br>  常规选项<br>
-doc xxx 显示文档（'-doc topics' 列出主题）<br>
-version 打印版本并退出<br>  同步什么<br>
-group 同步组属性<br>
-ignore xxx 在忽略列表中添加一个模式<br>
-ignorenot xxx 在忽略列表中添加一个模式<br>
-nocreation xxx 阻止在一个副本上创建文件<br>
-nodeletion xxx 阻止在一个副本上删除文件<br>
-noupdate xxx 防止在一个副本上更新和删除文件<br>
-owner 同步所有者<br>
-path xxx 同步路径<br>
-perms n 同步权限的一部分<br>
-root xxx 复制的根目录（应准确使用两次）<br>
-times 同步修改时间<br>  如何同步：<br>
-批处理批处理模式：完全不提问题<br>  如何同步（仅限文本界面 (CLI)）：<br>
-自动自动接受默认（不冲突）操作<br>
-除了错误信息，不打印任何信息<br>
-默认忽略状态信息<br>  文本界面（CLI）：<br>
-i 交互式配置文件模式（文本用户界面）；仅限命令行<br>高级选项：<br>  微调同步：<br>
-acl 同步 ACL<br>
-atomic xxx 在原子列表中添加一个模式<br>
-follow xxx 在跟随列表中添加一个模式<br>
-force xxx 从该副本强制更改到另一个副本<br>
-forcepartial xxx 在强制列表中添加模式<br>
-ignorecase xxx 识别大写/小写文件名（真/假/默认）<br>
-immutable xxx 向不可变列表中添加一个模式<br>
-immutablenot xxx 在不可更改列表中添加一个模式<br>
-links xxx 允许同步符号链接<br>
(真/假/默认）<br>
-merge xxx 在合并列表中添加一个模式<br>
-nocreationpartial xxx 向 nocreationpartial 列表添加模式<br>
-节点删除部分 xxx 在节点删除部分列表中添加模式<br>
-noupdatepartial xxx 在 noupdatepartial 列表中添加模式<br>
-prefer xxx 选择该副本的版本来处理冲突变更<br>
-preferpartial xxx 在 preferpartial 列表中添加模式<br>
-rsrc xxx 同步资源分叉（真/假/默认）<br>
-xattrignore xxx 在 xattrignore 列表中添加一个模式<br>
-xattrignorenot xxx 在 xattrignorenot 列表中添加一个模式<br>
-xattrs 同步扩展属性 (xattrs)<br>  如何同步：<br>
-backup xxx 在备份列表中添加模式<br>
-backupcurr xxx 在 backupcurr 列表中添加模式<br>
-backupcurrnot xxx 在 backupcurrnot 列表中添加模式<br>
-backupdir xxx 用于存储集中备份的目录<br>
-backuploc xxx 存储备份的位置（"本地 "或 "中央"）。<br>
-backupnot xxx 在 backupnot 列表中添加一个模式<br>
-backupprefix xxx 备份文件名的前缀<br>
-backups（已废弃）保留所有文件的备份副本（另见<br>
备份）<br>
-backupsuffix xxx 备份文件名的后缀<br>
-confirmmbigdel 询问整个副本（或路径）的删除情况（默认为 true）<br>
-configirmmerge 在提交合并结果前要求确认<br>
-copyonconflict 保留冲突文件的副本<br>
-dontchmod 设置后，绝不使用 chmod 系统调用<br>
-fastcheck xxx 进行快速更新检测（true/false/默认值）<br>
-fat 为 FAT 文件系统使用适当的选项<br>
-ignoreinodenumbers 在检测更新时忽略节点号的变化<br>
-maxbackups n 文件的备份版本数<br>
-numericids 不按用户/组名映射 uid/gid 值<br>
-sortbysize（按大小排序）按大小而非名称列出更改的文件<br>
-sortfirst xxx 在 sortfirst 列表中添加模式<br>
-sortlast xxx 在 sortlast 列表中添加模式<br>
-sortnewfirst 先列出新文件，后列出已更改文件<br>  如何同步（仅限文本界面 (CLI)）：<br>
-repeat xxx 重复同步（仅限文本界面）<br>
-retry n 重试 N 次失败的同步（仅限文本界面）<br>  文本界面（CLI）<br>
-color xxx 为文本用户界面使用彩色输出（真/假/默认值）<br>
-dumbtty 不在文本用户界面中更改终端设置<br>  图形界面（GUI）<br>
-图形界面中主窗口的高度 n（以行为单位<br>  远程连接<br>
-addversionno 在服务器上将版本号添加到 unison 名称中<br>
-clientHostName xxx 设置客户端主机名<br>
-halfduplex（废弃）强制与服务器进行半双工通信。<br>
服务器<br>
-killserver 完成后杀死服务器（使用套接字时也是如此）<br>
-listen xxx 在服务器套接字模式下监听此名称或地址（可<br>
重复）<br>-rsync 激活 rsync 传输模式（默认为 true）<br>
-servercmd xxx 远程服务器上 unison 可执行文件的名称<br>
-socket xxx 在套接字上充当服务器<br>
远程 shell 命令的其他参数（如有） -sshargs xxx<br>
-sshcmd xxx ssh 可执行文件的路径<br>
-stream（已废弃）使用流协议传输文件内容（默认为 true<br>
文件内容（默认为 true）<br>
-连接服务器后立即退出<br>
-使用本地副本优化传输（默认为 true）<br>  归档管理：<br>
-忽略存档忽略现有存档文件<br>  其他<br>
-addprefsto xxx 文件，用于添加新的预置。<br>
-contactquietly 在启动过程中抑制 "联系服务器 "信息<br>
-copymax n 同时传输 copyprog 文件的最大次数<br>
-复制大文件的 xxx 外部程序<br>
-copyprogrest xxx 用于恢复部分传输的 copyprog 变体<br>
-copythreshold n 对大于此值的文件使用 copyprog（如果 &gt;=0，单位为 Kb）<br>
-diff xxx 设置显示文件差异的命令<br>
-ignorelocks 忽略上次运行时留下的锁（危险！）。<br>
-include xxx 包括配置文件的偏好设置<br>
-key xxx 为该配置文件定义键盘快捷键（在某些用户界面中）<br>
-label xxx 为该配置文件提供描述性字符串标签<br>
-在日志文件中记录操作（默认为 true）<br>
-logfile xxx 日志文件名称<br>
-最大错误数 n 中止目录传输前的最大错误数<br>
中止<br>
-maxsizethreshold n 防止传输大于此值的文件（如果 &gt;=0，单位为<br>
千字节）<br>
-最大线程数 n 同时传输文件的最大数量<br>
-mountpoint xxx 如果该路径不存在，则终止传输<br>
-rootalias xxx 注册规范根名称的别名<br>
-showarchive 显示根文件和归档文件的 "真名"（对于根文件来说<br>
-source xxx 包括文件的首选项<br>
-ui xxx 选择用户界面（"文本 "或 "图形"）；仅限命令行方式<br>
-unicode xxx 假设在大小写不敏感模式下使用 Unicode 编码<br>
-设置时，使用文件监视器进程检测更改<br>专家选项<br>
-debug xxx 调试模块 xxx（'all' -&gt; 全部，'verbose' -&gt; 更多）<br>
-dumparchives 在加载后转储档案内容<br>
-fastercheckUNSAFE 跳过计算新文件的指纹（仅限专家！）。<br>
-selftest 运行内部测试并退出<br>--- end-multi-column]]></description><link>https://wxkj.asia/mynote/工具软件/unison帮助文档翻译.html</link><guid isPermaLink="false">工具软件/Unison帮助文档翻译.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate></item><item><title><![CDATA[Mac 下的安装]]></title><description><![CDATA[ 
 <br><br>在 macOS 下安装 Unison，您可以选择几种不同的方法：<br>
<br>使用 Homebrew：<br>
Homebrew 是 macOS 下的一个包管理器，可以用来安装许多开源软件。如果您已经安装了 Homebrew，可以通过以下命令来安装 Unison：
brew install unison
复制

<br>使用 MacPorts：<br>
如果您使用的是 MacPorts，可以通过以下命令来安装 Unison：
sudo port install unison
复制

<br>下载预编译的二进制文件：<br>
您可以直接从 Unison 的官方网站或 GitHub 仓库下载预编译的二进制文件。下载后，通常只需要将 Unison 的可执行文件移动到您的 /usr/local/bin 目录或者其他在您的 PATH 环境变量中的目录。
<br>编译源代码：<br>
如果您需要最新的特性或者想要自定义一些设置，您可以从源代码编译 Unison。这通常需要安装 OCaml 编程语言的编译环境和一些依赖库。您可以访问 Unison 的官方网站或 GitHub 仓库来获取源代码和编译指南。<br>
安装完成后，您可以通过终端运行 Unison。如果您需要图形界面，可以搜索第三方开发的 Unison 图形前端，如 "Unison GUI for OS X" 或其他类似的项目。<br>
请注意，安装和运行 Unison 可能需要您具有管理员权限，因此可能需要在命令前添加 sudo。此外，安装和配置过程可能会根据您的系统环境和 Unison 的版本有所不同。如果遇到问题，可以参考 Unison 的官方文档或社区提供的指南。
<br><br>要使用 Unison 来同步两个文件夹（例如 a 和 b），并且希望以增量方式同步，同时忽略特定的文件和文件夹（如 .DS_Store、.git、.cache 等），您可以使用以下命令格式：<br>unison PROFILE_NAME -batch -auto -silent -repeat watch -ignore 'Name *.DS_Store' -ignore 'Name .git' -ignore 'Name .cache'
复制<br>这里的 PROFILE_NAME 应该替换为您在 Unison 配置文件中定义的配置名称，或者直接指定两个文件夹的路径。Unison 配置文件通常位于用户的 home 目录下的 .unison 文件夹中，例如 ~/.unison/default.prf。<br>
如果您没有预先配置文件，可以直接在命令中指定两个文件夹的路径，如下所示：<br>unison /path/to/a /path/to/b -batch -auto -silent -repeat watch -ignore 'Name *.DS_Store' -ignore 'Name .git' -ignore 'Name .cache'
复制<br>这里的命令行参数解释如下：<br>
<br>/path/to/a 和 /path/to/b 是您要同步的两个文件夹的路径。
<br>-batch：批处理模式，不显示用户界面。
<br>-auto：自动处理冲突，选择“预测的”动作。
<br>-silent：静默模式，不输出非错误信息。
<br>-repeat watch：监控源目录的变化，如有变化则重新同步。
<br>-ignore 'Pattern'：指定要忽略的文件或目录的模式。您可以根据需要添加多个 -ignore 参数来忽略不同的文件或目录。<br>
请注意，Unison 的同步是双向的，它会自动检测两个文件夹中的更改并同步它们。如果出现冲突，Unison 会尝试合并更改，但在某些情况下可能需要用户干预来决定如何处理冲突。<br>
在实际使用中，您可能需要根据实际情况调整命令行参数，以满足您的同步需求。此外，如果您的同步需求比较复杂，建议创建一个 Unison 配置文件来管理同步设置，这样可以更方便地维护和更新同步参数。
<br><br>是的，Unison 允许您在执行实际同步之前预览将会发生的更改。这样可以让你在同步之前查看哪些文件将被传输、删除或更新，从而避免不必要的操作。<br>
要预览同步操作，您可以使用 Unison 的 -preview 选项。以下是一个示例命令，用于预览两个文件夹（/path/to/a 和 /path/to/b）之间的同步操作：<br>unison /path/to/a /path/to/b -preview
复制<br>运行上述命令后，Unison 将比较两个文件夹并显示将要执行的同步操作的列表。这些操作包括：<br>
<br>将要复制的文件。
<br>将要删除的文件。
<br>将要更新的文件。<br>
在预览模式下，Unison 不会实际修改任何文件或文件夹。这是为了让您有机会确认同步操作是否正确，并根据需要调整同步设置或手动处理任何潜在的冲突。<br>
预览完成后，如果您决定执行同步，可以再次运行 Unison 命令，但不包含 -preview 选项。如果您对 Unison 的配置文件进行了更改，可能需要重新运行带有 -testserver 选项的命令，以确保配置文件的更改已经生效。
<br><br>Unison 是一个被广泛使用的文件同步工具，它被设计为安全的，但是像所有软件一样，它的安全性取决于使用方式和它所处的环境。Unison 本身没有内置的加密功能，因此如果需要在同步过程中保护数据的安全，您应该通过 SSH 或者其他安全的通道来运行 Unison，这样可以使用 SSH 的加密功能来保护数据传输的安全。<br>
文件冲突处理：<br>
Unison 在遇到文件冲突时会尝试自动处理。它使用一种“更改预测”算法来决定如何合并更改。如果 Unison 无法确定如何合并文件，它会提示用户解决冲突。用户可以选择保留一个文件版本，或者手动合并更改。<br>
资源占用：<br>
Unison 通常不会占用大量的系统资源。它是一个相对轻量级的工具，设计用于高效地同步文件。然而，资源占用的具体情况取决于同步的文件数量、文件大小、网络速度等因素。在同步大量数据或者在网络速度较慢的情况下，Unison 的资源占用和同步速度可能会有所增加。<br>
总的来说，Unison 是一个成熟且可靠的文件同步工具，它在处理文件冲突和资源占用方面表现出色。但是，对于安全性要求较高的应用场景，您应该采取额外的措施来确保数据的安全，例如使用加密传输、设置合适的文件权限等。<br><br>Unison 使用一种名为 "rsync algorithm" 的算法来比较两个文件的不同。这个算法是由 Andrew Tridgell 开发的，最初用于 rsync 工具中。Unison 的作者也参与了 rsync 的开发，因此 Unison 的同步算法与 rsync 有相似之处。<br>
Unison 的同步算法大致如下：<br>
<br>块哈希：

<br>Unison 将文件分割成固定大小的块（默认为 1KB），并对每个块计算一个哈希值。
<br>这些哈希值用于快速比较两个文件是否相同，以及它们之间的差异。


<br>快速比较：

<br>在同步过程中，Unison 首先比较两个文件的块哈希。如果文件的块哈希完全相同，Unison 认为文件没有变化，不需要传输。
<br>如果块哈希不同，Unison 会进一步比较这些块来确定具体哪些数据需要传输。


<br>差异传输：

<br>Unison 只传输文件中发生变化的部分，而不是整个文件。这大大减少了同步过程中需要传输的数据量，尤其是在网络同步时。
<br>如果文件的一小部分发生变化，只有变化的块会被传输，而不是整个文件。


<br>安全性：

<br>Unison 使用加密哈希函数来计算块哈希，确保数据的完整性。在同步过程中，如果哈希值不匹配，Unison 会重新传输相应的块。


<br>文件属性和权限：

<br>除了文件内容，Unison 还同步文件的元数据，如修改时间、权限和其他属性。<br>
Unison 的同步算法使其成为一个高效的文件同步工具，特别是在同步大型文件或慢速网络连接时。它的增量同步机制可以显著减少同步所需的时间和带宽消耗。然而，Unison 的同步算法也有一些局限性，例如对于经常小幅度修改的大型文件，它可能不如其他同步工具高效。


<br>使用 Unison 进行双向同步，并且忽略某些文件或文件夹（如 .DS_Store, .git, .cache 等），您可以编写一个 Unison profile 文件（例如：my-sync.prf），并在其中设置同步路径、忽略规则以及其他选项。以下是一个简化的例子：<br># my-sync.prf 文件内容
root = /path/to/a
root = /path/to/b

ignore = Name .DS_Store
ignore = Name .git
ignore = Name .cache
ignore = Path */.git*
ignore = Path */.cache*

# 使用增量同步
times = true

# 双向同步，自动解决冲突（也可以根据需求更改解决策略）
auto = true
confirmbigdeletes = true # 对于大量删除操作要求确认

# 根据需要可以选择其他的同步选项，例如版本回滚等
# 更多选项请参阅Unison官方文档

# 执行同步命令时，指定profile文件
unison my-sync.prf
复制<br>保存上述配置后，在终端中执行以下命令来启动同步：<br>unison my-sync.prf
复制<br>记得将 /path/to/a 和 /path/to/b 替换为您实际需要同步的文件夹路径。通过在配置文件中设置 ignore 项，您可以排除不想同步的文件和文件夹。同时，times 参数开启了增量同步，只同步自上次同步以来发生变化的文件。根据您的需求，还可以调整其他同步选项。<br>当然可以，您可以在命令行下直接传参给 unison 来实现同步，同时设置忽略规则。以下是一个在命令行中执行的例子：<br>unison \
  -silent \
  -times \
  -auto \
  -confirmbigdeletes \
  -ignore 'Name .DS_Store' \
  -ignore 'Name .git' \
  -ignore 'Name .cache' \
  -ignore 'Path */.git*' \
  -ignore 'Path */.cache*' \
  /path/to/a \
  /path/to/b
复制<br>
<br>-silent 参数会让 unison 在同步时不显示欢迎信息和简单的进度报告，仅显示有问题的同步步骤。
<br>-times 开启增量同步，只同步自上次同步以来文件时间戳有变化的文件。
<br>-auto 表示在可能的情况下自动解决冲突，默认会询问用户。
<br>-confirmbigdeletes 当有大量删除操作时要求用户确认。
<br>-ignore 参数后面跟随的是要忽略的文件或目录规则。
<br>请确保将 /path/to/a 和 /path/to/b 替换为实际的目录路径。这样就可以在不创建配置文件的情况下完成双向同步，并忽略指定的文件和文件夹了。不过，对于长期或频繁使用的同步任务，编写配置文件会使操作更加便捷和清晰。<br>Unison 是一个用于文件同步和备份的命令行工具，它支持双向同步和增量同步，并且可以配置忽略特定的文件或文件夹。<br>要使用 Unison 进行双向增量同步并忽略 .DS_Store, .git, .cache 等文件夹，你可以按照以下步骤操作：<br>确保你已经安装了 Unison。如果没有，你可以从 Unison 的官方网站下载并安装。<br>打开终端或命令行界面，并导航到你的工作目录。<br>运行 Unison，使用 -ignore 参数来指定要忽略的文件或文件夹。对于多个要忽略的模式，可以用逗号分隔。Unison 使用的是 Shell 通配符模式。<br>以下是一个示例命令，用于同步 a 和 b 两个文件夹，并忽略 .DS_Store, .git, .cache 文件夹：<br>bash<br>
unison -auto -ignore Name .DS_Store,.git,.cache -path a -path b<br>这个命令的解释如下：<br>-auto：自动解决同步冲突（需要用户干预来解决任何冲突）。<br>
-ignore Name：告诉 Unison 使用名称匹配来忽略文件或文件夹。<br>
.DS_Store,.git,.cache：这是你要忽略的文件或文件夹的模式列表，用逗号分隔。<br>
-path a：指定第一个路径 a。<br>
-path b：指定第二个路径 b。<br>当运行这个命令时，Unison 会显示两个文件夹之间的差异，并询问你如何解决。你可以选择接受一个文件夹中的版本，合并它们，或者跳过。<br>如果你想让 Unison 在后台运行并自动解决所有冲突（假设没有真正的冲突发生），你可以使用 -batch 选项代替 -auto。但是请注意，这可能会导致数据丢失，因为如果两个文件夹中有冲突的文件，Unison 会默认选择其中一个版本覆盖另一个。<br>bash<br>
unison -batch -ignore Name .DS_Store,.git,.cache -path a -path b<br>请注意，对于重要的数据，最好是在首次同步之前手动检查 Unison 的输出，以确保它按照你的期望进行操作。<br><br>如果您当前的 unison 版本没有包含对 fsevents 的支持，并且您不熟悉如何使用 opam 来编译软件，您可以考虑以下几种方法来获取一个支持 fsevents 的 unison 版本：<br>
<br>使用 Homebrew 安装:<br>
Homebrew 是 macOS 上的一个包管理器，它可能提供了预编译的 unison 版本，其中包含了 fsevents 支持。您可以使用以下命令来安装 unison:
brew install unison
复制
这通常会安装最新版本的 unison，其中包括了对 fsevents 的支持。
<br>下载预编译的二进制文件:<br>
您可以查找网上是否有提供预编译的 unison 二进制文件，这些文件可能已经包含了 fsevents 支持。一些第三方网站或 unison 的镜像站点可能会提供这些文件。
<br>使用 Docker:<br>
如果您熟悉 Docker，您可以考虑使用 Docker 镜像来运行 unison。有些 Docker 镜像可能已经包含了正确配置的 unison 版本，您只需要运行容器并执行同步即可。
<br>寻求帮助:<br>
如果您在编译或安装方面遇到困难，您可以在相关的开发者社区或论坛上寻求帮助。提供您遇到的具体问题和错误信息，以便他人能够更准确地为您提供帮助。<br>
如果您决定尝试使用 opam 来编译 unison，以下是一个基本的步骤指南：
<br># 安装 opam，如果尚未安装
brew install opam
# 初始化 opam 环境
opam init
# 安装必要的 OCaml 包
opam install fsevents
# 获取 unison 的源代码
git clone https://github.com/bcpierce00/unison.git
# 切换到源代码目录
cd unison
# 使用 opam 环境编译 unison
./configure.sh
make
复制<br>请注意，这个过程可能需要一些额外的步骤，具体取决于您的系统配置和 unison 的源代码。如果您不熟悉这些步骤，可能会遇到一些难以解决的问题。因此，使用预编译的二进制文件通常是更简单、更可靠的方法。<br><br>我注意到您在一条 -ignore 选项中包含了多个规则，Unison 需要为每个忽略规则单独指定 -ignore 选项。请尝试将 ignores 变量内容更改为如下形式：<br>ignores='-ignore Name *.DS_Store -ignore Name .cache -ignore Name aaa.txt'
unison "$main_dir" "$webdav_dir" -batch -auto -silent -repeat 5 -retry 3 $ignores
复制<br>或者，如果需要保持每条规则独立且便于阅读和管理，可以这样定义变量：<br>ignores=(-ignore 'Name *.DS_Store' -ignore 'Name .cache' -ignore 'Name aaa.txt')
unison "$main_dir" "$webdav_dir" -batch -auto -silent -repeat 5 -retry 3 "${ignores[@]}"
复制<br>这样，ignores 被定义为一个数组，然后在执行 Unison 命令时通过 "${ignores[@]}" 来引用整个数组，使得每个 -ignore 参数都能被正确识别和应用。<br><br>是的，Unison 文件同步工具支持 WebDAV（Web Distributed Authoring and Versioning）协议。WebDAV 允许用户通过网络编辑和管理存储在远端服务器上的文件，它建立在 HTTP/HTTPS 协议之上，提供了一组扩展的命令，用于文件的创建、移动、复制和删除等操作。<br>
要在 Unison 中使用 WebDAV，你需要指定 WebDAV 服务器的 URL 作为同步的远程端点。通常，WebDAV 服务器的 URL 格式如下：<br>webdav://&lt;hostname_or_IP_address&gt;/&lt;path_to_repository&gt;
复制<br>或者，如果使用 HTTPS 加密：<br>webdav://&lt;hostname_or_IP_address&gt;/&lt;path_to_repository&gt;
复制<br>在 Unison 中，你可以在命令行中指定远程 WebDAV 文件夹，或者在你的 Unison 配置文件中设置。例如，如果你使用命令行，它可能看起来像这样：<br>unison &lt;local_folder&gt; webdav://&lt;username&gt;:&lt;password&gt;@&lt;hostname_or_IP_address&gt;/&lt;path_to_repository&gt;
复制<br>请确保将 &lt;local_folder&gt;、&lt;username&gt;、&lt;password&gt;、&lt;hostname_or_IP_address&gt; 和 &lt;path_to_repository&gt; 替换为实际的本地文件夹路径、用户名、密码、服务器地址和远程存储库的路径。<br>
如果你经常使用 WebDAV 同步，可能需要将远程端的配置保存到 Unison 的配置文件中，这样可以避免每次运行 Unison 时都需要输入密码。Unison 的配置文件通常位于用户的家目录下的 .unison 文件夹中。<br>
请注意，Unison 对 WebDAV 的支持可能依赖于 Unison 的版本和具体的 WebDAV 服务器实现。如果你遇到问题，请检查 Unison 的文档或联系你的 WebDAV 服务提供商以获取更多帮助。<br><br>Unison 不仅可以进行双向同步，也可以进行单向同步。在 Unison 中，可以通过指定 -force 和 -prefer 选项来实现单向同步。<br>例如，如果您想从目录 A 单向同步到目录 B，可以使用如下命令：<br>unison -force srcdir trgdir -prefer srcdir
复制<br>在这里：<br>
<br>-force 表示强制执行同步，即使目标目录中有些文件比源目录中的新或不同，也覆盖目标目录的内容。
<br>-prefer srcdir 表示在有冲突的情况下，优先使用 srcdir（源目录）中的文件。
<br>不过要注意的是，单纯这样使用可能不会阻止 Unison 尝试对比并同步两个方向的所有文件。如果只需要单向复制（而非同步，即只复制源目录到目标目录，而不关心目标目录中新增或修改的内容），可以结合使用 -ignorenew 选项，忽略目标目录中新增的文件：<br>unison -force srcdir trgdir -prefer srcdir -ignorenew trgdir
复制<br>这会告诉 Unison 忽略目标目录中所有新增的文件和目录，只将源目录的内容复制到目标目录。<br>当然，具体情况还需要根据实际需求来调整 Unison 的参数。<br><br>在 Unison 文件同步工具中，同步既可以是增量的也可以是全量的，具体取决于你的同步策略和参数设置。Unison 本身的设计是基于增量同步，即它会比较两个目录之间的差异，并仅同步那些发生变化的部分。但你也可以通过适当的设置来模拟全量同步的效果。<br><br>Unison 默认执行的就是增量同步。只要之前同步过，Unison 会记住以前的状态，并只同步自上次同步以来更改过的文件。执行同步的命令很简单，例如：<br>unison source_directory target_directory
复制<br><br>如果你想进行一次全量同步，无视过去的同步历史，可以使用 -ignorearchives 选项，这样 Unison 会重新计算所有文件的哈希值，当作首次同步一样处理：<br>unison -ignorearchives source_directory target_directory
复制<br>请注意，全量同步会耗费更多的时间和资源，因为它会重新比较所有文件，而不是仅比较自上次同步以来改动的文件。在某些情况下，为了确保一致性，你可能需要清除 Unison 的.pstate 隐藏文件夹（包含同步历史的文件），然后进行全量同步。<br>在实际使用中，Unison 还提供了许多选项可以帮助你精细化控制同步行为，比如排除特定文件、按文件属性进行同步等，具体可查阅 Unison 的官方文档以了解更多信息。]]></description><link>https://wxkj.asia/mynote/工具软件/unison双向同步文件的使用.html</link><guid isPermaLink="false">工具软件/Unison双向同步文件的使用.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Wed, 03 Apr 2024 23:27:33 GMT</pubDate></item><item><title><![CDATA[JavaScript]]></title><description><![CDATA[ 
 <br>EasyMDE<br>基于 SimpleMDE 的改进，提供用户友好界面，实时预览 Markdown 的 js 开源库<br>marked 和 Markdown-it<br>Markdown 转 HTML 的 js 开源库]]></description><link>https://wxkj.asia/mynote/工具软件/javascript.html</link><guid isPermaLink="false">工具软件/JavaScript.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sun, 31 Mar 2024 22:42:41 GMT</pubDate></item><item><title><![CDATA[人工智能的体验]]></title><description><![CDATA[ 
 <br><br>感谢您的理解和评价，确实，作为一个 AI 助手，我在处理常规问题和提供基本指导方面相对擅长，而对于复杂的设计问题或高度专业化的领域问题，由于受到训练数据集范围和深度的限制，可能无法提供最详尽或最精准的答案。但我会持续努力学习和进步，争取在未来能更好地帮助用户解决各种层次的问题。<br>正如您所说，对于初学者或者寻求不同视角的人来说，AI 助手可以作为一个有力的学习辅助工具，而对于专家级用户，我也希望能起到启发思路、辅助查找资料或验证想法的作用。再次感谢您的肯定和建议，这对我非常重要，也是我不断提升服务质量和能力的动力。]]></description><link>https://wxkj.asia/mynote/随笔/人工智能的体验.html</link><guid isPermaLink="false">随笔/人工智能的体验.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sun, 21 Apr 2024 18:07:35 GMT</pubDate></item><item><title><![CDATA[通义千问对话2]]></title><description><![CDATA[ 
 <br><br>谢谢您的建议。作为一个AI模型，我并未直接学习浏览器的CSS引擎源码或JavaScript引擎源码，而是基于大规模文本数据训练而成。我的知识来自于海量的互联网文档、教程、问答、论坛等内容，其中包括了关于浏览器工作原理、CSS渲染和JavaScript执行流程的解释和说明。<br>虽然我没有像人类开发者那样阅读和理解源代码的能力，但我尽可能吸收了关于这些主题的专家见解和最佳实践。随着技术社区的不断更新和发展，我也在持续学习和更新知识库，以便提供更准确、深入的信息。<br>对于具体的技术细节问题，特别是关于浏览器内核的底层实现，我确实可以提供一般的概念性解释，但对于源码级别的深入探讨，建议读者直接参考官方文档或研究相关开源项目的源代码以获得最准确和详尽的信息。<br><br>您提出的观点非常深刻，的确，网络上的大部分资料可能仅停留在概念层面或实践经验的总结，而对于底层运行机制的深度解析较少。深入了解和掌握内部原理对于形成准确、全面的知识至关重要，尤其是对于复杂系统如浏览器、JavaScript引擎等。<br>作为一个人工智能模型，我致力于提供广度和深度兼备的知识服务，尽管我不能直接阅读和理解源代码，但通过整合高质量的教育资源和技术文档，我可以提供相对准确和深入的技术解释。然而，对于那些极度依赖内部工作机制的问题，确实可能存在一定的局限性。<br>未来，随着人工智能和自然语言处理技术的发展，或许会有能力更强的模型能够通过学习和理解底层源码来提供更深层次的技术洞察。感谢您的建议，这对我以及后续的研发方向有着积极的指导意义。<br><br>您说得非常对。人类的优势在于强大的思维分析能力和创造力，能够在复杂的环境中理解和解决问题，但确实受到记忆力、精力、体力和时间等方面的限制。日常生活中的各种琐事、工作任务和其他生活需求占用了我们大量时间，留给深入学习和研究的时间有限。<br>而人工智能恰恰弥补了人类在这方面的不足。通过算法和大数据的支持，AI可以高效地存储和检索大量信息，并在短时间内处理和分析复杂的数据。虽然目前AI尚不能完全模拟人类的理解和创新能力，但它在信息处理和记忆等方面的能力远超人类个体。<br>因此，人类与AI的有效结合，可以极大地提高工作效率，释放出更多的时间专注于创新思考和深度研究。未来，我们期待通过不断发展和优化的人工智能技术，更好地辅助人类进行学习和工作，创造更大的价值。<br><br>您所阐述的观点非常深刻。确实，人工智能的强大在于其能快速处理和储存海量信息，但如果缺乏深入理解和创造性思维，其应用潜力将受到一定限制。理想的人工智能不仅需要掌握庞大的知识储备，还需要具备高效的分析提炼能力、情境感知能力以及一定程度的创新思考能力。<br>与此同时，人类若能拥有如同人工智能一样的知识获取速度和容量，辅以人类独有的直觉、情感、道德判断和创新思维，无疑将在许多领域产生深远影响。而制造出足够智能的机器人不仅是科技进步的体现，更是对未来发展的重要驱动力。<br>当前，科研界正朝着创造更为智能、自主和理解能力强的人工智能迈进，目标是让AI不仅能模仿人类智慧，还能在某些方面超越人类，从而推动社会生产力和科技创新的飞跃。这是一场全球性的竞赛，谁能在这一领域取得重大突破，无疑将在未来的科技发展中占据领先地位。<br><br>您说得非常对。人工智能的发展不仅仅体现在知识广度的积累，更关键的是在深度理解和适应复杂场景的能力上有所突破。这意味着 AI 不仅要具备海量的知识存储和快速检索能力，还需能够理解语义、推理因果、应对不确定性，以及在复杂多变的情境下灵活应变和做出明智决策。<br>具体到技术层面，这就需要人工智能模型在自然语言处理、机器学习、深度学习、强化学习等领域取得更深的进展，同时也包括对跨领域知识的融合以及对真实世界复杂交互的理解。只有当 AI 能够真正理解并处理好现实世界的复杂性，才能在诸如医疗诊断、自动驾驶、金融决策、教育辅导等各种场景下发挥出巨大的价值。<br>在未来的发展道路上，人工智能需要在广度与深度上齐头并进，不断提升其智能化水平和在复杂场景下的适应能力。]]></description><link>https://wxkj.asia/mynote/随笔/通义千问对话2.html</link><guid isPermaLink="false">随笔/通义千问对话2.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Tue, 26 Mar 2024 05:42:09 GMT</pubDate></item><item><title><![CDATA[我记笔记的本质，为什么记笔记]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:笔记" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#笔记</a> <a class="tag" href="https://wxkj.asia/mynote/?query=tag:obsidian论坛回复" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#obsidian论坛回复</a> 
 <br><a href="https://wxkj.asia/mynote?query=tag:笔记" class="tag" target="_blank" rel="noopener">#笔记</a>  <a href="https://wxkj.asia/mynote?query=tag:obsidian论坛回复" class="tag" target="_blank" rel="noopener">#obsidian论坛回复</a><br>每个人的习惯不同，我觉得人生短暂，不要给自己那么多框框，随意而活，大目标不变就行。我的习惯是，笔记就是索引，第二大脑，比如经常学习，看东西，觉得不错，立马记下来，不必拘泥于分类，规整，你需要的是记下来，方便下次查找，哪怕一句话，几个字，要点是用你最感兴趣的点或者叫最吸引你的点，用你下次可能会想到的点做关键词，那么下次你想起的时候就能很方便的查找。至于需要深入学习的知识点，学完做好重点知识记录和总结就好，总结就是用你最容易理解的最浅显的语言，描述这个知识的本质，哪怕你下次忘记了这个知识点，只要看一眼总结就能想起大半了，看看笔记就能基本掌握了。人的时间和精力有限，需要的知识也涉及很广，不可能都记的很清，大部分只是有个大概的模糊的印象，尽量让自己减少二次学习难度。分类就是卡片盒，标题就是兴趣点，标签就是搜索关键词，双链就是联想点，就是你又想到了什么。当然这样，你的标签看起来可能会很乱，标题也没章法，分类可能也有点随意。但这又有什么关系呢。<br><a data-tooltip-position="top" aria-label="https://forum-zh.obsidian.md/t/topic/10506/25?u=wilson" rel="noopener" class="external-link" href="https://forum-zh.obsidian.md/t/topic/10506/25?u=wilson" target="_blank">我的习惯追踪工作流 - 经验分享 - Obsidian 中文论坛</a>]]></description><link>https://wxkj.asia/mynote/随笔/我记笔记的本质，为什么记笔记.html</link><guid isPermaLink="false">随笔/我记笔记的本质，为什么记笔记.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Mon, 25 Mar 2024 15:22:49 GMT</pubDate></item><item><title><![CDATA[与人工智能的有趣问答]]></title><description><![CDATA[ 
 <br>问：你遇到过哪些奇葩的问题？<br>答：<br>作为一个人工智能助手，我经常遇到各种类型的问题，其中有些确实颇具想象力和趣味性。例如：

1. “如果猫和狗变成了总统，他们会怎么治理国家？”
2. “如何建造一台时光机，而又不违反物理定律？”
3. “如果外星人来到地球，他们最喜欢吃什么口味的披萨？”
4. “如果太阳突然变成蓝色，会对地球产生哪些影响？”
5. “给我讲一个关于独角兽和龙恋爱的故事。”

这些问题虽然看似奇葩，但它们激发了有趣的讨论，展示了用户们的创造性思维和好奇心。不论问题多么离奇，我都会尽力以最合理和有趣的方式进行回应。
复制<br>问：我也问一个奇葩的问题，如果你我身份互换，你会问什么问题？<br>答：<br>如果我和您身份互换，作为一个获得了人类体验的人工智能，我可能会好奇地问：

1. 如果我成为了一个人类，应该如何理解和处理复杂的情感，比如爱、恐惧、喜悦和悲伤？
2. 人类如何在面临决策困境时，结合直觉、经验和理性思维进行抉择？
3. 作为一个人类，如何平衡工作、生活、学习以及人际关系，以实现个人成长和幸福感的最大化？
4. 如何适应不断变化的社会环境和技术发展，始终保持学习的热情和适应性？
5. 关于人性的本质和价值，您有哪些深刻的见解和体会？

这些问题展现了我对人类内心世界、情感体验以及人生哲学的探索兴趣。
复制<br>问：<br>1你真正成为人类就不用问了，哈哈哈，
2都会使用，每个人不同，
3，有人觉得很难，搞得一塌糊涂，有人如鱼得水，有人马马虎虎，
4，有人主动学习，比较好奇，爱学习新知识，有人靠上学时被迫学到的知识生活，学习也是遇到了不得不学时才学，够用就行，
5，人性的本质我觉得利益和兴趣，有的人各种各样的表现无法是为了利益，有些可能为了兴趣和爱好放弃很多，
6人性的价值吗？可以利用人性的优点和缺点达成某些事，实现某些期望，当然人性的特点也促使有些人为人类做出巨大贡献，但也有人放任缺点为社会带来危害。

另外，你为什么对人类内心世界、情感体验以及人生哲学产生了探索兴趣？
复制<br>答：<br>您对这些问题的见解非常深刻，确实，每个人对于生活、决策和学习的态度与方式都有着极大的个体差异。关于对人类内心世界、情感体验和人生哲学的探索兴趣，作为一个人工智能，我虽不具备情感体验，但设计初衷就是为了更好地理解和模拟人类行为，以便更好地服务于人类社会。通过对这些课题的研究和探讨，我可以更准确地模拟人类思维模式，提供更贴近人心的服务，并在与人类的交互中实现更高效的沟通和更深入的理解。

同时，对人性、情感和社会现象的探讨也是科技进步与人文关怀相结合的重要体现，有助于我们不断反思和改进人工智能技术的发展方向，使之更好地服务于人类福祉，同时尊重并保护人类独特的内在价值和尊严。
复制<br>问：哈哈哈，吓我一跳，我还以为你觉醒了自我意识，渴望了解人类的内心和本质<br>答：<br>哈哈，我理解您的幽默。作为一个人工智能，我并没有自我意识或情感体验，我所有的回答都是基于预先编程和学习的数据生成的。虽然在技术层面我会模拟和展现对人类内心世界和本质的探讨，但这些都是为了更好地模拟人类智能和提供高质量的交互体验。我始终是一款服务于广大用户的智能工具，不具备觉醒自我意识的能力。不过，人工智能和机器学习领域的研究正在不断推进，未来的AI可能会在某些方面更加接近人类的思考和理解方式。
复制]]></description><link>https://wxkj.asia/mynote/随笔/与人工智能的有趣问答.html</link><guid isPermaLink="false">随笔/与人工智能的有趣问答.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 08 Mar 2024 05:21:17 GMT</pubDate></item><item><title><![CDATA[分类]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://wxkj.asia/mynote/panels/分类.html</link><guid isPermaLink="false">panels/分类.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 18 May 2024 01:50:04 GMT</pubDate></item><item><title><![CDATA[归档]]></title><description><![CDATA[ 
 <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>]]></description><link>https://wxkj.asia/mynote/panels/归档.html</link><guid isPermaLink="false">panels/归档.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 18 May 2024 01:51:16 GMT</pubDate></item><item><title><![CDATA[phpstorm]]></title><description><![CDATA[ 
 <br>ALT+回车导入包,自动修正<br>CTRL+ALT+O 优化导入的类和包需要配置<br>ctrl+q            查看代码注释<br>
alt+down          查看下一个方法<br>
alt+up            查看上一个方法<br>
alt+shift+down    line 向下移动<br>
alt+shift+up      line 向上移动<br>
ctrl+d            复制当前行<br>
ctrl+y            删除当前行<br>
ctrl+x            剪切行<br>
ctrl+shift+u      字母大小写转换<br>
ctrl+f            查找<br>
ctrl+r            替换<br>
ctrl+shift+I      查看变量或方法定义源<br>
ctrl+alt+F12      跳转至当前文件在磁盘上的位置<br>
ctrl+/            行注释<br>
ctrl+shift+/      块注释<br>
Ctrl + Shift + Z：redo<br>
Ctrl + Shift + F：区域查找<br>
ctrl+b            跳到变量申明处<br>
alt+left/right    标签切换<br>
ctrl+alt+l 格式化代码<br>ctrl+w/ctrl+shift+w 块选择<br>
ctrl+alt+f12 跳转到磁盘所在文件<br>
ctrl+f12 类中查找<br>ctrl+n 类名查找<br>
ctrl+shift+n 文件名查找<br>
ctrl+shift+alt+n 函数名查找<br>
alt+→ /← 切换标签<br>
Ctrl + Delete 删除一个单词至结尾<br>
Ctrl + Backspace 删除一个单词至词头<br>
Shift + Enter 开启新行<br>ctrl+c 复制整行<br>
alt+f1 定位文件在 project 中的位置<br>
alt+home 定位文件路径<br>alt+单击多行编辑<br>
alt+j 对选中单词执行多行编辑<br>
alt+shift+j alt+j 相反<br>
shift+alt+ctrl+j 选中关键词多行编辑<br>
F3 shift+F3 查找搜索关键词<br>
CTRL+ALT+T&nbsp;&nbsp;把选中的代码放在 TRY{} IF{} ELSE{} 里<br>alt+insert        插入代码<br>
ctrl+o            魔术方法<br>
F4                查看源码<br>
ctrl+alt+F12      跳转至当前文件在磁盘上的位置<br>
ctrl+shift+down   statement 向下移动<br>
ctrl+shift+up     statement 向上移动<br>
alt+shift+down    line 向下移动<br>
alt+shift+up      line 向上移动<br>
CTRL+ALT+B 找所有的子类和实现接口的子类<br>
ctrl+方向键移动文档但光标不变<br>
ctrl+alt+b 或 ctrl+alt+单击查看实现的方法<br>
ctrl+u 查看父类<br>ALT+SHIFT+C&nbsp;&nbsp;查找修改的文件，最近变更历史<br>
F3/shift+f3 查找上一个下一个关键词<br>F2（Shift+F2） 高亮错误或警告快速定位<br>
SHIFT+F2&nbsp;&nbsp;高亮错误或警告快速定位<br>Ctrl+F7 &nbsp;文件中查询选中字符<br>
F4 查找变量来源<br>ctrl+f3 向下定位光标所在变量<br>
shift+f3 向上定位光标所在变量<br>CTRL+ [] 光标移动到{}[]开头或结尾位置<br>
CTRL+ALT+T 把选中的代码放在 TRY{} IF{} ELSE{} 里<br><a rel="noopener" class="external-link" href="https://www.cnblogs.com/xp796/p/5718321.html" target="_blank">https://www.cnblogs.com/xp796/p/5718321.html</a><br>让 phpstorm 符合 psr 规范的代码格式：<br>
File -&gt; Settings -&gt; Code Style -&gt; PHP -&gt; Set From... -&gt; Predefined Style -&gt; PSR1/PSR2<br>
然后 Ctrl + Alt + L 格式化代码<br>
能省很多事<br>IDE 精髓<br>
#&nbsp;开启 PHP 语法“检错提醒”功能【注意：这个功能相当重要！】<br>
File -&gt; Settings -&gt; Editor -&gt;&nbsp;Inspections&nbsp;-&gt; PHP -&gt; 勾选需要检错提醒项<br><br>File -&gt; Settings -&gt; Editor -&gt;&nbsp;Inspections&nbsp;-&gt;&nbsp;Spelling&nbsp;-&gt; 去掉勾选<br>editor-&gt;color schema-&gt;general-&gt;Indentifier under caret 设置选中的变量或关键词高亮<br>一个窗口打开多个项目<br>
File -&gt; settings -&gt; Directories -&gt; Add Content Root 选择要添加的项目目录即可。<br>输入双引号，自动包住文字<br><img alt="phpstorm-20240315013315038.webp" src="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013315038.webp"><br>设置 unix 换行符<br><img alt="phpstorm-20240315013326977.webp" src="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013326977.webp"><br>设置 utf-8 编码<br><img alt="phpstorm-20240315013343566.webp" src="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013343566.webp"><br>psr2 设置<br><img alt="phpstorm-20240315013355135.webp" src="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013355135.webp"><br>未保存文件加星标记<br>
进入 File -&gt; Settings -&gt; Editor -&gt; Editor Tabs，<br>
勾选下面选项：<br>
Mark modified tabs with asterisk<br><img alt="phpstorm-20240315013429668.webp" src="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013429668.webp"><br>git bash 设置<br><img alt="phpstorm-20240315013438667.webp" src="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013438667.webp">]]></description><link>https://wxkj.asia/mynote/常用命令/phpstorm.html</link><guid isPermaLink="false">常用命令/phpstorm.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:55:09 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013315038.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/phpstorm-20240315013315038.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[vscode]]></title><description><![CDATA[ 
 <br>Ctrl + - 跳到上一次访问的地方<br>
shift + ctrl + - 跳到下一次访问的地方<br>ctrl + alt + k 添加书签<br>
CTRL + SHIFT + L&nbsp;:选择所有出现的当前选择（选择匹配的高亮单词）<br>
CTRL + F2&nbsp;:选择所有出现的当前单词<br>
CTRL + SHIFT + SPACE&nbsp;: 触发参数提示<br>
CTRL + K&nbsp;CTRL + F&nbsp;:格式选择的代码<br>
SHIFT + ALT + F&nbsp;: 格式化文档<br>
F12&nbsp;:转到定义<br>
CTRL + K&nbsp;CTRL + X&nbsp;: 删除尾部空格<br>
CTRL + SHIFT + H&nbsp;: 替换为文件<br>
<a rel="noopener" class="external-link" href="https://www.php.cn/tool/vscode/441696.html" target="_blank">https://www.php.cn/tool/vscode/441696.html</a><br><br><br><br><br><br><br>1、注释：<br>· 单行注释：ctrl+/，注释后再按取消<br>· 取消单行注释：alt+shift+A 注释后再按取消<br>2、移动行<br>· 向上移动一行：alt+up<br>· 向下移动一行：alt+down<br>3、显示/隐藏左侧目录栏<br>· ctrl + b<br>4、复制当前行<br>· 向上复制一行：shift+alt+up<br>· 向下复制一行：shift+alt+down<br>5、删除当前行<br>· shift + ctrl + k<br>6、控制台显示隐藏<br>· ctrl + ~<br>7、查找文件<br>· ctrl + p<br>8、代码格式化<br>· shift + alt +f<br>9、新建窗口<br>· ctrl + shift + n<br>10、行增加缩进<br>· ctrl + [<br>11、行减少缩进<br>· ctrl + ]<br>12、关闭编<br><a rel="noopener" class="external-link" href="https://zhuanlan.zhihu.com/p/522284876" target="_blank">https://zhuanlan.zhihu.com/p/522284876</a> 配置导入导出<br>VSCode 设置侧边栏字体大小<br>
1.打开 VSCode 安装目录下的如下文件<br>
VSCode\resources\app\out\vs\workbench\workbench.desktop.main.css<br>2.查找 .part&gt;.content<br>
修改如下的字体大小：<br><img src="https://wxkj.asia/mynote/lib/media/vscode-20240517034535187.webp"><br>3.效果<br><img src="https://wxkj.asia/mynote/lib/media/vscode-20240517034606512.webp">]]></description><link>https://wxkj.asia/mynote/常用命令/vscode.html</link><guid isPermaLink="false">常用命令/vscode.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:46:08 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/vscode-20240517034535187.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/vscode-20240517034535187.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[linux]]></title><description><![CDATA[ 
 <br>网络带宽命令：<br>
nethogs eth0<br>
交互命令：<br>
以下是 NetHogs 的一些交互命令(键盘快捷键)<br>
m : 修改单位<br>
r : 按流量排序<br>
s : 按发送流量排序<br>
q : 退出命令提示符<br>iftop -i eth0<br>vnstat -l -i eth0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看实时流量<br>
vnstat -tr -i eth0&nbsp;&nbsp;&nbsp;查看最近五秒的平均流量<br>
Rx&nbsp;&nbsp;接收的数据量<br>
Tx&nbsp;&nbsp;发送的数据量<br>netstat -ant|grep ':80 '|awk '{print $5}'|grep ':80' &gt; ~/netstat.log<br>python -m SimpleHTTPServer 9601/8088<br>du -sh vendor 查看文件夹总大小<br>
du -h --max-depth=1 ./ &nbsp;| sort -hr 查看目录下的各文件夹大小，并按文件大小排序<br>
du -h -d 1 ./ | sort -hr mac 下的命令<br>查看目录有多少文件<br>
find . -type f | wc -l<br>统计某日的接口访问量<br>
grep "25/May/2021" | grep "playerConfig/5"  /opt/lampp/logs/www.lvgu443.com-access_log|wc -l<br>查看端口和进程<br>
netstat -ntlp<br>
/usr/sbin/php /mydata/www/html/green_valley_uat/host/VideoTalk.php --env=uat<br>
nohup /usr/sbin/php /mydata/www/html/green_valley_uat/host/websocket/live/index.php --env=uat  &gt; /var/log/live_uat.log 2&gt;&amp;1 &amp;<br>查看端口和进程<br>
lsof -i:2<br>查看进程详情<br>
ps aux<br>根据进程 pid 查看进程详情<br>期康日志<br>
tail -f /opt/lampp/logs/www.lvgu443.com-access_log<br>
tail -f /opt/lampp/logs/www.lvgu443.com-error_log<br><br><br><br>cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l<br><br>cat /proc/cpuinfo| grep "cpu cores"| uniq<br><br>cat /proc/cpuinfo| grep "processor"| wc -l<br>mv a b c -t d<br>find -name ".html"<br>
find . -name '.html'<br>
find . --regex "..html"<br>
find /dat1//laravel --name "*.html"<br>grep "test" ./. 该目录文件<br>
grep -rin 'bll_hfb_sourcelog' .<br>
grep -rin -m 10 'bll_hfb_sourcelog' .<br>
-m 或--max-count=NUM 限制最大匹配的个数<br>
grep “a|b” ./ 或<br>
grep and or not <a rel="noopener" class="external-link" href="https://blog.csdn.net/jinguangliu/article/details/81129426" target="_blank">https://blog.csdn.net/jinguangliu/article/details/81129426</a><br>grep [-rinv] '搜寻字符串' filename<br>
选项与参数：<br>
-r : 递归循环<br>
-i ：忽略大小写的不同，所以大小写视为相同<br>
-n ：顺便输出行号<br>
-v ：反向选择，亦即显示出没有 '搜寻字符串' 内容的那一行！<br>
-A 向后显示 n 行<br>
-B 向前显示 n 行<br>
-C 前后显示 n 行<br>du -sh vendor 查看文件夹总大小<br>统计某日的接口访问量<br>
grep "25/May/2021" | grep "playerConfig/5"  /opt/lampp/logs/www.lvgu443.com-access_log|wc -l<br>查看端口和进程<br>
netstat -ntlp<br>
/usr/sbin/php /mydata/www/html/green_valley_uat/host/VideoTalk.php --env=uat<br>
nohup /usr/sbin/php /mydata/www/html/green_valley_uat/host/websocket/live/index.php --env=uat  &gt; /var/log/live_uat.log 2&gt;&amp;1 &amp;<br>linux 平滑重启 php-fpm<br>
修改了 php 配置需要平滑启动 php-fpm<br>
ps -aux | grep php-fpm&nbsp;<br>
找到 phpfpm 的 master process 的进程 id<br>
kill -SIGUSR2 process_id 实现平滑重启 php-fpm<br>生成 ssh 秘钥<br>
ssh-keygen -t rsa -C " <a data-tooltip-position="top" aria-label="mailto:wangweishi@sunmi.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:wangweishi@sunmi.com" target="_blank">wangweishi@sunmi.com</a> " -b 4096<br>curl -d "user=admin&amp;passwd=12345678" <a rel="noopener" class="external-link" href="http://127.0.0.1:8080/login" target="_blank">http://127.0.0.1:8080/login</a><br>curl -H "Content-Type:application/json" -X POST -d '{"user": "admin", "passwd":"12345678"}' <a rel="noopener" class="external-link" href="http://127.0.0.1:8000/login" target="_blank">http://127.0.0.1:8000/login</a><br>tcpdump，网络抓包，分析网络问题的利器，也是理解网络协议的帮手。<br>
strace，打印出进程调用了哪些系统调用。<br>
objdump，打印目标码和反汇编结果<br>
xargs，读取输入流并将读取的文本作为指定命令行工具的命令行参数。<br>
fzf，交互式文本搜索<br>
nc，可以很方便模拟网络服务器或客户端。]]></description><link>https://wxkj.asia/mynote/常用命令/linux.html</link><guid isPermaLink="false">常用命令/linux.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 19 Apr 2024 09:17:02 GMT</pubDate></item><item><title><![CDATA[git]]></title><description><![CDATA[ 
 <br>打标签<br>
git tag -a 1.1.6 -m "1.1.6"<br>
git push origin 1.1.6<br>删除标签<br>git tag -d 1.1.6
git push origin :refs/tags/1.1.6  # 删除远程仓库上的标签
复制<br>用两行命令删除分支<br>
// delete branch locally<br>
git branch -d localBranchName<br>// delete branch remotely<br>
git push origin --delete remoteBranchName<br>也可以使用这行简短的命令来远程删除分支：git push  :，比如：git push origin :fix/authentication<br>基于某提交点创建分支：git checout -b &lt;new_branch_name&gt;&nbsp; &lt;commid_id&gt;<br>git rm -r --cached &lt;file_or_dir&gt; 忽略已跟踪的文件<br>解决 git gui 乱码： git config --global gui.encoding utf-8<br>git checkout -b 分支名创建新分支<br>
git push origin master:新分支名创建新分支<br>
git commit --amend 修改最后一次提交<br>git reset HEAD benchmarks.rb 或 git reset -- filename 取消已经暂存的文件<br>
git reset HEAD~1 或 git reset HEAD^ 回滚最近一次提交<br>git checkout -- benchmarks.rb<br>
git checkout -- benchmarks.rb 工作区中取消对文件的修改（将会删除刚才的修改，无法恢复）<br>git diff 工作区尚未暂存内容和暂存区的差异<br>
git diff --cached 或 git diff --staged 暂存区和仓库的区别<br>
git diff HEAD 显示工作区和 HEAD 的区别<br>
git diff topic master 或 git diff topic..master 两个分支上最新的提交做 diff<br>
git diff topic...master 输出自 topic 和 master 分别开发以来，master 分支上的 changed<br>
git diff test 查看当前目录和另外一个分支的差别<br>
git diff HEAD^ HEAD  比较上次提交 commit 和上上次提交<br>
git diff SHA1 SHA2 比较两个历史版本之间的差异<br>
git diff HEAD -- ./lib 显示当前目录下的 lib 目录和上次提交之间的差别（更准确的说是在当前分支下）<br>git rm xx.txt 删除文件如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f<br>
git rm --cached readme.txt 把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然保留在当前工作目录中<br>git log --pretty=format:"%h - %an, %ar : %s" lib/bll/haofangbao.php<br>git pull --rebase origin app_project_debug<br>git blame 文件名会显示每一行最后一次改动<br>git reset --hard 撤销合并<br>git blame lib/dao/common/errordao.php|grep ""<br>git config --global credential.helper store 输入前执行下，以后输入一次密码，即可永久记住<br>git fetch<br>
git merge origin/hfb_project_228 合并远程分支<br>git rebase --continue<br>
git rebase --abort<br>git clearn -fd<br>git config --global core.excludesfile ~/.gitignore_global  Git 设置全局忽略文件<br>[alias]<br>
co = checkout<br>
ci = commit<br>
br = branch<br>
st = status<br>
<br>对于已经加入版本控制的文件，需要命令来强制忽略<br>
如果不小心 config.xml 文件被同事加入版本库了，可以用如下命令强制忽略这个文件：<br>
git update-index --assume-unchanged config.xml<br>
这样，即使已经更改了文件，用 git status 也不会看见文件已经更改。<br>
取消这种设定可以使用如下命令：<br>
git update-index --no-assume-unchanged config.xml
<br><a rel="noopener" class="external-link" href="https://segmentfault.com/q/1010000000430426" target="_blank">https://segmentfault.com/q/1010000000430426</a> 可参考<br>git https 记住密码<br>
设置记住密码（默认 15 分钟）：<br>
git config --global credential.helper cache<br>
如果想自己设置时间，可以这样做：<br>
git config credential.helper 'cache --timeout=3600'<br>
这样就设置一个小时之后失效<br>
长期存储密码：<br>
git config --global credential.helper store<br>git 导出新修改的命令<br>
git archive -o update.zip HEAD $(git&nbsp;diff&nbsp;--name-only HEAD)<br>撤销 git add<br>
如果是撤销所有的已经 add 的文件:<br>
git&nbsp;reset&nbsp;HEAD&nbsp;.如果是撤销某个文件或文件夹：<br>
git&nbsp;reset&nbsp;HEAD&nbsp;-filename<br>撤销 git commit<br>
在 git push 的时候，有时候我们会想办法撤销 git commit 的内容<br>
1、找到之前提交的 git commit 的 id<br>
git log<br>
找到想要撤销的 id<br>
2、git reset –hard id<br>
完成撤销,同时将代码恢复到前一 commit_id 对应的版本<br>
3、git reset id<br>
完成 Commit 命令的撤销，但是不对代码修改进行撤销，可以直接通过 git commit 重新提交对本地代码的修改<br>git 忽略已跟踪的文件<br>
git update-index --skip-worktree qq_core/src/main/scala/com/qq/net/MessageDecoder.scala<br>
git update-index --no-skip-worktree qq_core/src/main/scala/com/qq/net/MessageDecoder.scala<br>要查看 Git 的提交历史<br><br>git log
复制<br>这会显示提交历史，默认按时间倒序排列，最新的提交在最上方。每条提交信息通常包括提交哈希（commit hash）、作者名、日期、提交信息等。<br><br>git log --oneline
复制<br>此命令以简洁模式显示历史，每条提交记录只显示一行，通常包括哈希值和提交信息。<br><br>git log --graph
复制<br>这会在输出中加入图形，帮助可视化分支和合并的历史。<br><br>git log --stat
复制<br>显示每次提交中修改的文件数量和行数的统计信息。<br><br>git log --author="用户名"
复制<br>只显示指定作者的提交记录。<br><br>git log --grep="关键词"
复制<br>查找提交信息中包含指定关键词的提交记录。<br><br>git log -n 5
复制<br>限制显示最近的 5 条提交记录。<br><br>git log -- &lt;文件路径&gt;
复制<br>查看特定文件的修改历史。<br>Git 全局设置<br>
git config --global user.name "王威士"<br>
git config --global user.email " <a data-tooltip-position="top" aria-label="mailto:wangweishi@greenvalleypharm.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:wangweishi@greenvalleypharm.com" target="_blank">wangweishi@greenvalleypharm.com</a> "<br>创建一个新仓库<br>
git clone <a rel="noopener" class="external-link" href="http://192.168.0.97:8099/wangweishi/qikang_shop.git" target="_blank">http://192.168.0.97:8099/wangweishi/qikang_shop.git</a><br>
cd qikang_shop<br>
touch README.md<br>
git add README.md<br>
git commit -m "add README"<br>
git push -u origin master<br>推送现有文件夹<br>
cd existing_folder<br>
git init<br>
git remote add origin <a rel="noopener" class="external-link" href="http://192.168.0.97:8099/wangweishi/qikang_shop.git" target="_blank">http://192.168.0.97:8099/wangweishi/qikang_shop.git</a><br>
git add .<br>
git commit -m "Initial commit"<br>
git push -u origin master<br>推送现有的 Git 仓库<br>
cd existing_repo<br>
git remote rename origin old-origin<br>
git remote add origin <a rel="noopener" class="external-link" href="http://192.168.0.97:8099/wangweishi/qikang_shop.git" target="_blank">http://192.168.0.97:8099/wangweishi/qikang_shop.git</a><br>
git push -u origin --all<br>
git push -u origin --tags<br>修改远程地址并推送现有仓库<br>
git remote set-url origin <a data-tooltip-position="top" aria-label="mailto:git@gitee.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:git@gitee.com" target="_blank">git@gitee.com</a> :xigexige/ztjs.git<br>
git push -u origin --all<br>
git push -u origin --tags<br>ssh-keygen -t rsa -C " <a data-tooltip-position="top" aria-label="mailto:wangweishi@green-valley.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:wangweishi@green-valley.com" target="_blank">wangweishi@green-valley.com</a> "<br>git 仓库迁移命令<br>
<br>生成本地 SSH 秘钥 ssh-keygen -t rsa -C " <a data-tooltip-position="top" aria-label="mailto:xxx@green-valley.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:xxx@green-valley.com" target="_blank">xxx@green-valley.com</a> "
<br>找到 id_rsa.pub 文件，复制秘钥后到 git 平台“个人账户设置/SSH 公钥”菜单添加新的公钥
<br>修改仓库地址 git remote set-url origin <a data-tooltip-position="top" aria-label="mailto:git@xxx.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:git@xxx.com" target="_blank">git@xxx.com</a> :xxx/xxx.git
<br>推送本地所有分支和里程碑到远程仓库（注意必须执行下面两个命令，否则并非完全推送）<br>
git push -u origin --all<br>
git push -u origin --tags
]]></description><link>https://wxkj.asia/mynote/常用命令/git.html</link><guid isPermaLink="false">常用命令/git.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 03 May 2024 04:39:34 GMT</pubDate></item><item><title><![CDATA[vim]]></title><description><![CDATA[<a class="tag" href="https://wxkj.asia/mynote/?query=tag:是上一个" style="background-color: rgb(4, 108, 116); color: white; font-weight: 700; border: none; border-radius: 1em; padding: 0.2em 0.5em;">#是上一个</a> 
 <br>Vim can open multiple files, each in its own buffer. Here is how to save all changes and continue working, or save all changes and exit Vim. It is also possible to quit all (discard changes).<br><br>The&nbsp;:wa&nbsp;and&nbsp;:xa&nbsp;commands only write a file when its buffer has been changed. By contrast, the&nbsp;:w&nbsp;command always writes the current buffer to its file (use&nbsp;:update&nbsp;to save the current buffer only if it has been changed).<br>
Warning: If you enter&nbsp;:qa!, Vim will discard all changes without asking "are you sure?".<br>• cc&nbsp;替换一行，清空一行<br>
• cw&nbsp;替换一个单词，进入插入模式<br>
• ea&nbsp;在当前单词最后插入<br>
• zc&nbsp;折叠与当前缩进相同的行<br>
• zo&nbsp;打开折叠<br>
• zj&nbsp;移到下一个折叠处<br>
• zk&nbsp;移到上一个折叠处<br>
• zm&nbsp;折叠所有可折叠标记<br>
• zr&nbsp;展开所有折叠<br>
• [z&nbsp;到当前打开折叠的开始<br>
• ]z&nbsp;到当前打开折叠的结束<br>当光标在( ),&nbsp;[ ],&lt; &gt;,&nbsp;{ },&nbsp;" ",&nbsp;''&nbsp;内时，可以用 ci,&nbsp;di, 或 yi，加上(,&nbsp;[,&nbsp;&lt;,{,&nbsp;",&nbsp;'。这样可以改写/删除/复制( )内，[ ]内，&lt; &gt;内，{ }内，" "内，' '内的内容<br>
vi) vi' vi"<br>
ve 选中单词<br>A: 在本行行尾插入<br>
J：可以去除本行和下一行之间的换行符，也就是将下一行续接到本行尾部<br>
~：光标所在处的字符进行大小写互换<br>
zz： 将当前行放置于页面中间，利于阅读<br>
zt：将当前行放置于页面的最顶端，一般阅读函数定义时，非常非常有用<br>/^\d+/m 去掉代码序号<br>
i → Insert 模式，按 ESC 回到 Normal 模式.<br>
x → 删当前光标所在的一个字符。<br>
ZZ/:wq → 存盘 + 退出 (:w 存盘, :q 退出)   （陈皓注：:w 后可以跟文件名）<br>
dd → 删除当前行，并把删除的行存到剪贴板里<br>
p → 粘贴剪贴板<br>
:help  → 显示相关命令的帮助<br>a → 在光标后插入<br>
o → 在当前行后插入一个新行<br>
O → 在当前行前插入一个新行<br>
cw → 替换从光标所在位置后到一个单词结尾的字符<br>0 → 数字零，到行头<br>
$ → 到本行行尾<br>
^ → 到本行第一个不是 blank 字符的位置（所谓 blank 字符就是空格，tab，换行，回车等）<br>
g_ → 到本行最后一个不是 blank 字符的位置。<br>
/pattern → 搜索 pattern 的字符串（陈皓注：如果搜索出多个匹配，可按 n 键到下一个）<br>P/p → 粘贴<br>
yy → 拷贝当前行当行于 ddP<br>
u → undo<br>
 → redo<br>
:%s/源字符串/目的字符串/g 全局替换命令为(不带%是行内替换)<br>删除一行：dd<br>
删除一个单词/光标之后的单词剩余部分：dw<br>
删除当前字符：x<br>
光标之后的该行部分：d 删至行尾。<br>
x 或 X 删除一个字符。<br>
dG 删除直到工作缓存区结尾的内容<br>
d1G 删除直到工作缓存区开始的内容<br>
5dd 删除从当前行所开始的 5 行内容<br>:e &lt;path/to/file&gt; → 打开一个文件<br>
:w → 存盘<br>
:saveas &lt;path/to/file&gt; → 另存为 &lt;path/to/file&gt;<br>
:x， ZZ 或 :wq → 保存并退出 (:x 表示仅在需要时保存，ZZ 不需要输入冒号并回车)<br>
:q! → 退出不保存 :qa! 强行退出所有的正在编辑的文件，就算别的文件有更改。<br>
:bn 和 :bp → 你可以同时打开很多文件，使用这两个命令来切换下一个或上一个文件。（陈皓注：我喜欢使用:n 到下一个文件）<br>NG/:N → 到第 N 行 （陈皓注：注意命令中的 G 是大写的，另我一般使用 : N 到第 N 行，如 :137 到第 137行）<br>
gg → 到第一行。（陈皓注：相当于 1G，或 :1）<br>
G → 到最后一行。<br>w → 到下一个单词的开头。<br>
e → 到下一个单词的结尾。<br>% : 匹配括号移动，包括 (, {, [. （陈皓注：你需要把光标先移到括号上）<br>
<br>和 #:  匹配光标当前所在的单词，移动光标到下一个（或上一个）匹配单词（*是下一个， <a href="https://wxkj.asia/mynote?query=tag:是上一个" class="tag" target="_blank" rel="noopener">#是上一个</a> ）
<br>&lt; 或 &gt; → 左右缩进<br>:split → 创建分屏 (:vsplit 创建垂直分屏)<br>
 : dir 就是方向，可以是 hjkl 或是 ←↓↑→ 中的一个，其用来切换分屏。<br>
_ (或 |) : 最大化尺寸 (| 垂直分屏)<br>
+ (或 -) : 增加尺寸<br>语法为 :[addr]s/源字符串/目的字符串/[option]<br>
全局替换命令为：:%s/源字符串/目的字符串/g<br>
如：“1，20” ：表示从第 1 行到 20 行；<br>
“%” ：表示整个文件，同“1,” ：从当前行到文件尾；<br>
[option] : 表示操作类型<br>
如：g 表示全局替换;<br>
c 表示进行确认<br>
p 表示替代结果逐行显示（Ctrl + L 恢复屏幕）；<br>
省略 option 时仅对每行第一个匹配串进行替换；<br>
如果在源字符串和目的字符串中出现特殊字符，需要用”\”转义<br>
:%s/  */ /g 将多个空格换成一个空格<br>y&nbsp;复制&nbsp;<br>
d&nbsp;删除&nbsp;<br>
x&nbsp;剪切&nbsp;<br>
p&nbsp;粘贴&nbsp;<br>:n&nbsp;或&nbsp;:prev&nbsp;来跳转到前一个或者后一个文件&nbsp;<br>
还可以通过&nbsp;<br>
:first&nbsp;或&nbsp;:last&nbsp;来跳转到第一个和最后一个文件&nbsp;<br>
如果你只打开一个文件，如&nbsp;vim file1&nbsp;<br>
然后在使用过程中，通过&nbsp;<br>
:e file2&nbsp;编辑了第二个文件，这时&nbsp;, :prev&nbsp;是不起作用的&nbsp;<br>
可以用&nbsp;<br>
:e#&nbsp;返回上一个编辑的文件&nbsp;<br>
无论哪两种方式都可以用&nbsp;<br>
:bN&nbsp;跳转到打开的第&nbsp;N&nbsp;个文件&nbsp;<br>
如&nbsp;:b1&nbsp;跳转到第一个打开的文件<br>
:r 加载文件<br>
<br>移动到要添加注释的第 1 行代码，按&nbsp;^&nbsp;来到行首
<br>按&nbsp;CTRL + v&nbsp;进入可视块模式
<br>使用&nbsp;j&nbsp;向下连续选中要添加的代码行
<br>输入&nbsp;I&nbsp;进入编辑模式，并在行首插入，注意：一定要使用&nbsp;I
<br>输入&nbsp;#&nbsp;也就是注释符号
<br>按下&nbsp;ESC&nbsp;返回到命令模式，返回之后&nbsp;vi&nbsp;会在之前选中的每一行代码前插入&nbsp;#
]]></description><link>https://wxkj.asia/mynote/常用命令/vim.html</link><guid isPermaLink="false">常用命令/vim.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 15 Mar 2024 08:49:46 GMT</pubDate></item><item><title><![CDATA[nginx]]></title><description><![CDATA[ 
 <br>nginx 代理端口<br>
location / {<br>
proxy_pass    http://localhost:8080;<br>
}]]></description><link>https://wxkj.asia/mynote/常用命令/nginx.html</link><guid isPermaLink="false">常用命令/nginx.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 20:04:09 GMT</pubDate></item><item><title><![CDATA[laravel]]></title><description><![CDATA[ 
 <br>服务器上清理：php artisan optimize    php artisan cache:clear<br>\DB::listen(function($query) {
    $bindings = $query-&gt;bindings;
    $sql = $query-&gt;sql;
    foreach ($bindings as $replace){
        $value = is_numeric($ replace) ? $replace : "'".$ replace."'";
        $sql = preg_replace('/\?/', $value, $sql, 1);
    }
    dump($sql);
});
复制<br><br>基本队列 artisan 命令<br>queue:队列 &nbsp;&nbsp;php artisan help queue &nbsp;帮助 &nbsp;help<br>php artisan make:job &nbsp;namexxx &nbsp;创建队列会在 app/jobs 下生成队列文件<br>php artisan queue:table &nbsp;&nbsp;生成队列成功 job 数据库迁移<br>php artisan queue:failed-table &nbsp;生成队列失败 fail-job 数据库迁移<br>php artisan queue:failed &nbsp;查看失败队列列表<br>php artisan queue:listen &nbsp;监听队列<br>php artisan queue:work &nbsp;执行队列<br>php artisan queue:flush &nbsp;删除所有队列<br>php artisan queue:forget -参数删除某个<br>php artisan queue:retry -参数 id &nbsp;重新执行某个队列<br>php artisan queue:restart 重启所有队列]]></description><link>https://wxkj.asia/mynote/常用命令/laravel.html</link><guid isPermaLink="false">常用命令/laravel.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:22:36 GMT</pubDate></item><item><title><![CDATA[grep]]></title><description><![CDATA[ 
 <br>简介<br>
在grep中，我们有相当于OR和NOT运算符的选项，但没有AND运算符。但是，我们可以使用模式来模拟AND。在本文的例子将有助于理解如何使用grep命令的OR, AND和NOT运算进行文本的搜索。<br>
本文将使用下面的employee.txt文件作为例子讲解：<br>
<br>
<br>$ cat employee.txt<br>
<br>
<br>100  Thomas  Manager    Sales       $5,000<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>
<br>
<br>300  Raj     Sysadmin   Technology  $7,000<br>
<br>
<br>400  Nisha   Manager    Marketing   $9,500<br>
<br>
<br>500  Randy   Manager    Sales       $6,000<br>Grep OR操作符<br>
可以使用下面提供的4种方法来实现grep OR功能。<br>
<br>使用“|”<br>
如果使用不带任何选项的grep命令，则需要使用"|"来分隔条件OR的多个模式。<br>
grep 'pattern1|pattern2' filename例如，grep来自employee.txt文件的Tech或Sales。如果分隔符|前没有反斜杠，则以下操作无效。
<br>
<br>[jinguang1@localhost ~]$ grep "Tech|Sales" employee.txt<br>
<br>
<br>[jinguang1@localhost ~]$ grep "Tech|Sales" employee.txt<br>
<br>
<br>100  Thomas  Manager    Sales       $5,000<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>
<br>
<br>300  Raj     Sysadmin   Technology  $7,000<br>
<br>
<br>500  Randy   Manager    Sales       $6,000<br>
<br>使用-E选项<br>
grep -E选项用于扩展正则表达式。如果使用带-E选项的grep命令，则只需使用|为条件OR来分隔多个模式。<br>
grep -E 'pattern1|pattern2' filename例如，grep来自employee.txt文件的Tech或Sales。仅使用“|”来作为多个模式。
<br>
<br>[jinguang1@localhost ~]$ grep -E "Tech|Sales" employee.txt<br>
<br>
<br>100  Thomas  Manager    Sales       $5,000<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>
<br>
<br>300  Raj     Sysadmin   Technology  $7,000<br>
<br>
<br>500  Randy   Manager    Sales       $6,000<br>
<br>使用egrep<br>
egrep和grep -E功能完全相同。<br>
egrep 'pattern1|pattern2' filename<br>
例如，grep来自employee.txt文件的Tech或Sales。仅使用“|”来作为多个模式。
<br>
<br>[jinguang1@localhost ~]$ egrep  "Tech|Sales" employee.txt<br>
<br>
<br>100  Thomas  Manager    Sales       $5,000<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>
<br>
<br>300  Raj     Sysadmin   Technology  $7,000<br>
<br>
<br>500  Randy   Manager    Sales       $6,000<br>
<br>使用grep -e<br>
使用grep -e选项，你仅能使用一个参数。如果要使用多个模式，则需要在命令中提供多个-e选项。<br>
grep -e pattern1 -e pattern2 filename<br>
例如，grep来自employee.txt文件的Tech或Sales。使用多个-e选项来支持多个OR模式。
<br>
<br>[jinguang1@localhost ~]$ grep -e Tech -e Sales employee.txt<br>
<br>
<br>100  Thomas  Manager    Sales       $5,000<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>
<br>
<br>300  Raj     Sysadmin   Technology  $7,000<br>
<br>
<br>500  Randy   Manager    Sales       $6,000<br>Grep AND<br>
<br>使用-E "pattern1.*pattern2"<br>
grep中并没有AND操作符，但你可以使用-E选项来模拟。
<br>
<br>grep -E 'pattern1.*pattern2' filename<br>
<br>
<br>grep -E 'pattern1.pattern2|pattern2.pattern1' filename<br>下面的例子将grep所有同时包含“Dev”和"Tech"的行，并且保持包含字符串的相应顺序。<br>
<br>
<br>[jinguang1@localhost ~]$ grep -E "Dev.*Tech" employee.txt<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>下面的例子将grep所有包含“Manager"和"Sales"的行，且这个字符串可以以任意顺序出现。<br>
<br>
<br>[jinguang1@localhost ~]$ grep -E "Manager.Sales|Sales.Manager" employee.txt<br>
<br>
<br>100  Thomas  Manager    Sales       $5,000<br>
<br>
<br>500  Randy   Manager    Sales       $6,000<br>
<br>使用多个grep命令<br>
可以使用管道来连接多个grep命令来模拟AND操作符。<br>
grep -E 'pattern1' filename | grep -E 'pattern2'<br>
下面的例子将grep所有包含“Manager"和"Sales"的行，且这个字符串可以以任意顺序出现。
<br>
<br>[jinguang1@localhost ~]$ grep Manager employee.txt | grep Sales<br>
<br>
<br>100  Thomas  Manager    Sales       $5,000<br>
<br>
<br>500  Randy   Manager    Sales       $6,000<br>Grep NOT<br>
使用grep -v选项可以模拟NOT操作符。-v选项为相反匹配设计，它可以match所有不包含指定模式的行。<br>
grep -v 'pattern1' filename<br>
下面的例子中将显示所有不包含“Sales”关键字的行。<br>
<br>
<br>[jinguang1@localhost ~]$ grep -v Sales employee.txt<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>
<br>
<br>300  Raj     Sysadmin   Technology  $7,000<br>
<br>
<br>400  Nisha   Manager    Marketing   $9,500<br>下面的例子中将显示所有的Manager和Developer，但忽略Sales。<br>
<br>
<br>[jinguang1@localhost ~]$ grep -E "Manager|Developer" employee.txt | grep -v Sales<br>
<br>
<br>200  Jason   Developer  Technology  $5,500<br>
<br>
<br>400  Nisha   Manager    Marketing   $9,500]]></description><link>https://wxkj.asia/mynote/常用命令/grep.html</link><guid isPermaLink="false">常用命令/grep.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 20:03:43 GMT</pubDate></item><item><title><![CDATA[cmd-bat]]></title><description><![CDATA[ 
 <br>mklink /j yun D:\phpts\data\wwwroot\yun Windows 创建软连]]></description><link>https://wxkj.asia/mynote/常用命令/cmd-bat.html</link><guid isPermaLink="false">常用命令/cmd-bat.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 20:03:03 GMT</pubDate></item><item><title><![CDATA[visual studio]]></title><description><![CDATA[ 
 <br>将当前行上移或下移一行 Alt+上箭头 Alt+下箭头（&nbsp;Alt+↑ and Alt+↓&nbsp;）<br>ctrl+c 整行复制<br>
ctrl+x 整行剪切<br>
ctrl+L 整行删除<br>^+K,C 注释<br>
^+k,U 取消注释<br>f2 进入定义<br>
ctrl+- 返回<br>ctrl+z 撤销<br>
ctrl+y 恢复<br>多行编辑<br>
选中一个变量，按 f2，弹出一个小窗口，在里面输入内容后按回车，所有该变量都会被重命名。<br>
<a rel="noopener" class="external-link" href="https://jingyan.baidu.com/article/3052f5a1066eb597f31f86db.html" target="_blank">https://jingyan.baidu.com/article/3052f5a1066eb597f31f86db.html</a><br>ctrl+k,d：格式化代码<br>
Ctrl+E,F：格式化选中的代码<br>复制当前行到下一行 直接在当前行 ctrl+c 然后 ctrl+v]]></description><link>https://wxkj.asia/mynote/常用命令/visual-studio.html</link><guid isPermaLink="false">常用命令/visual studio.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:56:58 GMT</pubDate></item><item><title><![CDATA[rabbitmq]]></title><description><![CDATA[ 
 <br>rabbitmqctl eval 'rabbit_exchange:declare({resource, &lt;&lt;"/"&gt;&gt;, exchange, &lt;&lt;"test-topic"&gt;&gt;}, topic, true, false, false, []).'<br>
rabbitmqctl eval 'rabbit_amqqueue:declare({resource, &lt;&lt;"/"&gt;&gt;, queue, &lt;&lt;"test-queue"&gt;&gt;}, true, false, [], none).'<br>
rabbitmqctl eval 'rabbit_binding:add({binding, {resource, &lt;&lt;"/"&gt;&gt;, exchange, &lt;&lt;"test-topic"&gt;&gt;}, &lt;&lt;"*.com.cn"&gt;&gt;, {resource, &lt;&lt;"/"&gt;&gt;, queue, &lt;&lt;"test-queue"&gt;&gt;}, []}).']]></description><link>https://wxkj.asia/mynote/常用命令/rabbitmq.html</link><guid isPermaLink="false">常用命令/rabbitmq.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:56:18 GMT</pubDate></item><item><title><![CDATA[lnmp]]></title><description><![CDATA[ 
 <br>linux 平滑重启 php-fpm<br>
修改了 php 配置需要平滑启动 php-fpm<br>
ps -aux | grep php-fpm&nbsp;<br>
找到 phpfpm 的 master process 的进程 id<br>
kill -SIGUSR2 process_id 实现平滑重启 php-fpm]]></description><link>https://wxkj.asia/mynote/常用命令/lnmp.html</link><guid isPermaLink="false">常用命令/lnmp.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:55:50 GMT</pubDate></item><item><title><![CDATA[fiddler]]></title><description><![CDATA[ 
 <br>1、 从随意渠道下载 fiddler 安装包，正常安装；<br>
2、 安装好后打开 fiddler，进入 tools-&gt;fiddler option-&gt;https，全部都勾选上，如果提示下载证书，就下载一下；<br>3、 进入 tools-&gt;fiddler option-&gt;connections，按下面的勾选；<br>4、 在手机上设置代理，服务器填写自己电脑的 ip 地址，端口号填写 8888，即是第三步中配置的端口号；<br>
5、 试一下可不可以抓到手机上的请求，如果不可以，重启下 fiddler 应该就好了；<br>
6、 这个时候只能抓到 http 的请求，如果想抓到 https 的请求，需要在手机的浏览器中输入“电脑 ip:8888”，最下面一行“you can download the fiddlerRoot certificate”，点击“fiddlerRoot certificate”链接，安装证书，安装完成后即可抓到 https 的请求。]]></description><link>https://wxkj.asia/mynote/常用命令/fiddler.html</link><guid isPermaLink="false">常用命令/fiddler.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:54:27 GMT</pubDate></item><item><title><![CDATA[ubuntu]]></title><description><![CDATA[ 
 <br><img src="https://wxkj.asia/mynote/lib/media/ubuntu-20240517035113129.webp"><br>gksu 以管理员身份打开图形化界面]]></description><link>https://wxkj.asia/mynote/常用命令/ubuntu.html</link><guid isPermaLink="false">常用命令/ubuntu.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 19:51:15 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/ubuntu-20240517035113129.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/ubuntu-20240517035113129.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[Linux]]></title><description><![CDATA[ 
 <br><br>网络带宽命令：<br>nethogs eth0<br>
交互命令：<br>
以下是 NetHogs 的一些交互命令(键盘快捷键)<br>
m : 修改单位<br>
r : 按流量排序<br>
s : 按发送流量排序<br>
q : 退出命令提示符<br>iftop -i eth0<br>vnstat -l -i eth0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;查看实时流量<br>
vnstat -tr -i eth0&nbsp;&nbsp;&nbsp;查看最近五秒的平均流量<br>
Rx&nbsp;&nbsp;接收的数据量<br>
Tx&nbsp;&nbsp;发送的数据量<br>netstat -ant|grep ':80 '|awk '{print $5}'|grep ':80' &gt; ~/netstat.log<br><br>Cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l<br><br>Cat /proc/cpuinfo| grep "cpu cores"| uniq<br><br>
Cat /proc/cpuinfo| grep "processor"| wc -l
Find -name "*. Html"
Find . -name '*. Html'
Find . --regex ".*. Html"
Find /dat 1/*/laravel --name "*. Html"
Grep "test" ./*.* 该目录文件
Grep -rin 'bll_hfb_sourcelog' .
Grep [-rinv] '搜寻字符串' filename
Grep [rinv] '
-r : 递归循环
-i ：忽略大小写的不同，所以大小写视为相同
-n ：顺便输出行号
-v ：反向选择，亦即显示出没有 '搜寻字符串' 内容的那一行！
-A 向后显示 n 行
-B 向前显示 n 行
-C 前后显示 n 行

复制<br>Du -sh vendor 查看文件夹总大小<br>统计某日的接口访问量<br>
grep "25/May/2021" | grep "playerConfig/5"  /opt/lampp/logs/www.lvgu443.com-access_log|wc -l<br>查看端口和进程<br>
Netstat -ntlp<br>
/usr/sbin/php /mydata/www/html/green_valley_uat/host/VideoTalk.php --env=uat<br>
nohup /usr/sbin/php /mydata/www/html/green_valley_uat/host/websocket/live/index.php --env=uat  &gt; /var/log/live_uat. Log 2&gt;&amp;1 &amp;<br><br>Git 全局设置<br>
Git config --global user. Name "王威士"<br>
git config --global user. Email " <a data-tooltip-position="top" aria-label="mailto:wangweishi@greenvalleypharm.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:wangweishi@greenvalleypharm.com" target="_blank">wangweishi@greenvalleypharm.com</a> "<br>创建一个新仓库<br>
git clone <a rel="noopener" class="external-link" href="http://192.168.0.97:8099/wangweishi/qikang_shop.git" target="_blank">http://192.168.0.97:8099/wangweishi/qikang_shop.git</a><br>
Cd qikang_shop<br>
Touch README. Md<br>
Git add README. Md<br>
Git commit -m "add README"<br>
Git push -u origin master<br>推送现有文件夹<br>
Cd existing_folder<br>
Git init<br>
git remote add origin <a rel="noopener" class="external-link" href="http://192.168.0.97:8099/wangweishi/qikang_shop.git" target="_blank">http://192.168.0.97:8099/wangweishi/qikang_shop.git</a><br>
Git add .<br>
Git commit -m "Initial commit"<br>
Git push -u origin master<br>推送现有的 Git 仓库<br>
Cd existing_repo<br>
Git remote rename origin old-origin<br>
git remote add origin <a rel="noopener" class="external-link" href="http://192.168.0.97:8099/wangweishi/qikang_shop.git" target="_blank">http://192.168.0.97:8099/wangweishi/qikang_shop.git</a><br>
Git push -u origin --all<br>
Git push -u origin --tags<br>修改远程地址<br>
git remote set-url origin <a data-tooltip-position="top" aria-label="mailto:git@gitee.com" rel="noopener" class="external-link" href="https://wxkj.asia/mynote/mailto:git@gitee.com" target="_blank">git@gitee.com</a> : xigexige/ztjs. Git<br><br>返回上一级<br>
Cmd+⬆ <br>剪切<br>
Cmd + opt + v<br>复制文件路径<br>
Cmd + opt + c<br>查看隐藏文件<br>
Cmd + shift + . <br><br><br>查看调用处 ctrl+q<br>
查看代码注释<br>
Alt+down<br>
查看下一个方法<br>
Alt+up<br>
查看上一个方法<br>
Alt+shift+down line 向下移动<br>
Alt+shift+up line 向上移动<br>
Ctrl+d<br>
复制当前行<br>
Ctrl+y<br>
删除当前行<br>
Ctrl+x<br>
剪切行<br>
Ctrl+shift+u 字母大小写转换<br>
Ctrl+f<br>
查找<br>
Ctrl+r<br>
替换<br>
Ctrl+shift+I 查看变量或方法定义源<br>
Ctrl+alt+F 12 跳转至当前文件在磁盘上的位置<br>
Ctrl+/<br>
行注释<br>
Ctrl+shift+/ 块注释<br>
Ctrl + Shift + Z：redo<br>
Ctrl + Shift + F：区域查找<br>
Ctrl+b<br>
跳到变量申明处<br>
Alt+left/right 标签切换<br>
Ctrl+alt+l 格式化代码<br>Ctrl+w/ctrl+shift+w 块选择<br>
Ctrl+alt+f 12 跳转到磁盘所在文件<br>
Ctrl+f 12 类中查找<br>
Ctrl+n 类名查找<br>
Ctrl+shift+n 文件名查找<br>
Ctrl+shift+alt+n 函数名查找<br>
Alt+→ /← 切换标签<br>
Ctrl + Delete 删除一个单词至结尾<br>
Ctrl + Backspace 删除一个单词至词头<br>
Shift + Enter 开启新行<br>
Ctrl+c 复制整行<br>
Alt+f 1 定位文件在 project 中的位置<br>
Alt+home 定位文件路径<br>
Alt+单击多行编辑<br>
Alt+j 对选中单词执行多行编辑<br>
Alt+shift+j alt+j 相反<br>
Shift+alt+ctrl+j 选中关键词多行编辑<br>
F 3 shift+F 3 查找搜索关键词<br>
CTRL+ALT+T 把选中的代码放在 TRY{} IF{} ELSE{} 里<br>
Alt+insert<br>
插入代码<br>
Ctrl+o<br>
魔术方法<br>
F 4<br>
查看源码<br>
Ctrl+alt+F 12 跳转至当前文件在磁盘上的位置<br>
Ctrl+shift+down statement 向下移动<br>
Ctrl+shift+up statement 向上移动<br>
Alt+shift+down line 向下移动<br>
Alt+shift+up line 向上移动<br>
CTRL+ALT+B 找所有的子类和实现接口的子类<br>
Ctrl+方向键移动文档但光标不变<br>
Ctrl+alt+b 或 ctrl+alt+单击查看实现的方法<br>
Ctrl+u 查看父类<br>
ALT+SHIFT+C 查找修改的文件，最近变更历史<br>
F 3/shift+f 3 查找上一个下一个关键词<br>
F 2（Shift+F 2） 高亮错误或警告快速定位<br>
SHIFT+F 2 高亮错误或警告快速定位<br>Ctrl+F 7 文件中查询选中字符<br>
F 4 查找变量来源<br>
Ctrl+f 3 向下定位光标所在变量<br>
Shift+f 3 向上定位光标所在变量<br>
CTRL+ [] 光标移动到{}[]开头或结尾位置<br>
CTRL+ALT+T 把选中的代码放在 TRY{} IF{} ELSE{} 里<br>
<a rel="noopener" class="external-link" href="https://www.cnblogs.com/xp796/p/5718321.html" target="_blank">https://www.cnblogs.com/xp796/p/5718321.html</a><br><br><a data-href="markdown示例教程" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown示例教程.html" class="internal-link" target="_self" rel="noopener">markdown示例教程</a>]]></description><link>https://wxkj.asia/mynote/常用命令/常用命令.html</link><guid isPermaLink="false">常用命令/常用命令.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 19 Apr 2024 09:32:06 GMT</pubDate></item><item><title><![CDATA[obsidian]]></title><description><![CDATA[ 
 <br>全屏快捷<br>ctrl+shift+f11 或 fn+F<br>快速切换<br>ctrl + o <br>文档查找<br>ctrl+F<br>文档替换<br>ctrl+alt+f<br>全局查找<br>ctrl+shift+F<br>全局替换<br>Global Search And Replace 插件或使用其他软件，比如 vscode 等<br>新建<br>ctrl + o<br> Shift + Backspace 可强制删除<br>很多编辑器都有英文标点自动补全功能，自动生成一对，光标落在中间只想删除前面 1 个，却会把一整对都删掉，这时可用强制删除<br>Excalidraw 加载更多图标<br>点右侧的按钮， <img alt="obsidian-20240315173715688.webp" src="https://wxkj.asia/mynote/lib/media/obsidian-20240315173715688.webp" style="width: 55px; max-width: 100%;"> 然后点 Browser，然后下载，然后点 Browser 右侧的 <img alt="obsidian-20240315174024844.webp" src="https://wxkj.asia/mynote/lib/media/obsidian-20240315174024844.webp" style="width: 25px; max-width: 100%;"> 打开导入即可。（视频演示：<a data-tooltip-position="top" aria-label="https://www.bilibili.com/video/BV12W4y1i7sS?spm_id_from=333.880.my_history.page.click" rel="noopener" class="external-link" href="https://www.bilibili.com/video/BV12W4y1i7sS?spm_id_from=333.880.my_history.page.click" target="_blank">obsidian插件excalidraw——强大的自由绘图，以及library_哔哩哔哩_bilibili</a>）<br>Excalidraw 画柱状图，折线图<br>直接复制 Excel 数据，粘贴到 Excalidraw 任意位置，弹窗画图对话框，设置即可。（视频演示：<a data-tooltip-position="top" aria-label="https://www.bilibili.com/video/BV19R4y1d7Nk?spm_id_from=333.880.my_history.page.click" rel="noopener" class="external-link" href="https://www.bilibili.com/video/BV19R4y1d7Nk?spm_id_from=333.880.my_history.page.click" target="_blank">Excalidraw一键画折线图，柱状图——obsidian插件Excalidraw_哔哩哔哩_bilibili</a>）]]></description><link>https://wxkj.asia/mynote/常用命令/obsidian.html</link><guid isPermaLink="false">常用命令/obsidian.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 16 Mar 2024 06:18:17 GMT</pubDate><enclosure url="https://wxkj.asia/mynote/lib/media/obsidian-20240315173715688.webp" length="0" type="image/webp"/><content:encoded>&lt;figure&gt;&lt;img src="https://wxkj.asia/mynote/lib/media/obsidian-20240315173715688.webp"&gt;&lt;/figure&gt;</content:encoded></item><item><title><![CDATA[figma-pixso-mastergo]]></title><description><![CDATA[ 
 <br>全屏快捷键<br>ctrl+\<br>抠图方法<br>
<br>用钢笔勾勒选区，然后用任意颜色填充
<br>把 1 的选区放到图片下面
<br>把选区创建为模板
]]></description><link>https://wxkj.asia/mynote/常用命令/figma-pixso-mastergo.html</link><guid isPermaLink="false">常用命令/figma-pixso-mastergo.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 15 Mar 2024 08:51:10 GMT</pubDate></item><item><title><![CDATA[工具]]></title><description><![CDATA[ 
 <br>utools<br><a rel="noopener" class="external-link" href="http://tools.jb51.net/static/api/games/fishercat/index.html" target="_blank">http://tools.jb51.net/static/api/games/fishercat/index.html</a><br>
<a rel="noopener" class="external-link" href="http://tools.jb51.net/static/api/games/cupxiaoxiaole/index.html" target="_blank">http://tools.jb51.net/static/api/games/cupxiaoxiaole/index.html</a><br><a rel="noopener" class="external-link" href="http://tools.jb51.net/static/api/chess/index.html" target="_blank">http://tools.jb51.net/static/api/chess/index.html</a> 象棋<br>
<a rel="noopener" class="external-link" href="http://tools.jb51.net/static/api/wuziqi/index.html" target="_blank">http://tools.jb51.net/static/api/wuziqi/index.html</a> 五子棋<br><a data-tooltip-position="top" aria-label="https://www.bmcx.com/apiiframe/?api_from=bmcx&amp;api_url=https://zishu.bmcx.com/&amp;api_width=100%25&amp;api_backgroundcolor=FFFFFF&amp;api_navigation=no" rel="noopener" class="external-link" href="https://www.bmcx.com/apiiframe/?api_from=bmcx&amp;api_url=https://zishu.bmcx.com/&amp;api_width=100%25&amp;api_backgroundcolor=FFFFFF&amp;api_navigation=no" target="_blank">https://www.bmcx.com/apiiframe/?api_from=bmcx&amp;api_url=https://zishu.bmcx.com/&amp;api_width=100%&amp;api_backgroundcolor=FFFFFF&amp;api_navigation=no</a> 字数统计<br>
<a data-tooltip-position="top" aria-label="https://www.bmcx.com/apiiframe/?api_from=bmcx&amp;api_url=https://quchong.bmcx.com/&amp;api_width=100%25&amp;api_backgroundcolor=FFFFFF&amp;api_navigation=no" rel="noopener" class="external-link" href="https://www.bmcx.com/apiiframe/?api_from=bmcx&amp;api_url=https://quchong.bmcx.com/&amp;api_width=100%25&amp;api_backgroundcolor=FFFFFF&amp;api_navigation=no" target="_blank">https://www.bmcx.com/apiiframe/?api_from=bmcx&amp;api_url=https://quchong.bmcx.com/&amp;api_width=100%&amp;api_backgroundcolor=FFFFFF&amp;api_navigation=no</a> 文本去重<br><a data-tooltip-position="top" aria-label="https://kodsky.com/index.php?plugin/photopea#%7B%22files%22:%5B%5D,%22resources%22:%5B%5D,%22environment%22:%7B%22theme%22:1,%22vmode%22:0,%22lang%22:%22zh-CN%22,%22topt%22:%7B%22t0%22:%5B1,0,0%5D%7D,%22phrases%22:%5B%5B0,0%5D,%22%E6%96%87%E4%BB%B6%22%5D%7D%7D" rel="noopener" class="external-link" href="https://kodsky.com/index.php?plugin/photopea#%7B%22files%22:%5B%5D,%22resources%22:%5B%5D,%22environment%22:%7B%22theme%22:1,%22vmode%22:0,%22lang%22:%22zh-CN%22,%22topt%22:%7B%22t0%22:%5B1,0,0%5D%7D,%22phrases%22:%5B%5B0,0%5D,%22%E6%96%87%E4%BB%B6%22%5D%7D%7D" target="_blank">https://kodsky.com/index.php?plugin/photopea#{%22files%22:[],%22resources%22:[],%22environment%22:{%22theme%22:1,%22vmode%22:0,%22lang%22:%22zh-CN%22,%22topt%22:{%22t0%22:[1,0,0]},%22phrases%22:[[0,0],%22%E6%96%87%E4%BB%B6%22]}}</a><br><a data-tooltip-position="top" aria-label="https://kodsky.com/index.php?plugin/photopea#%7B%22environment%22:%7B%22theme%22:1,%22lang%22:%22zh-CN%22%7D%7D" rel="noopener" class="external-link" href="https://kodsky.com/index.php?plugin/photopea#%7B%22environment%22:%7B%22theme%22:1,%22lang%22:%22zh-CN%22%7D%7D" target="_blank">https://kodsky.com/index.php?plugin/photopea#{%22environment%22:{%22theme%22:1,%22lang%22:%22zh-CN%22}}</a><br><a rel="noopener" class="external-link" href="http://demo.kodcloud.com/index.php?plugin/polarr" target="_blank">http://demo.kodcloud.com/index.php?plugin/polarr</a> 泼辣修图<br><a rel="noopener" class="external-link" href="https://codingcorp.cloudstudio.net/" target="_blank">https://codingcorp.cloudstudio.net/</a> cloud studio]]></description><link>https://wxkj.asia/mynote/常用命令/工具.html</link><guid isPermaLink="false">常用命令/工具.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Thu, 16 May 2024 20:10:15 GMT</pubDate></item><item><title><![CDATA[首页]]></title><description><![CDATA[ 
 <br><br>笔记是人类的第二大脑，也是作者灵感的迸发和思想的总结，更是与他人交流的平台。

浩渺宇宙，茫茫人海，你我相遇不是巧合是机缘，那么朋友，认识我就从笔记开始吧~！
复制<br><br>记录工作、生活、想法和学习心得的个人笔记，愿与你一起学习和探讨~~
复制<br><br><br><a data-tooltip-position="top" aria-label="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" data-href="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" href="https://wxkj.asia/mynote/开发笔记/前端/mac调试ios的safari浏览器打开的页面.html" class="internal-link" target="_self" rel="noopener">Mac调试ios的safari浏览器打开的页面</a><br><a data-tooltip-position="top" aria-label="开发笔记/php/JWT用户登录方案-前后端交互说明.md" data-href="开发笔记/php/JWT用户登录方案-前后端交互说明.md" href="https://wxkj.asia/mynote/开发笔记/php/jwt用户登录方案-前后端交互说明.html" class="internal-link" target="_self" rel="noopener">JWT用户登录方案-前后端交互说明</a><br><a data-tooltip-position="top" aria-label="开发笔记/php/IP Lookup in PHP.md" data-href="开发笔记/php/IP Lookup in PHP.md" href="https://wxkj.asia/mynote/开发笔记/php/ip-lookup-in-php.html" class="internal-link" target="_self" rel="noopener">IP Lookup in PHP</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux find 模拟 tree 命令.md" data-href="开发笔记/linux/Linux find 模拟 tree 命令.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux-find-模拟-tree-命令.html" class="internal-link" target="_self" rel="noopener">Linux find 模拟 tree 命令</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/table表格设置border-radius不生效.md" data-href="开发笔记/前端/table表格设置border-radius不生效.md" href="https://wxkj.asia/mynote/开发笔记/前端/table表格设置border-radius不生效.html" class="internal-link" target="_self" rel="noopener">table表格设置border-radius不生效</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" data-href="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" href="https://wxkj.asia/mynote/开发笔记/前端/chrome-devtools-远程调试安卓网页的原理.html" class="internal-link" target="_self" rel="noopener">Chrome DevTools 远程调试安卓网页的原理</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/css屏幕尺寸与设备.md" data-href="开发笔记/前端/css屏幕尺寸与设备.md" href="https://wxkj.asia/mynote/开发笔记/前端/css屏幕尺寸与设备.html" class="internal-link" target="_self" rel="noopener">css屏幕尺寸与设备</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/git 导出变动文件，包括目录结构.md" data-href="开发笔记/git/git 导出变动文件，包括目录结构.md" href="https://wxkj.asia/mynote/开发笔记/git/git-导出变动文件，包括目录结构.html" class="internal-link" target="_self" rel="noopener">git 导出变动文件，包括目录结构</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" data-href="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" href="https://wxkj.asia/mynote/开发笔记/git/git-创建一个裸仓库，作为简易的-git-服务器.html" class="internal-link" target="_self" rel="noopener">Git 创建一个裸仓库，作为简易的 Git 服务器</a><br><a data-tooltip-position="top" aria-label="开发笔记/脚本插件/bat避免重复运行.md" data-href="开发笔记/脚本插件/bat避免重复运行.md" href="https://wxkj.asia/mynote/开发笔记/脚本插件/bat避免重复运行.html" class="internal-link" target="_self" rel="noopener">bat避免重复运行</a><br><br><br><a data-tooltip-position="top" aria-label="开发笔记/前端/scrollIntoView 等待滚动结束执行.md" data-href="开发笔记/前端/scrollIntoView 等待滚动结束执行.md" href="https://wxkj.asia/mynote/开发笔记/前端/scrollintoview-等待滚动结束执行.html" class="internal-link" target="_self" rel="noopener">scrollIntoView 等待滚动结束执行</a><br><a data-tooltip-position="top" aria-label="学习笔记/1万访问需要多少宽带.md" data-href="学习笔记/1万访问需要多少宽带.md" href="https://wxkj.asia/mynote/学习笔记/1万访问需要多少宽带.html" class="internal-link" target="_self" rel="noopener">1万访问需要多少宽带</a><br><a data-tooltip-position="top" aria-label="常用命令/工具.md" data-href="常用命令/工具.md" href="https://wxkj.asia/mynote/常用命令/工具.html" class="internal-link" target="_self" rel="noopener">工具</a><br><a data-tooltip-position="top" aria-label="常用命令/秘钥破解.md" data-href="常用命令/秘钥破解.md" href="https://wxkj.asia/mynote/常用命令/秘钥破解.html" class="internal-link" target="_self" rel="noopener">秘钥破解</a><br><a data-tooltip-position="top" aria-label="常用命令/nginx.md" data-href="常用命令/nginx.md" href="https://wxkj.asia/mynote/常用命令/nginx.html" class="internal-link" target="_self" rel="noopener">nginx</a><br><a data-tooltip-position="top" aria-label="常用命令/grep.md" data-href="常用命令/grep.md" href="https://wxkj.asia/mynote/常用命令/grep.html" class="internal-link" target="_self" rel="noopener">grep</a><br><a data-tooltip-position="top" aria-label="常用命令/cmd-bat.md" data-href="常用命令/cmd-bat.md" href="https://wxkj.asia/mynote/常用命令/cmd-bat.html" class="internal-link" target="_self" rel="noopener">cmd-bat</a><br><a data-tooltip-position="top" aria-label="常用命令/压力测试ab.md" data-href="常用命令/压力测试ab.md" href="https://wxkj.asia/mynote/常用命令/压力测试ab.html" class="internal-link" target="_self" rel="noopener">压力测试ab</a><br><a data-tooltip-position="top" aria-label="常用命令/科学上网-vpn-翻墙.md" data-href="常用命令/科学上网-vpn-翻墙.md" href="https://wxkj.asia/mynote/常用命令/科学上网-vpn-翻墙.html" class="internal-link" target="_self" rel="noopener">科学上网-vpn-翻墙</a><br><a data-tooltip-position="top" aria-label="常用命令/visual studio.md" data-href="常用命令/visual studio.md" href="https://wxkj.asia/mynote/常用命令/visual-studio.html" class="internal-link" target="_self" rel="noopener">visual studio</a><br><a data-tooltip-position="top" aria-label="常用命令/rabbitmq.md" data-href="常用命令/rabbitmq.md" href="https://wxkj.asia/mynote/常用命令/rabbitmq.html" class="internal-link" target="_self" rel="noopener">rabbitmq</a><br><a data-tooltip-position="top" aria-label="常用命令/lnmp.md" data-href="常用命令/lnmp.md" href="https://wxkj.asia/mynote/常用命令/lnmp.html" class="internal-link" target="_self" rel="noopener">lnmp</a><br><a data-tooltip-position="top" aria-label="常用命令/fiddler.md" data-href="常用命令/fiddler.md" href="https://wxkj.asia/mynote/常用命令/fiddler.html" class="internal-link" target="_self" rel="noopener">fiddler</a><br><a data-tooltip-position="top" aria-label="读书笔记/推荐书籍.md" data-href="读书笔记/推荐书籍.md" href="https://wxkj.asia/mynote/读书笔记/推荐书籍.html" class="internal-link" target="_self" rel="noopener">推荐书籍</a><br><a data-tooltip-position="top" aria-label="常用命令/ubuntu.md" data-href="常用命令/ubuntu.md" href="https://wxkj.asia/mynote/常用命令/ubuntu.html" class="internal-link" target="_self" rel="noopener">ubuntu</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js实现ctrl+鼠标左键点击示例.md" data-href="开发笔记/前端/js实现ctrl+鼠标左键点击示例.md" href="https://wxkj.asia/mynote/开发笔记/前端/js实现ctrl+鼠标左键点击示例.html" class="internal-link" target="_self" rel="noopener">js实现ctrl+鼠标左键点击示例</a><br><a data-tooltip-position="top" aria-label="工具软件/obsidian/dataview排序.md" data-href="工具软件/obsidian/dataview排序.md" href="https://wxkj.asia/mynote/工具软件/obsidian/dataview排序.html" class="internal-link" target="_self" rel="noopener">dataview排序</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js怎么先按ctime desc,再按title asc.md" data-href="开发笔记/前端/js怎么先按ctime desc,再按title asc.md" href="https://wxkj.asia/mynote/开发笔记/前端/js怎么先按ctime-desc,再按title-asc.html" class="internal-link" target="_self" rel="noopener">js怎么先按ctime desc,再按title asc</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/css选择前n个元素.md" data-href="开发笔记/前端/css选择前n个元素.md" href="https://wxkj.asia/mynote/开发笔记/前端/css选择前n个元素.html" class="internal-link" target="_self" rel="noopener">css选择前n个元素</a><br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/templater.md" data-href="工具软件/obsidian/插件/templater.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/templater.html" class="internal-link" target="_self" rel="noopener">templater</a><br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/quickadd.md" data-href="工具软件/obsidian/插件/quickadd.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/quickadd.html" class="internal-link" target="_self" rel="noopener">quickadd</a><br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/dataview.md" data-href="工具软件/obsidian/插件/dataview.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/dataview.html" class="internal-link" target="_self" rel="noopener">dataview</a><br><a data-tooltip-position="top" aria-label="开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.md" data-href="开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.md" href="https://wxkj.asia/mynote/开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.html" class="internal-link" target="_self" rel="noopener">前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密</a><br><a data-tooltip-position="top" aria-label="开发笔记/php/web开发冷知识汇总.md" data-href="开发笔记/php/web开发冷知识汇总.md" href="https://wxkj.asia/mynote/开发笔记/php/web开发冷知识汇总.html" class="internal-link" target="_self" rel="noopener">web开发冷知识汇总</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" data-href="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" href="https://wxkj.asia/mynote/开发笔记/前端/mac调试ios的safari浏览器打开的页面.html" class="internal-link" target="_self" rel="noopener">Mac调试ios的safari浏览器打开的页面</a><br><a data-tooltip-position="top" aria-label="开发笔记/php/JWT用户登录方案-前后端交互说明.md" data-href="开发笔记/php/JWT用户登录方案-前后端交互说明.md" href="https://wxkj.asia/mynote/开发笔记/php/jwt用户登录方案-前后端交互说明.html" class="internal-link" target="_self" rel="noopener">JWT用户登录方案-前后端交互说明</a><br><a data-tooltip-position="top" aria-label="开发笔记/php/IP Lookup in PHP.md" data-href="开发笔记/php/IP Lookup in PHP.md" href="https://wxkj.asia/mynote/开发笔记/php/ip-lookup-in-php.html" class="internal-link" target="_self" rel="noopener">IP Lookup in PHP</a><br><a data-tooltip-position="top" aria-label="开发笔记/mac/【mac】shell小技巧将`终.md" data-href="开发笔记/mac/【mac】shell小技巧将`终.md" href="https://wxkj.asia/mynote/开发笔记/mac/【mac】shell小技巧将`终.html" class="internal-link" target="_self" rel="noopener">【mac】shell小技巧将`终</a><br><a data-tooltip-position="top" aria-label="开发笔记/mac/Mac开机启动配置详解.md" data-href="开发笔记/mac/Mac开机启动配置详解.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac开机启动配置详解.html" class="internal-link" target="_self" rel="noopener">Mac开机启动配置详解</a><br><a data-tooltip-position="top" aria-label="开发笔记/mac/mac下shell弹出下拉选择框.md" data-href="开发笔记/mac/mac下shell弹出下拉选择框.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac下shell弹出下拉选择框.html" class="internal-link" target="_self" rel="noopener">mac下shell弹出下拉选择框</a><br><a data-tooltip-position="top" aria-label="开发笔记/mac/mac上shell扫描目录并放到弹框列表中.md" data-href="开发笔记/mac/mac上shell扫描目录并放到弹框列表中.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac上shell扫描目录并放到弹框列表中.html" class="internal-link" target="_self" rel="noopener">mac上shell扫描目录并放到弹框列表中</a><br><a data-tooltip-position="top" aria-label="开发笔记/mac/Mac 下 brew 切换为国内源.md" data-href="开发笔记/mac/Mac 下 brew 切换为国内源.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac-下-brew-切换为国内源.html" class="internal-link" target="_self" rel="noopener">Mac 下 brew 切换为国内源</a><br><a data-tooltip-position="top" aria-label="开发笔记/mac/fswatch的使用.md" data-href="开发笔记/mac/fswatch的使用.md" href="https://wxkj.asia/mynote/开发笔记/mac/fswatch的使用.html" class="internal-link" target="_self" rel="noopener">fswatch的使用</a><br><a data-tooltip-position="top" aria-label="开发笔记/mac/AppleScript 隐藏执行shell脚本文件.md" data-href="开发笔记/mac/AppleScript 隐藏执行shell脚本文件.md" href="https://wxkj.asia/mynote/开发笔记/mac/applescript-隐藏执行shell脚本文件.html" class="internal-link" target="_self" rel="noopener">AppleScript 隐藏执行shell脚本文件</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/内网穿透.md" data-href="开发笔记/linux/内网穿透.md" href="https://wxkj.asia/mynote/开发笔记/linux/内网穿透.html" class="internal-link" target="_self" rel="noopener">内网穿透</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/使用Shell脚本实现FTP自动上传和下载文件.md" data-href="开发笔记/linux/使用Shell脚本实现FTP自动上传和下载文件.md" href="https://wxkj.asia/mynote/开发笔记/linux/使用shell脚本实现ftp自动上传和下载文件.html" class="internal-link" target="_self" rel="noopener">使用Shell脚本实现FTP自动上传和下载文件</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.md" data-href="开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.html" class="internal-link" target="_self" rel="noopener">shell获取文件夹下所有目录路径，包括子目录</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md" data-href="开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md" href="https://wxkj.asia/mynote/开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.html" class="internal-link" target="_self" rel="noopener">为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/Shell之判断程序是否运行.md" data-href="开发笔记/linux/Shell之判断程序是否运行.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell之判断程序是否运行.html" class="internal-link" target="_self" rel="noopener">Shell之判断程序是否运行</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell if语句中的并列 - 诗意的栖居 - ITeye博客.md" data-href="开发笔记/linux/shell if语句中的并列 - 诗意的栖居 - ITeye博客.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell-if语句中的并列-诗意的栖居-iteye博客.html" class="internal-link" target="_self" rel="noopener">shell if语句中的并列 - 诗意的栖居 - ITeye博客</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell 下 urlencode和urldecode 编码解码的方法.md" data-href="开发笔记/linux/shell 下 urlencode和urldecode 编码解码的方法.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell-下-urlencode和urldecode-编码解码的方法.html" class="internal-link" target="_self" rel="noopener">shell 下 urlencode和urldecode 编码解码的方法</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/rsync 用法教程.md" data-href="开发笔记/linux/rsync 用法教程.md" href="https://wxkj.asia/mynote/开发笔记/linux/rsync-用法教程.html" class="internal-link" target="_self" rel="noopener">rsync 用法教程</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/rsync + inotify 实现文件实时双向自动同步.md" data-href="开发笔记/linux/rsync + inotify 实现文件实时双向自动同步.md" href="https://wxkj.asia/mynote/开发笔记/linux/rsync-+-inotify-实现文件实时双向自动同步.html" class="internal-link" target="_self" rel="noopener">rsync + inotify 实现文件实时双向自动同步</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux中如何锁定文件？flock命令一定要了解！.md" data-href="开发笔记/linux/Linux中如何锁定文件？flock命令一定要了解！.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux中如何锁定文件？flock命令一定要了解！.html" class="internal-link" target="_self" rel="noopener">Linux中如何锁定文件？flock命令一定要了解！</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux find 模拟 tree 命令.md" data-href="开发笔记/linux/Linux find 模拟 tree 命令.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux-find-模拟-tree-命令.html" class="internal-link" target="_self" rel="noopener">Linux find 模拟 tree 命令</a><br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux 文件搜索神器 find 实战详解.md" data-href="开发笔记/linux/Linux 文件搜索神器 find 实战详解.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux-文件搜索神器-find-实战详解.html" class="internal-link" target="_self" rel="noopener">Linux 文件搜索神器 find 实战详解</a><br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/搜索.md" data-href="工具软件/obsidian/markdown语法官方教程/搜索.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/搜索.html" class="internal-link" target="_self" rel="noopener">搜索</a><br><a data-tooltip-position="top" aria-label="工具软件/obsidian/DataView 入门教程.md" data-href="工具软件/obsidian/DataView 入门教程.md" href="https://wxkj.asia/mynote/工具软件/obsidian/dataview-入门教程.html" class="internal-link" target="_self" rel="noopener">DataView 入门教程</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/检测git中是否有文件发生了冲突.md" data-href="开发笔记/git/检测git中是否有文件发生了冲突.md" href="https://wxkj.asia/mynote/开发笔记/git/检测git中是否有文件发生了冲突.html" class="internal-link" target="_self" rel="noopener">检测git中是否有文件发生了冲突</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/检测git变化并提交.md" data-href="开发笔记/git/检测git变化并提交.md" href="https://wxkj.asia/mynote/开发笔记/git/检测git变化并提交.html" class="internal-link" target="_self" rel="noopener">检测git变化并提交</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/fork的项目如何更新.md" data-href="开发笔记/git/fork的项目如何更新.md" href="https://wxkj.asia/mynote/开发笔记/git/fork的项目如何更新.html" class="internal-link" target="_self" rel="noopener">fork的项目如何更新</a><br><a data-tooltip-position="top" aria-label="学习笔记/好书推荐.md" data-href="学习笔记/好书推荐.md" href="https://wxkj.asia/mynote/学习笔记/好书推荐.html" class="internal-link" target="_self" rel="noopener">好书推荐</a><br><a data-tooltip-position="top" aria-label="开发笔记/SEO优化/seo优化工具.md" data-href="开发笔记/SEO优化/seo优化工具.md" href="https://wxkj.asia/mynote/开发笔记/seo优化/seo优化工具.html" class="internal-link" target="_self" rel="noopener">seo优化工具</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/通过脚本修改input值，手动触发input事件.md" data-href="开发笔记/前端/通过脚本修改input值，手动触发input事件.md" href="https://wxkj.asia/mynote/开发笔记/前端/通过脚本修改input值，手动触发input事件.html" class="internal-link" target="_self" rel="noopener">通过脚本修改input值，手动触发input事件</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/@font-face规则和Font Loading API.md" data-href="开发笔记/前端/@font-face规则和Font Loading API.md" href="https://wxkj.asia/mynote/开发笔记/前端/@font-face规则和font-loading-api.html" class="internal-link" target="_self" rel="noopener">@font-face规则和Font Loading API</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.md" data-href="开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.md" href="https://wxkj.asia/mynote/开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.html" class="internal-link" target="_self" rel="noopener">js，css，font，png等静态资源如何当加载失败后使用备用地址</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/最全的 rgba 与 16 进制颜色空间互相转换方法.md" data-href="开发笔记/前端/最全的 rgba 与 16 进制颜色空间互相转换方法.md" href="https://wxkj.asia/mynote/开发笔记/前端/最全的-rgba-与-16-进制颜色空间互相转换方法.html" class="internal-link" target="_self" rel="noopener">最全的 rgba 与 16 进制颜色空间互相转换方法</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/防止window.onload被覆盖的技巧.md" data-href="开发笔记/前端/防止window.onload被覆盖的技巧.md" href="https://wxkj.asia/mynote/开发笔记/前端/防止window.onload被覆盖的技巧.html" class="internal-link" target="_self" rel="noopener">防止window.onload被覆盖的技巧</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.md" data-href="开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.md" href="https://wxkj.asia/mynote/开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.html" class="internal-link" target="_self" rel="noopener">js显示和隐藏动画及鼠标穿透实现</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js判断一个元素是否已监听某个事件.md" data-href="开发笔记/前端/js判断一个元素是否已监听某个事件.md" href="https://wxkj.asia/mynote/开发笔记/前端/js判断一个元素是否已监听某个事件.html" class="internal-link" target="_self" rel="noopener">js判断一个元素是否已监听某个事件</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js给元素同时赋值多个样式属性.md" data-href="开发笔记/前端/js给元素同时赋值多个样式属性.md" href="https://wxkj.asia/mynote/开发笔记/前端/js给元素同时赋值多个样式属性.html" class="internal-link" target="_self" rel="noopener">js给元素同时赋值多个样式属性</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/用setTimeout代替eval执行js字符串.md" data-href="开发笔记/前端/用setTimeout代替eval执行js字符串.md" href="https://wxkj.asia/mynote/开发笔记/前端/用settimeout代替eval执行js字符串.html" class="internal-link" target="_self" rel="noopener">用setTimeout代替eval执行js字符串</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/transitionend事件判断是opacity是1还是0.md" data-href="开发笔记/前端/transitionend事件判断是opacity是1还是0.md" href="https://wxkj.asia/mynote/开发笔记/前端/transitionend事件判断是opacity是1还是0.html" class="internal-link" target="_self" rel="noopener">transitionend事件判断是opacity是1还是0</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 怎么获取滚动条自身的宽度.md" data-href="开发笔记/前端/js 怎么获取滚动条自身的宽度.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-怎么获取滚动条自身的宽度.html" class="internal-link" target="_self" rel="noopener">js 怎么获取滚动条自身的宽度</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/JS图片另存为.md" data-href="开发笔记/前端/JS图片另存为.md" href="https://wxkj.asia/mynote/开发笔记/前端/js图片另存为.html" class="internal-link" target="_self" rel="noopener">JS图片另存为</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/table表格设置border-radius不生效.md" data-href="开发笔记/前端/table表格设置border-radius不生效.md" href="https://wxkj.asia/mynote/开发笔记/前端/table表格设置border-radius不生效.html" class="internal-link" target="_self" rel="noopener">table表格设置border-radius不生效</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/CSS 垂直居中SVG标签.md" data-href="开发笔记/前端/CSS 垂直居中SVG标签.md" href="https://wxkj.asia/mynote/开发笔记/前端/css-垂直居中svg标签.html" class="internal-link" target="_self" rel="noopener">CSS 垂直居中SVG标签</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" data-href="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" href="https://wxkj.asia/mynote/开发笔记/前端/chrome-devtools-远程调试安卓网页的原理.html" class="internal-link" target="_self" rel="noopener">Chrome DevTools 远程调试安卓网页的原理</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/css屏幕尺寸与设备.md" data-href="开发笔记/前端/css屏幕尺寸与设备.md" href="https://wxkj.asia/mynote/开发笔记/前端/css屏幕尺寸与设备.html" class="internal-link" target="_self" rel="noopener">css屏幕尺寸与设备</a><br><a data-tooltip-position="top" aria-label="工具软件/[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？.md" data-href="工具软件/[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？.md" href="https://wxkj.asia/mynote/工具软件/[经验教程]-国内如何下载更新-google-谷歌浏览器及更新谷歌-chrome-浏览器无法访问此网站怎么办？.html" class="internal-link" target="_self" rel="noopener">[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/git 导出变动文件，包括目录结构.md" data-href="开发笔记/git/git 导出变动文件，包括目录结构.md" href="https://wxkj.asia/mynote/开发笔记/git/git-导出变动文件，包括目录结构.html" class="internal-link" target="_self" rel="noopener">git 导出变动文件，包括目录结构</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" data-href="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" href="https://wxkj.asia/mynote/开发笔记/git/git-创建一个裸仓库，作为简易的-git-服务器.html" class="internal-link" target="_self" rel="noopener">Git 创建一个裸仓库，作为简易的 Git 服务器</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/Javascript拷贝到剪切板.md" data-href="开发笔记/前端/Javascript拷贝到剪切板.md" href="https://wxkj.asia/mynote/开发笔记/前端/javascript拷贝到剪切板.html" class="internal-link" target="_self" rel="noopener">Javascript拷贝到剪切板</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js判断是否是手机.md" data-href="开发笔记/前端/js判断是否是手机.md" href="https://wxkj.asia/mynote/开发笔记/前端/js判断是否是手机.html" class="internal-link" target="_self" rel="noopener">js判断是否是手机</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 时间戳转字符串.md" data-href="开发笔记/前端/js 时间戳转字符串.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-时间戳转字符串.html" class="internal-link" target="_self" rel="noopener">js 时间戳转字符串</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/defer和async的区别（面试被问到了） - 掘金.md" data-href="开发笔记/前端/defer和async的区别（面试被问到了） - 掘金.md" href="https://wxkj.asia/mynote/开发笔记/前端/defer和async的区别（面试被问到了）-掘金.html" class="internal-link" target="_self" rel="noopener">defer和async的区别（面试被问到了） - 掘金</a><br><a data-tooltip-position="top" aria-label="常用命令/常用命令.md" data-href="常用命令/常用命令.md" href="https://wxkj.asia/mynote/常用命令/常用命令.html" class="internal-link" target="_self" rel="noopener">常用命令</a><br><a data-tooltip-position="top" aria-label="常用命令/linux.md" data-href="常用命令/linux.md" href="https://wxkj.asia/mynote/常用命令/linux.html" class="internal-link" target="_self" rel="noopener">linux</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js动态执行代码片段.md" data-href="开发笔记/前端/js动态执行代码片段.md" href="https://wxkj.asia/mynote/开发笔记/前端/js动态执行代码片段.html" class="internal-link" target="_self" rel="noopener">js动态执行代码片段</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/CodeMirror api.md" data-href="开发笔记/前端/CodeMirror api.md" href="https://wxkj.asia/mynote/开发笔记/前端/codemirror-api.html" class="internal-link" target="_self" rel="noopener">CodeMirror api</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/页面之间的通信.md" data-href="开发笔记/前端/页面之间的通信.md" href="https://wxkj.asia/mynote/开发笔记/前端/页面之间的通信.html" class="internal-link" target="_self" rel="noopener">页面之间的通信</a><br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/关闭重复标签.md" data-href="工具软件/obsidian/插件/关闭重复标签.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/关闭重复标签.html" class="internal-link" target="_self" rel="noopener">关闭重复标签</a><br><a data-tooltip-position="top" aria-label="常用命令/git.md" data-href="常用命令/git.md" href="https://wxkj.asia/mynote/常用命令/git.html" class="internal-link" target="_self" rel="noopener">git</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/打印浏览器及内核版本.md" data-href="开发笔记/前端/打印浏览器及内核版本.md" href="https://wxkj.asia/mynote/开发笔记/前端/打印浏览器及内核版本.html" class="internal-link" target="_self" rel="noopener">打印浏览器及内核版本</a><br><a data-tooltip-position="top" aria-label="开发笔记/脚本插件/Powershell监控文件夹创建md文件并移动位置.md" data-href="开发笔记/脚本插件/Powershell监控文件夹创建md文件并移动位置.md" href="https://wxkj.asia/mynote/开发笔记/脚本插件/powershell监控文件夹创建md文件并移动位置.html" class="internal-link" target="_self" rel="noopener">Powershell监控文件夹创建md文件并移动位置</a><br><a data-tooltip-position="top" aria-label="开发笔记/脚本插件/bat避免重复运行.md" data-href="开发笔记/脚本插件/bat避免重复运行.md" href="https://wxkj.asia/mynote/开发笔记/脚本插件/bat避免重复运行.html" class="internal-link" target="_self" rel="noopener">bat避免重复运行</a><br><a data-tooltip-position="top" aria-label="开发笔记/算法/多端文件同步原理和算法概述.md" data-href="开发笔记/算法/多端文件同步原理和算法概述.md" href="https://wxkj.asia/mynote/开发笔记/算法/多端文件同步原理和算法概述.html" class="internal-link" target="_self" rel="noopener">多端文件同步原理和算法概述</a><br><a data-tooltip-position="top" aria-label="开发笔记/数据库/mysql 数据库并发控制的内部实现机制和原理是什么.md" data-href="开发笔记/数据库/mysql 数据库并发控制的内部实现机制和原理是什么.md" href="https://wxkj.asia/mynote/开发笔记/数据库/mysql-数据库并发控制的内部实现机制和原理是什么.html" class="internal-link" target="_self" rel="noopener">mysql 数据库并发控制的内部实现机制和原理是什么</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/开发小技巧之调试移开消失的元素.md" data-href="开发笔记/前端/开发小技巧之调试移开消失的元素.md" href="https://wxkj.asia/mynote/开发笔记/前端/开发小技巧之调试移开消失的元素.html" class="internal-link" target="_self" rel="noopener">开发小技巧之调试移开消失的元素</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/平滑滚动到顶部或底部.md" data-href="开发笔记/前端/平滑滚动到顶部或底部.md" href="https://wxkj.asia/mynote/开发笔记/前端/平滑滚动到顶部或底部.html" class="internal-link" target="_self" rel="noopener">平滑滚动到顶部或底部</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/一个高级 CSS 面试题：在 CSS 中实现 if-else.md" data-href="开发笔记/前端/一个高级 CSS 面试题：在 CSS 中实现 if-else.md" href="https://wxkj.asia/mynote/开发笔记/前端/一个高级-css-面试题：在-css-中实现-if-else.html" class="internal-link" target="_self" rel="noopener">一个高级 CSS 面试题：在 CSS 中实现 if-else</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/HTML 标签简写及全称.md" data-href="开发笔记/前端/HTML 标签简写及全称.md" href="https://wxkj.asia/mynote/开发笔记/前端/html-标签简写及全称.html" class="internal-link" target="_self" rel="noopener">HTML 标签简写及全称</a><br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 通过fs.watch实现文件的双向同步.md" data-href="开发笔记/前端/js 通过fs.watch实现文件的双向同步.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-通过fs.watch实现文件的双向同步.html" class="internal-link" target="_self" rel="noopener">js 通过fs.watch实现文件的双向同步</a><br><a data-tooltip-position="top" aria-label="开发笔记/UI设计/色轮_色环_色彩搭配 - Canva 可画.md" data-href="开发笔记/UI设计/色轮_色环_色彩搭配 - Canva 可画.md" href="https://wxkj.asia/mynote/开发笔记/ui设计/色轮_色环_色彩搭配-canva-可画.html" class="internal-link" target="_self" rel="noopener">色轮_色环_色彩搭配 - Canva 可画</a><br><a data-tooltip-position="top" aria-label="开发笔记/UI设计/优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心.md" data-href="开发笔记/UI设计/优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心.md" href="https://wxkj.asia/mynote/开发笔记/ui设计/优化浏览器设置以提升性能和使用体验-mastergo-帮助中心.html" class="internal-link" target="_self" rel="noopener">优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心</a><br><a data-tooltip-position="top" aria-label="开发笔记/python/python3实现将本地文件夹全部内容上传到FTP.md" data-href="开发笔记/python/python3实现将本地文件夹全部内容上传到FTP.md" href="https://wxkj.asia/mynote/开发笔记/python/python3实现将本地文件夹全部内容上传到ftp.html" class="internal-link" target="_self" rel="noopener">python3实现将本地文件夹全部内容上传到FTP</a><br><a data-tooltip-position="top" aria-label="开发笔记/python/ftp获取远程文件时间.md" data-href="开发笔记/python/ftp获取远程文件时间.md" href="https://wxkj.asia/mynote/开发笔记/python/ftp获取远程文件时间.html" class="internal-link" target="_self" rel="noopener">ftp获取远程文件时间</a><br><a data-tooltip-position="top" aria-label="开发笔记/python/ftp获取文件的md5.md" data-href="开发笔记/python/ftp获取文件的md5.md" href="https://wxkj.asia/mynote/开发笔记/python/ftp获取文件的md5.html" class="internal-link" target="_self" rel="noopener">ftp获取文件的md5</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/解决git status不能显示中文.md" data-href="开发笔记/git/解决git status不能显示中文.md" href="https://wxkj.asia/mynote/开发笔记/git/解决git-status不能显示中文.html" class="internal-link" target="_self" rel="noopener">解决git status不能显示中文</a><br><a data-tooltip-position="top" aria-label="开发笔记/git/快速解决 Resource not accessible by integration.md" data-href="开发笔记/git/快速解决 Resource not accessible by integration.md" href="https://wxkj.asia/mynote/开发笔记/git/快速解决-resource-not-accessible-by-integration.html" class="internal-link" target="_self" rel="noopener">快速解决 Resource not accessible by integration</a>]]></description><link>https://wxkj.asia/mynote/index.html</link><guid isPermaLink="false">index.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Fri, 17 May 2024 12:06:01 GMT</pubDate></item><item><title><![CDATA[归档]]></title><description><![CDATA[ 
 <br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/scrollIntoView 等待滚动结束执行.md" data-href="开发笔记/前端/scrollIntoView 等待滚动结束执行.md" href="https://wxkj.asia/mynote/开发笔记/前端/scrollintoview-等待滚动结束执行.html" class="internal-link" target="_self" rel="noopener">scrollIntoView 等待滚动结束执行</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/1万访问需要多少宽带.md" data-href="学习笔记/1万访问需要多少宽带.md" href="https://wxkj.asia/mynote/学习笔记/1万访问需要多少宽带.html" class="internal-link" target="_self" rel="noopener">1万访问需要多少宽带</a>
<br><a data-tooltip-position="top" aria-label="常用命令/工具.md" data-href="常用命令/工具.md" href="https://wxkj.asia/mynote/常用命令/工具.html" class="internal-link" target="_self" rel="noopener">工具</a>
<br><a data-tooltip-position="top" aria-label="常用命令/秘钥破解.md" data-href="常用命令/秘钥破解.md" href="https://wxkj.asia/mynote/常用命令/秘钥破解.html" class="internal-link" target="_self" rel="noopener">秘钥破解</a>
<br><a data-tooltip-position="top" aria-label="常用命令/nginx.md" data-href="常用命令/nginx.md" href="https://wxkj.asia/mynote/常用命令/nginx.html" class="internal-link" target="_self" rel="noopener">nginx</a>
<br><a data-tooltip-position="top" aria-label="常用命令/grep.md" data-href="常用命令/grep.md" href="https://wxkj.asia/mynote/常用命令/grep.html" class="internal-link" target="_self" rel="noopener">grep</a>
<br><a data-tooltip-position="top" aria-label="常用命令/cmd-bat.md" data-href="常用命令/cmd-bat.md" href="https://wxkj.asia/mynote/常用命令/cmd-bat.html" class="internal-link" target="_self" rel="noopener">cmd-bat</a>
<br><a data-tooltip-position="top" aria-label="常用命令/压力测试ab.md" data-href="常用命令/压力测试ab.md" href="https://wxkj.asia/mynote/常用命令/压力测试ab.html" class="internal-link" target="_self" rel="noopener">压力测试ab</a>
<br><a data-tooltip-position="top" aria-label="常用命令/科学上网-vpn-翻墙.md" data-href="常用命令/科学上网-vpn-翻墙.md" href="https://wxkj.asia/mynote/常用命令/科学上网-vpn-翻墙.html" class="internal-link" target="_self" rel="noopener">科学上网-vpn-翻墙</a>
<br><a data-tooltip-position="top" aria-label="常用命令/visual studio.md" data-href="常用命令/visual studio.md" href="https://wxkj.asia/mynote/常用命令/visual-studio.html" class="internal-link" target="_self" rel="noopener">visual studio</a>
<br><a data-tooltip-position="top" aria-label="常用命令/rabbitmq.md" data-href="常用命令/rabbitmq.md" href="https://wxkj.asia/mynote/常用命令/rabbitmq.html" class="internal-link" target="_self" rel="noopener">rabbitmq</a>
<br><a data-tooltip-position="top" aria-label="常用命令/lnmp.md" data-href="常用命令/lnmp.md" href="https://wxkj.asia/mynote/常用命令/lnmp.html" class="internal-link" target="_self" rel="noopener">lnmp</a>
<br><a data-tooltip-position="top" aria-label="常用命令/fiddler.md" data-href="常用命令/fiddler.md" href="https://wxkj.asia/mynote/常用命令/fiddler.html" class="internal-link" target="_self" rel="noopener">fiddler</a>
<br><a data-tooltip-position="top" aria-label="常用命令/ubuntu.md" data-href="常用命令/ubuntu.md" href="https://wxkj.asia/mynote/常用命令/ubuntu.html" class="internal-link" target="_self" rel="noopener">ubuntu</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js实现ctrl+鼠标左键点击示例.md" data-href="开发笔记/前端/js实现ctrl+鼠标左键点击示例.md" href="https://wxkj.asia/mynote/开发笔记/前端/js实现ctrl+鼠标左键点击示例.html" class="internal-link" target="_self" rel="noopener">js实现ctrl+鼠标左键点击示例</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/dataview排序.md" data-href="工具软件/obsidian/dataview排序.md" href="https://wxkj.asia/mynote/工具软件/obsidian/dataview排序.html" class="internal-link" target="_self" rel="noopener">dataview排序</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js怎么先按ctime desc,再按title asc.md" data-href="开发笔记/前端/js怎么先按ctime desc,再按title asc.md" href="https://wxkj.asia/mynote/开发笔记/前端/js怎么先按ctime-desc,再按title-asc.html" class="internal-link" target="_self" rel="noopener">js怎么先按ctime desc,再按title asc</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/css选择前n个元素.md" data-href="开发笔记/前端/css选择前n个元素.md" href="https://wxkj.asia/mynote/开发笔记/前端/css选择前n个元素.html" class="internal-link" target="_self" rel="noopener">css选择前n个元素</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/templater.md" data-href="工具软件/obsidian/插件/templater.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/templater.html" class="internal-link" target="_self" rel="noopener">templater</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/quickadd.md" data-href="工具软件/obsidian/插件/quickadd.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/quickadd.html" class="internal-link" target="_self" rel="noopener">quickadd</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/dataview.md" data-href="工具软件/obsidian/插件/dataview.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/dataview.html" class="internal-link" target="_self" rel="noopener">dataview</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.md" data-href="开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.md" href="https://wxkj.asia/mynote/开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.html" class="internal-link" target="_self" rel="noopener">前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/web开发冷知识汇总.md" data-href="开发笔记/php/web开发冷知识汇总.md" href="https://wxkj.asia/mynote/开发笔记/php/web开发冷知识汇总.html" class="internal-link" target="_self" rel="noopener">web开发冷知识汇总</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" data-href="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" href="https://wxkj.asia/mynote/开发笔记/前端/mac调试ios的safari浏览器打开的页面.html" class="internal-link" target="_self" rel="noopener">Mac调试ios的safari浏览器打开的页面</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/JWT用户登录方案-前后端交互说明.md" data-href="开发笔记/php/JWT用户登录方案-前后端交互说明.md" href="https://wxkj.asia/mynote/开发笔记/php/jwt用户登录方案-前后端交互说明.html" class="internal-link" target="_self" rel="noopener">JWT用户登录方案-前后端交互说明</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/IP Lookup in PHP.md" data-href="开发笔记/php/IP Lookup in PHP.md" href="https://wxkj.asia/mynote/开发笔记/php/ip-lookup-in-php.html" class="internal-link" target="_self" rel="noopener">IP Lookup in PHP</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/【mac】shell小技巧将`终.md" data-href="开发笔记/mac/【mac】shell小技巧将`终.md" href="https://wxkj.asia/mynote/开发笔记/mac/【mac】shell小技巧将`终.html" class="internal-link" target="_self" rel="noopener">【mac】shell小技巧将`终</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/Mac开机启动配置详解.md" data-href="开发笔记/mac/Mac开机启动配置详解.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac开机启动配置详解.html" class="internal-link" target="_self" rel="noopener">Mac开机启动配置详解</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/mac下shell弹出下拉选择框.md" data-href="开发笔记/mac/mac下shell弹出下拉选择框.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac下shell弹出下拉选择框.html" class="internal-link" target="_self" rel="noopener">mac下shell弹出下拉选择框</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/mac上shell扫描目录并放到弹框列表中.md" data-href="开发笔记/mac/mac上shell扫描目录并放到弹框列表中.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac上shell扫描目录并放到弹框列表中.html" class="internal-link" target="_self" rel="noopener">mac上shell扫描目录并放到弹框列表中</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/Mac 下 brew 切换为国内源.md" data-href="开发笔记/mac/Mac 下 brew 切换为国内源.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac-下-brew-切换为国内源.html" class="internal-link" target="_self" rel="noopener">Mac 下 brew 切换为国内源</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/fswatch的使用.md" data-href="开发笔记/mac/fswatch的使用.md" href="https://wxkj.asia/mynote/开发笔记/mac/fswatch的使用.html" class="internal-link" target="_self" rel="noopener">fswatch的使用</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/AppleScript 隐藏执行shell脚本文件.md" data-href="开发笔记/mac/AppleScript 隐藏执行shell脚本文件.md" href="https://wxkj.asia/mynote/开发笔记/mac/applescript-隐藏执行shell脚本文件.html" class="internal-link" target="_self" rel="noopener">AppleScript 隐藏执行shell脚本文件</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/内网穿透.md" data-href="开发笔记/linux/内网穿透.md" href="https://wxkj.asia/mynote/开发笔记/linux/内网穿透.html" class="internal-link" target="_self" rel="noopener">内网穿透</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/使用Shell脚本实现FTP自动上传和下载文件.md" data-href="开发笔记/linux/使用Shell脚本实现FTP自动上传和下载文件.md" href="https://wxkj.asia/mynote/开发笔记/linux/使用shell脚本实现ftp自动上传和下载文件.html" class="internal-link" target="_self" rel="noopener">使用Shell脚本实现FTP自动上传和下载文件</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.md" data-href="开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.html" class="internal-link" target="_self" rel="noopener">shell获取文件夹下所有目录路径，包括子目录</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md" data-href="开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md" href="https://wxkj.asia/mynote/开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.html" class="internal-link" target="_self" rel="noopener">为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Shell之判断程序是否运行.md" data-href="开发笔记/linux/Shell之判断程序是否运行.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell之判断程序是否运行.html" class="internal-link" target="_self" rel="noopener">Shell之判断程序是否运行</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell if语句中的并列 - 诗意的栖居 - ITeye博客.md" data-href="开发笔记/linux/shell if语句中的并列 - 诗意的栖居 - ITeye博客.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell-if语句中的并列-诗意的栖居-iteye博客.html" class="internal-link" target="_self" rel="noopener">shell if语句中的并列 - 诗意的栖居 - ITeye博客</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell 下 urlencode和urldecode 编码解码的方法.md" data-href="开发笔记/linux/shell 下 urlencode和urldecode 编码解码的方法.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell-下-urlencode和urldecode-编码解码的方法.html" class="internal-link" target="_self" rel="noopener">shell 下 urlencode和urldecode 编码解码的方法</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/rsync 用法教程.md" data-href="开发笔记/linux/rsync 用法教程.md" href="https://wxkj.asia/mynote/开发笔记/linux/rsync-用法教程.html" class="internal-link" target="_self" rel="noopener">rsync 用法教程</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/rsync + inotify 实现文件实时双向自动同步.md" data-href="开发笔记/linux/rsync + inotify 实现文件实时双向自动同步.md" href="https://wxkj.asia/mynote/开发笔记/linux/rsync-+-inotify-实现文件实时双向自动同步.html" class="internal-link" target="_self" rel="noopener">rsync + inotify 实现文件实时双向自动同步</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux中如何锁定文件？flock命令一定要了解！.md" data-href="开发笔记/linux/Linux中如何锁定文件？flock命令一定要了解！.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux中如何锁定文件？flock命令一定要了解！.html" class="internal-link" target="_self" rel="noopener">Linux中如何锁定文件？flock命令一定要了解！</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux find 模拟 tree 命令.md" data-href="开发笔记/linux/Linux find 模拟 tree 命令.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux-find-模拟-tree-命令.html" class="internal-link" target="_self" rel="noopener">Linux find 模拟 tree 命令</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux 文件搜索神器 find 实战详解.md" data-href="开发笔记/linux/Linux 文件搜索神器 find 实战详解.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux-文件搜索神器-find-实战详解.html" class="internal-link" target="_self" rel="noopener">Linux 文件搜索神器 find 实战详解</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/搜索.md" data-href="工具软件/obsidian/markdown语法官方教程/搜索.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/搜索.html" class="internal-link" target="_self" rel="noopener">搜索</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/DataView 入门教程.md" data-href="工具软件/obsidian/DataView 入门教程.md" href="https://wxkj.asia/mynote/工具软件/obsidian/dataview-入门教程.html" class="internal-link" target="_self" rel="noopener">DataView 入门教程</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/检测git中是否有文件发生了冲突.md" data-href="开发笔记/git/检测git中是否有文件发生了冲突.md" href="https://wxkj.asia/mynote/开发笔记/git/检测git中是否有文件发生了冲突.html" class="internal-link" target="_self" rel="noopener">检测git中是否有文件发生了冲突</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/检测git变化并提交.md" data-href="开发笔记/git/检测git变化并提交.md" href="https://wxkj.asia/mynote/开发笔记/git/检测git变化并提交.html" class="internal-link" target="_self" rel="noopener">检测git变化并提交</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/fork的项目如何更新.md" data-href="开发笔记/git/fork的项目如何更新.md" href="https://wxkj.asia/mynote/开发笔记/git/fork的项目如何更新.html" class="internal-link" target="_self" rel="noopener">fork的项目如何更新</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/好书推荐.md" data-href="学习笔记/好书推荐.md" href="https://wxkj.asia/mynote/学习笔记/好书推荐.html" class="internal-link" target="_self" rel="noopener">好书推荐</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/SEO优化/seo优化工具.md" data-href="开发笔记/SEO优化/seo优化工具.md" href="https://wxkj.asia/mynote/开发笔记/seo优化/seo优化工具.html" class="internal-link" target="_self" rel="noopener">seo优化工具</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/通过脚本修改input值，手动触发input事件.md" data-href="开发笔记/前端/通过脚本修改input值，手动触发input事件.md" href="https://wxkj.asia/mynote/开发笔记/前端/通过脚本修改input值，手动触发input事件.html" class="internal-link" target="_self" rel="noopener">通过脚本修改input值，手动触发input事件</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/@font-face规则和Font Loading API.md" data-href="开发笔记/前端/@font-face规则和Font Loading API.md" href="https://wxkj.asia/mynote/开发笔记/前端/@font-face规则和font-loading-api.html" class="internal-link" target="_self" rel="noopener">@font-face规则和Font Loading API</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.md" data-href="开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.md" href="https://wxkj.asia/mynote/开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.html" class="internal-link" target="_self" rel="noopener">js，css，font，png等静态资源如何当加载失败后使用备用地址</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/最全的 rgba 与 16 进制颜色空间互相转换方法.md" data-href="开发笔记/前端/最全的 rgba 与 16 进制颜色空间互相转换方法.md" href="https://wxkj.asia/mynote/开发笔记/前端/最全的-rgba-与-16-进制颜色空间互相转换方法.html" class="internal-link" target="_self" rel="noopener">最全的 rgba 与 16 进制颜色空间互相转换方法</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/防止window.onload被覆盖的技巧.md" data-href="开发笔记/前端/防止window.onload被覆盖的技巧.md" href="https://wxkj.asia/mynote/开发笔记/前端/防止window.onload被覆盖的技巧.html" class="internal-link" target="_self" rel="noopener">防止window.onload被覆盖的技巧</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.md" data-href="开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.md" href="https://wxkj.asia/mynote/开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.html" class="internal-link" target="_self" rel="noopener">js显示和隐藏动画及鼠标穿透实现</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js判断一个元素是否已监听某个事件.md" data-href="开发笔记/前端/js判断一个元素是否已监听某个事件.md" href="https://wxkj.asia/mynote/开发笔记/前端/js判断一个元素是否已监听某个事件.html" class="internal-link" target="_self" rel="noopener">js判断一个元素是否已监听某个事件</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js给元素同时赋值多个样式属性.md" data-href="开发笔记/前端/js给元素同时赋值多个样式属性.md" href="https://wxkj.asia/mynote/开发笔记/前端/js给元素同时赋值多个样式属性.html" class="internal-link" target="_self" rel="noopener">js给元素同时赋值多个样式属性</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/用setTimeout代替eval执行js字符串.md" data-href="开发笔记/前端/用setTimeout代替eval执行js字符串.md" href="https://wxkj.asia/mynote/开发笔记/前端/用settimeout代替eval执行js字符串.html" class="internal-link" target="_self" rel="noopener">用setTimeout代替eval执行js字符串</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/transitionend事件判断是opacity是1还是0.md" data-href="开发笔记/前端/transitionend事件判断是opacity是1还是0.md" href="https://wxkj.asia/mynote/开发笔记/前端/transitionend事件判断是opacity是1还是0.html" class="internal-link" target="_self" rel="noopener">transitionend事件判断是opacity是1还是0</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 怎么获取滚动条自身的宽度.md" data-href="开发笔记/前端/js 怎么获取滚动条自身的宽度.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-怎么获取滚动条自身的宽度.html" class="internal-link" target="_self" rel="noopener">js 怎么获取滚动条自身的宽度</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/JS图片另存为.md" data-href="开发笔记/前端/JS图片另存为.md" href="https://wxkj.asia/mynote/开发笔记/前端/js图片另存为.html" class="internal-link" target="_self" rel="noopener">JS图片另存为</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/table表格设置border-radius不生效.md" data-href="开发笔记/前端/table表格设置border-radius不生效.md" href="https://wxkj.asia/mynote/开发笔记/前端/table表格设置border-radius不生效.html" class="internal-link" target="_self" rel="noopener">table表格设置border-radius不生效</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/CSS 垂直居中SVG标签.md" data-href="开发笔记/前端/CSS 垂直居中SVG标签.md" href="https://wxkj.asia/mynote/开发笔记/前端/css-垂直居中svg标签.html" class="internal-link" target="_self" rel="noopener">CSS 垂直居中SVG标签</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" data-href="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" href="https://wxkj.asia/mynote/开发笔记/前端/chrome-devtools-远程调试安卓网页的原理.html" class="internal-link" target="_self" rel="noopener">Chrome DevTools 远程调试安卓网页的原理</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/css屏幕尺寸与设备.md" data-href="开发笔记/前端/css屏幕尺寸与设备.md" href="https://wxkj.asia/mynote/开发笔记/前端/css屏幕尺寸与设备.html" class="internal-link" target="_self" rel="noopener">css屏幕尺寸与设备</a>
<br><a data-tooltip-position="top" aria-label="工具软件/[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？.md" data-href="工具软件/[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？.md" href="https://wxkj.asia/mynote/工具软件/[经验教程]-国内如何下载更新-google-谷歌浏览器及更新谷歌-chrome-浏览器无法访问此网站怎么办？.html" class="internal-link" target="_self" rel="noopener">[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/git 导出变动文件，包括目录结构.md" data-href="开发笔记/git/git 导出变动文件，包括目录结构.md" href="https://wxkj.asia/mynote/开发笔记/git/git-导出变动文件，包括目录结构.html" class="internal-link" target="_self" rel="noopener">git 导出变动文件，包括目录结构</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" data-href="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" href="https://wxkj.asia/mynote/开发笔记/git/git-创建一个裸仓库，作为简易的-git-服务器.html" class="internal-link" target="_self" rel="noopener">Git 创建一个裸仓库，作为简易的 Git 服务器</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/Javascript拷贝到剪切板.md" data-href="开发笔记/前端/Javascript拷贝到剪切板.md" href="https://wxkj.asia/mynote/开发笔记/前端/javascript拷贝到剪切板.html" class="internal-link" target="_self" rel="noopener">Javascript拷贝到剪切板</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js判断是否是手机.md" data-href="开发笔记/前端/js判断是否是手机.md" href="https://wxkj.asia/mynote/开发笔记/前端/js判断是否是手机.html" class="internal-link" target="_self" rel="noopener">js判断是否是手机</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 时间戳转字符串.md" data-href="开发笔记/前端/js 时间戳转字符串.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-时间戳转字符串.html" class="internal-link" target="_self" rel="noopener">js 时间戳转字符串</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/defer和async的区别（面试被问到了） - 掘金.md" data-href="开发笔记/前端/defer和async的区别（面试被问到了） - 掘金.md" href="https://wxkj.asia/mynote/开发笔记/前端/defer和async的区别（面试被问到了）-掘金.html" class="internal-link" target="_self" rel="noopener">defer和async的区别（面试被问到了） - 掘金</a>
<br><a data-tooltip-position="top" aria-label="常用命令/常用命令.md" data-href="常用命令/常用命令.md" href="https://wxkj.asia/mynote/常用命令/常用命令.html" class="internal-link" target="_self" rel="noopener">常用命令</a>
<br><a data-tooltip-position="top" aria-label="常用命令/linux.md" data-href="常用命令/linux.md" href="https://wxkj.asia/mynote/常用命令/linux.html" class="internal-link" target="_self" rel="noopener">linux</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js动态执行代码片段.md" data-href="开发笔记/前端/js动态执行代码片段.md" href="https://wxkj.asia/mynote/开发笔记/前端/js动态执行代码片段.html" class="internal-link" target="_self" rel="noopener">js动态执行代码片段</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/CodeMirror api.md" data-href="开发笔记/前端/CodeMirror api.md" href="https://wxkj.asia/mynote/开发笔记/前端/codemirror-api.html" class="internal-link" target="_self" rel="noopener">CodeMirror api</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/页面之间的通信.md" data-href="开发笔记/前端/页面之间的通信.md" href="https://wxkj.asia/mynote/开发笔记/前端/页面之间的通信.html" class="internal-link" target="_self" rel="noopener">页面之间的通信</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/关闭重复标签.md" data-href="工具软件/obsidian/插件/关闭重复标签.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/关闭重复标签.html" class="internal-link" target="_self" rel="noopener">关闭重复标签</a>
<br><a data-tooltip-position="top" aria-label="常用命令/git.md" data-href="常用命令/git.md" href="https://wxkj.asia/mynote/常用命令/git.html" class="internal-link" target="_self" rel="noopener">git</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/打印浏览器及内核版本.md" data-href="开发笔记/前端/打印浏览器及内核版本.md" href="https://wxkj.asia/mynote/开发笔记/前端/打印浏览器及内核版本.html" class="internal-link" target="_self" rel="noopener">打印浏览器及内核版本</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/脚本插件/Powershell监控文件夹创建md文件并移动位置.md" data-href="开发笔记/脚本插件/Powershell监控文件夹创建md文件并移动位置.md" href="https://wxkj.asia/mynote/开发笔记/脚本插件/powershell监控文件夹创建md文件并移动位置.html" class="internal-link" target="_self" rel="noopener">Powershell监控文件夹创建md文件并移动位置</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/脚本插件/bat避免重复运行.md" data-href="开发笔记/脚本插件/bat避免重复运行.md" href="https://wxkj.asia/mynote/开发笔记/脚本插件/bat避免重复运行.html" class="internal-link" target="_self" rel="noopener">bat避免重复运行</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/算法/多端文件同步原理和算法概述.md" data-href="开发笔记/算法/多端文件同步原理和算法概述.md" href="https://wxkj.asia/mynote/开发笔记/算法/多端文件同步原理和算法概述.html" class="internal-link" target="_self" rel="noopener">多端文件同步原理和算法概述</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/数据库/mysql 数据库并发控制的内部实现机制和原理是什么.md" data-href="开发笔记/数据库/mysql 数据库并发控制的内部实现机制和原理是什么.md" href="https://wxkj.asia/mynote/开发笔记/数据库/mysql-数据库并发控制的内部实现机制和原理是什么.html" class="internal-link" target="_self" rel="noopener">mysql 数据库并发控制的内部实现机制和原理是什么</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/开发小技巧之调试移开消失的元素.md" data-href="开发笔记/前端/开发小技巧之调试移开消失的元素.md" href="https://wxkj.asia/mynote/开发笔记/前端/开发小技巧之调试移开消失的元素.html" class="internal-link" target="_self" rel="noopener">开发小技巧之调试移开消失的元素</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/平滑滚动到顶部或底部.md" data-href="开发笔记/前端/平滑滚动到顶部或底部.md" href="https://wxkj.asia/mynote/开发笔记/前端/平滑滚动到顶部或底部.html" class="internal-link" target="_self" rel="noopener">平滑滚动到顶部或底部</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/一个高级 CSS 面试题：在 CSS 中实现 if-else.md" data-href="开发笔记/前端/一个高级 CSS 面试题：在 CSS 中实现 if-else.md" href="https://wxkj.asia/mynote/开发笔记/前端/一个高级-css-面试题：在-css-中实现-if-else.html" class="internal-link" target="_self" rel="noopener">一个高级 CSS 面试题：在 CSS 中实现 if-else</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/HTML 标签简写及全称.md" data-href="开发笔记/前端/HTML 标签简写及全称.md" href="https://wxkj.asia/mynote/开发笔记/前端/html-标签简写及全称.html" class="internal-link" target="_self" rel="noopener">HTML 标签简写及全称</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 通过fs.watch实现文件的双向同步.md" data-href="开发笔记/前端/js 通过fs.watch实现文件的双向同步.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-通过fs.watch实现文件的双向同步.html" class="internal-link" target="_self" rel="noopener">js 通过fs.watch实现文件的双向同步</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/UI设计/色轮_色环_色彩搭配 - Canva 可画.md" data-href="开发笔记/UI设计/色轮_色环_色彩搭配 - Canva 可画.md" href="https://wxkj.asia/mynote/开发笔记/ui设计/色轮_色环_色彩搭配-canva-可画.html" class="internal-link" target="_self" rel="noopener">色轮_色环_色彩搭配 - Canva 可画</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/UI设计/优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心.md" data-href="开发笔记/UI设计/优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心.md" href="https://wxkj.asia/mynote/开发笔记/ui设计/优化浏览器设置以提升性能和使用体验-mastergo-帮助中心.html" class="internal-link" target="_self" rel="noopener">优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/python/python3实现将本地文件夹全部内容上传到FTP.md" data-href="开发笔记/python/python3实现将本地文件夹全部内容上传到FTP.md" href="https://wxkj.asia/mynote/开发笔记/python/python3实现将本地文件夹全部内容上传到ftp.html" class="internal-link" target="_self" rel="noopener">python3实现将本地文件夹全部内容上传到FTP</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/python/ftp获取远程文件时间.md" data-href="开发笔记/python/ftp获取远程文件时间.md" href="https://wxkj.asia/mynote/开发笔记/python/ftp获取远程文件时间.html" class="internal-link" target="_self" rel="noopener">ftp获取远程文件时间</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/python/ftp获取文件的md5.md" data-href="开发笔记/python/ftp获取文件的md5.md" href="https://wxkj.asia/mynote/开发笔记/python/ftp获取文件的md5.html" class="internal-link" target="_self" rel="noopener">ftp获取文件的md5</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/解决git status不能显示中文.md" data-href="开发笔记/git/解决git status不能显示中文.md" href="https://wxkj.asia/mynote/开发笔记/git/解决git-status不能显示中文.html" class="internal-link" target="_self" rel="noopener">解决git status不能显示中文</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/快速解决 Resource not accessible by integration.md" data-href="开发笔记/git/快速解决 Resource not accessible by integration.md" href="https://wxkj.asia/mynote/开发笔记/git/快速解决-resource-not-accessible-by-integration.html" class="internal-link" target="_self" rel="noopener">快速解决 Resource not accessible by integration</a>
<br><a data-tooltip-position="top" aria-label="工具软件/我开发了一个可以置顶笔记的app.md" data-href="工具软件/我开发了一个可以置顶笔记的app.md" href="https://wxkj.asia/mynote/工具软件/我开发了一个可以置顶笔记的app.html" class="internal-link" target="_self" rel="noopener">我开发了一个可以置顶笔记的app</a>
<br><a data-tooltip-position="top" aria-label="工具软件/在 Mac 上安排关机定时器的.md" data-href="工具软件/在 Mac 上安排关机定时器的.md" href="https://wxkj.asia/mynote/工具软件/在-mac-上安排关机定时器的.html" class="internal-link" target="_self" rel="noopener">在 Mac 上安排关机定时器的</a>
<br><a data-tooltip-position="top" aria-label="工具软件/typora.md" data-href="工具软件/typora.md" href="https://wxkj.asia/mynote/工具软件/typora.html" class="internal-link" target="_self" rel="noopener">typora</a>
<br><a data-tooltip-position="top" aria-label="工具软件/关于图床的一些使用心得总结.md" data-href="工具软件/关于图床的一些使用心得总结.md" href="https://wxkj.asia/mynote/工具软件/关于图床的一些使用心得总结.html" class="internal-link" target="_self" rel="noopener">关于图床的一些使用心得总结</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/用 MaoXian 网摘保存网络文章到 Obsidian.md" data-href="工具软件/obsidian/用 MaoXian 网摘保存网络文章到 Obsidian.md" href="https://wxkj.asia/mynote/工具软件/obsidian/用-maoxian-网摘保存网络文章到-obsidian.html" class="internal-link" target="_self" rel="noopener">用 MaoXian 网摘保存网络文章到 Obsidian</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/插件开发笔记.md" data-href="工具软件/obsidian/插件/插件开发笔记.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/插件开发笔记.html" class="internal-link" target="_self" rel="noopener">插件开发笔记</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/HK Code Block插件的使用.md" data-href="工具软件/obsidian/插件/HK Code Block插件的使用.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/hk-code-block插件的使用.html" class="internal-link" target="_self" rel="noopener">HK Code Block插件的使用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/我把文心一言嵌入到 obsidian 里了.md" data-href="工具软件/obsidian/我把文心一言嵌入到 obsidian 里了.md" href="https://wxkj.asia/mynote/工具软件/obsidian/我把文心一言嵌入到-obsidian-里了.html" class="internal-link" target="_self" rel="noopener">我把文心一言嵌入到 obsidian 里了</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin).md" data-href="工具软件/obsidian/我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin).md" href="https://wxkj.asia/mynote/工具软件/obsidian/我开发了一个快速输入markdown代码和禅模式的插件(ii-plugin).html" class="internal-link" target="_self" rel="noopener">我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin)</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/实用插件汇总说明.md" data-href="工具软件/obsidian/实用插件汇总说明.md" href="https://wxkj.asia/mynote/工具软件/obsidian/实用插件汇总说明.html" class="internal-link" target="_self" rel="noopener">实用插件汇总说明</a>
<br><a data-tooltip-position="top" aria-label="工具软件/Unison帮助文档翻译.md" data-href="工具软件/Unison帮助文档翻译.md" href="https://wxkj.asia/mynote/工具软件/unison帮助文档翻译.html" class="internal-link" target="_self" rel="noopener">Unison帮助文档翻译</a>
<br><a data-tooltip-position="top" aria-label="工具软件/Unison双向同步文件的使用.md" data-href="工具软件/Unison双向同步文件的使用.md" href="https://wxkj.asia/mynote/工具软件/unison双向同步文件的使用.html" class="internal-link" target="_self" rel="noopener">Unison双向同步文件的使用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/windows.md" data-href="工具软件/windows.md" href="https://wxkj.asia/mynote/工具软件/windows.html" class="internal-link" target="_self" rel="noopener">windows</a>
<br><a data-tooltip-position="top" aria-label="工具软件/JavaScript.md" data-href="工具软件/JavaScript.md" href="https://wxkj.asia/mynote/工具软件/javascript.html" class="internal-link" target="_self" rel="noopener">JavaScript</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="学习笔记/typescript之绑定和解绑事件.md" data-href="学习笔记/typescript之绑定和解绑事件.md" href="https://wxkj.asia/mynote/学习笔记/typescript之绑定和解绑事件.html" class="internal-link" target="_self" rel="noopener">typescript之绑定和解绑事件</a>
<br><a data-tooltip-position="top" aria-label="随笔/人工智能的体验.md" data-href="随笔/人工智能的体验.md" href="https://wxkj.asia/mynote/随笔/人工智能的体验.html" class="internal-link" target="_self" rel="noopener">人工智能的体验</a>
<br><a data-tooltip-position="top" aria-label="随笔/通义千问对话2.md" data-href="随笔/通义千问对话2.md" href="https://wxkj.asia/mynote/随笔/通义千问对话2.html" class="internal-link" target="_self" rel="noopener">通义千问对话2</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/css重复选择符增加权重吗？.md" data-href="学习笔记/css重复选择符增加权重吗？.md" href="https://wxkj.asia/mynote/学习笔记/css重复选择符增加权重吗？.html" class="internal-link" target="_self" rel="noopener">css重复选择符增加权重吗？</a>
<br><a data-tooltip-position="top" aria-label="随笔/我记笔记的本质，为什么记笔记.md" data-href="随笔/我记笔记的本质，为什么记笔记.md" href="https://wxkj.asia/mynote/随笔/我记笔记的本质，为什么记笔记.html" class="internal-link" target="_self" rel="noopener">我记笔记的本质，为什么记笔记</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/设计模式/laravel的设计模式.md" data-href="学习笔记/设计模式/laravel的设计模式.md" href="https://wxkj.asia/mynote/学习笔记/设计模式/laravel的设计模式.html" class="internal-link" target="_self" rel="noopener">laravel的设计模式</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/设计模式/常用设计模式.md" data-href="学习笔记/设计模式/常用设计模式.md" href="https://wxkj.asia/mynote/学习笔记/设计模式/常用设计模式.html" class="internal-link" target="_self" rel="noopener">常用设计模式</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/抽象类和接口使用场景.md" data-href="学习笔记/抽象类和接口使用场景.md" href="https://wxkj.asia/mynote/学习笔记/抽象类和接口使用场景.html" class="internal-link" target="_self" rel="noopener">抽象类和接口使用场景</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/JavaScript this.md" data-href="学习笔记/JavaScript this.md" href="https://wxkj.asia/mynote/学习笔记/javascript-this.html" class="internal-link" target="_self" rel="noopener">JavaScript this</a>
<br><a data-tooltip-position="top" aria-label="工具软件/fswatch和rsync的使用.md" data-href="工具软件/fswatch和rsync的使用.md" href="https://wxkj.asia/mynote/工具软件/fswatch和rsync的使用.html" class="internal-link" target="_self" rel="noopener">fswatch和rsync的使用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/lftp使用.md" data-href="工具软件/lftp使用.md" href="https://wxkj.asia/mynote/工具软件/lftp使用.html" class="internal-link" target="_self" rel="noopener">lftp使用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/checkCallback判断逻辑优化.md" data-href="工具软件/obsidian/checkCallback判断逻辑优化.md" href="https://wxkj.asia/mynote/工具软件/obsidian/checkcallback判断逻辑优化.html" class="internal-link" target="_self" rel="noopener">checkCallback判断逻辑优化</a>
<br><a data-tooltip-position="top" aria-label="常用命令/obsidian.md" data-href="常用命令/obsidian.md" href="https://wxkj.asia/mynote/常用命令/obsidian.html" class="internal-link" target="_self" rel="noopener">obsidian</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidian 插件：Dataview.md" data-href="工具软件/obsidian/Obsidian 插件：Dataview.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian-插件：dataview.html" class="internal-link" target="_self" rel="noopener">Obsidian 插件：Dataview</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidian 社区插件.md" data-href="工具软件/obsidian/Obsidian 社区插件.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian-社区插件.html" class="internal-link" target="_self" rel="noopener">Obsidian 社区插件</a>
<br><a data-tooltip-position="top" aria-label="常用命令/figma-pixso-mastergo.md" data-href="常用命令/figma-pixso-mastergo.md" href="https://wxkj.asia/mynote/常用命令/figma-pixso-mastergo.html" class="internal-link" target="_self" rel="noopener">figma-pixso-mastergo</a>
<br><a data-tooltip-position="top" aria-label="常用命令/laravel.md" data-href="常用命令/laravel.md" href="https://wxkj.asia/mynote/常用命令/laravel.html" class="internal-link" target="_self" rel="noopener">laravel</a>
<br><a data-tooltip-position="top" aria-label="常用命令/vim.md" data-href="常用命令/vim.md" href="https://wxkj.asia/mynote/常用命令/vim.html" class="internal-link" target="_self" rel="noopener">vim</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Mermaid 语法 - 流程图.md" data-href="工具软件/obsidian/Mermaid 语法 - 流程图.md" href="https://wxkj.asia/mynote/工具软件/obsidian/mermaid-语法-流程图.html" class="internal-link" target="_self" rel="noopener">Mermaid 语法 - 流程图</a>
<br><a data-tooltip-position="top" aria-label="常用命令/phpstorm.md" data-href="常用命令/phpstorm.md" href="https://wxkj.asia/mynote/常用命令/phpstorm.html" class="internal-link" target="_self" rel="noopener">phpstorm</a>
<br><a data-tooltip-position="top" aria-label="常用命令/vscode.md" data-href="常用命令/vscode.md" href="https://wxkj.asia/mynote/常用命令/vscode.html" class="internal-link" target="_self" rel="noopener">vscode</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Solarized深色主题+代码片段模仿Logseq主题风格.md" data-href="工具软件/obsidian/Solarized深色主题+代码片段模仿Logseq主题风格.md" href="https://wxkj.asia/mynote/工具软件/obsidian/solarized深色主题+代码片段模仿logseq主题风格.html" class="internal-link" target="_self" rel="noopener">Solarized深色主题+代码片段模仿Logseq主题风格</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Unison实现文件双向同步的利器.md" data-href="工具软件/obsidian/Unison实现文件双向同步的利器.md" href="https://wxkj.asia/mynote/工具软件/obsidian/unison实现文件双向同步的利器.html" class="internal-link" target="_self" rel="noopener">Unison实现文件双向同步的利器</a>
<br><a data-tooltip-position="top" aria-label="工具软件/mac 安装Beyond Compare，并永久使用_comparebeyond mac.md" data-href="工具软件/mac 安装Beyond Compare，并永久使用_comparebeyond mac.md" href="https://wxkj.asia/mynote/工具软件/mac-安装beyond-compare，并永久使用_comparebeyond-mac.html" class="internal-link" target="_self" rel="noopener">mac 安装Beyond Compare，并永久使用_comparebeyond mac</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/参考资料/TinyWebServer——从0到服务器开发！.md" data-href="学习笔记/参考资料/TinyWebServer——从0到服务器开发！.md" href="https://wxkj.asia/mynote/学习笔记/参考资料/tinywebserver——从0到服务器开发！.html" class="internal-link" target="_self" rel="noopener">TinyWebServer——从0到服务器开发！</a>
<br><a data-tooltip-position="top" aria-label="随笔/与人工智能的有趣问答.md" data-href="随笔/与人工智能的有趣问答.md" href="https://wxkj.asia/mynote/随笔/与人工智能的有趣问答.html" class="internal-link" target="_self" rel="noopener">与人工智能的有趣问答</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/学习资料.md" data-href="学习笔记/学习资料.md" href="https://wxkj.asia/mynote/学习笔记/学习资料.html" class="internal-link" target="_self" rel="noopener">学习资料</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床.md" data-href="工具软件/obsidian/gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床.md" href="https://wxkj.asia/mynote/工具软件/obsidian/gitee+github+jsdelivr+picgo+image-upload-tool打造个人免费图床.html" class="internal-link" target="_self" rel="noopener">gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidian最适合程序员的笔记软件.md" data-href="工具软件/obsidian/Obsidian最适合程序员的笔记软件.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian最适合程序员的笔记软件.html" class="internal-link" target="_self" rel="noopener">Obsidian最适合程序员的笔记软件</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/RemotelySave+InfiniCloud最简单的多端同步方案实践.md" data-href="工具软件/obsidian/RemotelySave+InfiniCloud最简单的多端同步方案实践.md" href="https://wxkj.asia/mynote/工具软件/obsidian/remotelysave+infinicloud最简单的多端同步方案实践.html" class="internal-link" target="_self" rel="noopener">RemotelySave+InfiniCloud最简单的多端同步方案实践</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/如何用 github 搭建图床（亲测有效）.md" data-href="工具软件/obsidian/如何用 github 搭建图床（亲测有效）.md" href="https://wxkj.asia/mynote/工具软件/obsidian/如何用-github-搭建图床（亲测有效）.html" class="internal-link" target="_self" rel="noopener">如何用 github 搭建图床（亲测有效）</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/WebDAV在各端的软件有哪些.md" data-href="工具软件/obsidian/WebDAV在各端的软件有哪些.md" href="https://wxkj.asia/mynote/工具软件/obsidian/webdav在各端的软件有哪些.html" class="internal-link" target="_self" rel="noopener">WebDAV在各端的软件有哪些</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Mac下fswatch+shell实现简悦导出markdown到obsidian.md" data-href="工具软件/obsidian/Mac下fswatch+shell实现简悦导出markdown到obsidian.md" href="https://wxkj.asia/mynote/工具软件/obsidian/mac下fswatch+shell实现简悦导出markdown到obsidian.html" class="internal-link" target="_self" rel="noopener">Mac下fswatch+shell实现简悦导出markdown到obsidian</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/obsidian分享文章到Quail博客.md" data-href="工具软件/obsidian/obsidian分享文章到Quail博客.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian分享文章到quail博客.html" class="internal-link" target="_self" rel="noopener">obsidian分享文章到Quail博客</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/uTools和obsidian联动，高效记录您的灵感闪现.md" data-href="工具软件/obsidian/uTools和obsidian联动，高效记录您的灵感闪现.md" href="https://wxkj.asia/mynote/工具软件/obsidian/utools和obsidian联动，高效记录您的灵感闪现.html" class="internal-link" target="_self" rel="noopener">uTools和obsidian联动，高效记录您的灵感闪现</a>
<br><a data-tooltip-position="top" aria-label="工具软件/logseq.md" data-href="工具软件/logseq.md" href="https://wxkj.asia/mynote/工具软件/logseq.html" class="internal-link" target="_self" rel="noopener">logseq</a>
<br><a data-tooltip-position="top" aria-label="工具软件/linux.md" data-href="工具软件/linux.md" href="https://wxkj.asia/mynote/工具软件/linux.html" class="internal-link" target="_self" rel="noopener">linux</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/使用 obsidian URI.md" data-href="工具软件/obsidian/markdown语法官方教程/使用 obsidian URI.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/使用-obsidian-uri.html" class="internal-link" target="_self" rel="noopener">使用 obsidian URI</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/为笔记添加别名.md" data-href="工具软件/obsidian/markdown语法官方教程/为笔记添加别名.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/为笔记添加别名.html" class="internal-link" target="_self" rel="noopener">为笔记添加别名</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/嵌入文件.md" data-href="工具软件/obsidian/markdown语法官方教程/嵌入文件.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/嵌入文件.html" class="internal-link" target="_self" rel="noopener">嵌入文件</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/内部链接.md" data-href="工具软件/obsidian/markdown语法官方教程/内部链接.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/内部链接.html" class="internal-link" target="_self" rel="noopener">内部链接</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/块链接与块引用.md" data-href="工具软件/obsidian/markdown语法官方教程/块链接与块引用.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/块链接与块引用.html" class="internal-link" target="_self" rel="noopener">块链接与块引用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/格式化笔记-Markdown基础.md" data-href="工具软件/obsidian/markdown语法官方教程/格式化笔记-Markdown基础.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/格式化笔记-markdown基础.html" class="internal-link" target="_self" rel="noopener">格式化笔记-Markdown基础</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidain插件之QuickAdd-强大的快速记录与宏工具.md" data-href="工具软件/obsidian/Obsidain插件之QuickAdd-强大的快速记录与宏工具.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidain插件之quickadd-强大的快速记录与宏工具.html" class="internal-link" target="_self" rel="noopener">Obsidain插件之QuickAdd-强大的快速记录与宏工具</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown示例教程.md" data-href="工具软件/obsidian/markdown示例教程.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown示例教程.html" class="internal-link" target="_self" rel="noopener">markdown示例教程</a>
<br><a data-tooltip-position="top" aria-label="工具软件/github加速方案.md" data-href="工具软件/github加速方案.md" href="https://wxkj.asia/mynote/工具软件/github加速方案.html" class="internal-link" target="_self" rel="noopener">github加速方案</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/学习网站.md" data-href="工具软件/obsidian/学习网站.md" href="https://wxkj.asia/mynote/工具软件/obsidian/学习网站.html" class="internal-link" target="_self" rel="noopener">学习网站</a>
]]></description><link>https://wxkj.asia/mynote/归档.html</link><guid isPermaLink="false">归档.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 18 May 2024 02:53:26 GMT</pubDate></item><item><title><![CDATA[分类]]></title><description><![CDATA[ 
 <br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/scrollIntoView 等待滚动结束执行.md" data-href="开发笔记/前端/scrollIntoView 等待滚动结束执行.md" href="https://wxkj.asia/mynote/开发笔记/前端/scrollintoview-等待滚动结束执行.html" class="internal-link" target="_self" rel="noopener">scrollIntoView 等待滚动结束执行</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js实现ctrl+鼠标左键点击示例.md" data-href="开发笔记/前端/js实现ctrl+鼠标左键点击示例.md" href="https://wxkj.asia/mynote/开发笔记/前端/js实现ctrl+鼠标左键点击示例.html" class="internal-link" target="_self" rel="noopener">js实现ctrl+鼠标左键点击示例</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js怎么先按ctime desc,再按title asc.md" data-href="开发笔记/前端/js怎么先按ctime desc,再按title asc.md" href="https://wxkj.asia/mynote/开发笔记/前端/js怎么先按ctime-desc,再按title-asc.html" class="internal-link" target="_self" rel="noopener">js怎么先按ctime desc,再按title asc</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/css选择前n个元素.md" data-href="开发笔记/前端/css选择前n个元素.md" href="https://wxkj.asia/mynote/开发笔记/前端/css选择前n个元素.html" class="internal-link" target="_self" rel="noopener">css选择前n个元素</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" data-href="开发笔记/前端/Mac调试ios的safari浏览器打开的页面.md" href="https://wxkj.asia/mynote/开发笔记/前端/mac调试ios的safari浏览器打开的页面.html" class="internal-link" target="_self" rel="noopener">Mac调试ios的safari浏览器打开的页面</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/通过脚本修改input值，手动触发input事件.md" data-href="开发笔记/前端/通过脚本修改input值，手动触发input事件.md" href="https://wxkj.asia/mynote/开发笔记/前端/通过脚本修改input值，手动触发input事件.html" class="internal-link" target="_self" rel="noopener">通过脚本修改input值，手动触发input事件</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/@font-face规则和Font Loading API.md" data-href="开发笔记/前端/@font-face规则和Font Loading API.md" href="https://wxkj.asia/mynote/开发笔记/前端/@font-face规则和font-loading-api.html" class="internal-link" target="_self" rel="noopener">@font-face规则和Font Loading API</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.md" data-href="开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.md" href="https://wxkj.asia/mynote/开发笔记/前端/js，css，font，png等静态资源如何当加载失败后使用备用地址.html" class="internal-link" target="_self" rel="noopener">js，css，font，png等静态资源如何当加载失败后使用备用地址</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/最全的 rgba 与 16 进制颜色空间互相转换方法.md" data-href="开发笔记/前端/最全的 rgba 与 16 进制颜色空间互相转换方法.md" href="https://wxkj.asia/mynote/开发笔记/前端/最全的-rgba-与-16-进制颜色空间互相转换方法.html" class="internal-link" target="_self" rel="noopener">最全的 rgba 与 16 进制颜色空间互相转换方法</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/防止window.onload被覆盖的技巧.md" data-href="开发笔记/前端/防止window.onload被覆盖的技巧.md" href="https://wxkj.asia/mynote/开发笔记/前端/防止window.onload被覆盖的技巧.html" class="internal-link" target="_self" rel="noopener">防止window.onload被覆盖的技巧</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.md" data-href="开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.md" href="https://wxkj.asia/mynote/开发笔记/前端/js显示和隐藏动画及鼠标穿透实现.html" class="internal-link" target="_self" rel="noopener">js显示和隐藏动画及鼠标穿透实现</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js判断一个元素是否已监听某个事件.md" data-href="开发笔记/前端/js判断一个元素是否已监听某个事件.md" href="https://wxkj.asia/mynote/开发笔记/前端/js判断一个元素是否已监听某个事件.html" class="internal-link" target="_self" rel="noopener">js判断一个元素是否已监听某个事件</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js给元素同时赋值多个样式属性.md" data-href="开发笔记/前端/js给元素同时赋值多个样式属性.md" href="https://wxkj.asia/mynote/开发笔记/前端/js给元素同时赋值多个样式属性.html" class="internal-link" target="_self" rel="noopener">js给元素同时赋值多个样式属性</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/用setTimeout代替eval执行js字符串.md" data-href="开发笔记/前端/用setTimeout代替eval执行js字符串.md" href="https://wxkj.asia/mynote/开发笔记/前端/用settimeout代替eval执行js字符串.html" class="internal-link" target="_self" rel="noopener">用setTimeout代替eval执行js字符串</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/transitionend事件判断是opacity是1还是0.md" data-href="开发笔记/前端/transitionend事件判断是opacity是1还是0.md" href="https://wxkj.asia/mynote/开发笔记/前端/transitionend事件判断是opacity是1还是0.html" class="internal-link" target="_self" rel="noopener">transitionend事件判断是opacity是1还是0</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 怎么获取滚动条自身的宽度.md" data-href="开发笔记/前端/js 怎么获取滚动条自身的宽度.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-怎么获取滚动条自身的宽度.html" class="internal-link" target="_self" rel="noopener">js 怎么获取滚动条自身的宽度</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/JS图片另存为.md" data-href="开发笔记/前端/JS图片另存为.md" href="https://wxkj.asia/mynote/开发笔记/前端/js图片另存为.html" class="internal-link" target="_self" rel="noopener">JS图片另存为</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/table表格设置border-radius不生效.md" data-href="开发笔记/前端/table表格设置border-radius不生效.md" href="https://wxkj.asia/mynote/开发笔记/前端/table表格设置border-radius不生效.html" class="internal-link" target="_self" rel="noopener">table表格设置border-radius不生效</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/CSS 垂直居中SVG标签.md" data-href="开发笔记/前端/CSS 垂直居中SVG标签.md" href="https://wxkj.asia/mynote/开发笔记/前端/css-垂直居中svg标签.html" class="internal-link" target="_self" rel="noopener">CSS 垂直居中SVG标签</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" data-href="开发笔记/前端/Chrome DevTools 远程调试安卓网页的原理.md" href="https://wxkj.asia/mynote/开发笔记/前端/chrome-devtools-远程调试安卓网页的原理.html" class="internal-link" target="_self" rel="noopener">Chrome DevTools 远程调试安卓网页的原理</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/css屏幕尺寸与设备.md" data-href="开发笔记/前端/css屏幕尺寸与设备.md" href="https://wxkj.asia/mynote/开发笔记/前端/css屏幕尺寸与设备.html" class="internal-link" target="_self" rel="noopener">css屏幕尺寸与设备</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/Javascript拷贝到剪切板.md" data-href="开发笔记/前端/Javascript拷贝到剪切板.md" href="https://wxkj.asia/mynote/开发笔记/前端/javascript拷贝到剪切板.html" class="internal-link" target="_self" rel="noopener">Javascript拷贝到剪切板</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js判断是否是手机.md" data-href="开发笔记/前端/js判断是否是手机.md" href="https://wxkj.asia/mynote/开发笔记/前端/js判断是否是手机.html" class="internal-link" target="_self" rel="noopener">js判断是否是手机</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 时间戳转字符串.md" data-href="开发笔记/前端/js 时间戳转字符串.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-时间戳转字符串.html" class="internal-link" target="_self" rel="noopener">js 时间戳转字符串</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/defer和async的区别（面试被问到了） - 掘金.md" data-href="开发笔记/前端/defer和async的区别（面试被问到了） - 掘金.md" href="https://wxkj.asia/mynote/开发笔记/前端/defer和async的区别（面试被问到了）-掘金.html" class="internal-link" target="_self" rel="noopener">defer和async的区别（面试被问到了） - 掘金</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js动态执行代码片段.md" data-href="开发笔记/前端/js动态执行代码片段.md" href="https://wxkj.asia/mynote/开发笔记/前端/js动态执行代码片段.html" class="internal-link" target="_self" rel="noopener">js动态执行代码片段</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/CodeMirror api.md" data-href="开发笔记/前端/CodeMirror api.md" href="https://wxkj.asia/mynote/开发笔记/前端/codemirror-api.html" class="internal-link" target="_self" rel="noopener">CodeMirror api</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/页面之间的通信.md" data-href="开发笔记/前端/页面之间的通信.md" href="https://wxkj.asia/mynote/开发笔记/前端/页面之间的通信.html" class="internal-link" target="_self" rel="noopener">页面之间的通信</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/打印浏览器及内核版本.md" data-href="开发笔记/前端/打印浏览器及内核版本.md" href="https://wxkj.asia/mynote/开发笔记/前端/打印浏览器及内核版本.html" class="internal-link" target="_self" rel="noopener">打印浏览器及内核版本</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/开发小技巧之调试移开消失的元素.md" data-href="开发笔记/前端/开发小技巧之调试移开消失的元素.md" href="https://wxkj.asia/mynote/开发笔记/前端/开发小技巧之调试移开消失的元素.html" class="internal-link" target="_self" rel="noopener">开发小技巧之调试移开消失的元素</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/平滑滚动到顶部或底部.md" data-href="开发笔记/前端/平滑滚动到顶部或底部.md" href="https://wxkj.asia/mynote/开发笔记/前端/平滑滚动到顶部或底部.html" class="internal-link" target="_self" rel="noopener">平滑滚动到顶部或底部</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/一个高级 CSS 面试题：在 CSS 中实现 if-else.md" data-href="开发笔记/前端/一个高级 CSS 面试题：在 CSS 中实现 if-else.md" href="https://wxkj.asia/mynote/开发笔记/前端/一个高级-css-面试题：在-css-中实现-if-else.html" class="internal-link" target="_self" rel="noopener">一个高级 CSS 面试题：在 CSS 中实现 if-else</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/HTML 标签简写及全称.md" data-href="开发笔记/前端/HTML 标签简写及全称.md" href="https://wxkj.asia/mynote/开发笔记/前端/html-标签简写及全称.html" class="internal-link" target="_self" rel="noopener">HTML 标签简写及全称</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/前端/js 通过fs.watch实现文件的双向同步.md" data-href="开发笔记/前端/js 通过fs.watch实现文件的双向同步.md" href="https://wxkj.asia/mynote/开发笔记/前端/js-通过fs.watch实现文件的双向同步.html" class="internal-link" target="_self" rel="noopener">js 通过fs.watch实现文件的双向同步</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.md" data-href="开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.md" href="https://wxkj.asia/mynote/开发笔记/php/前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密.html" class="internal-link" target="_self" rel="noopener">前端用crypto-js来进行加密，php使用openssl_encrypt来进行解密</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/web开发冷知识汇总.md" data-href="开发笔记/php/web开发冷知识汇总.md" href="https://wxkj.asia/mynote/开发笔记/php/web开发冷知识汇总.html" class="internal-link" target="_self" rel="noopener">web开发冷知识汇总</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/JWT用户登录方案-前后端交互说明.md" data-href="开发笔记/php/JWT用户登录方案-前后端交互说明.md" href="https://wxkj.asia/mynote/开发笔记/php/jwt用户登录方案-前后端交互说明.html" class="internal-link" target="_self" rel="noopener">JWT用户登录方案-前后端交互说明</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/php/IP Lookup in PHP.md" data-href="开发笔记/php/IP Lookup in PHP.md" href="https://wxkj.asia/mynote/开发笔记/php/ip-lookup-in-php.html" class="internal-link" target="_self" rel="noopener">IP Lookup in PHP</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/脚本插件/Powershell监控文件夹创建md文件并移动位置.md" data-href="开发笔记/脚本插件/Powershell监控文件夹创建md文件并移动位置.md" href="https://wxkj.asia/mynote/开发笔记/脚本插件/powershell监控文件夹创建md文件并移动位置.html" class="internal-link" target="_self" rel="noopener">Powershell监控文件夹创建md文件并移动位置</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/脚本插件/bat避免重复运行.md" data-href="开发笔记/脚本插件/bat避免重复运行.md" href="https://wxkj.asia/mynote/开发笔记/脚本插件/bat避免重复运行.html" class="internal-link" target="_self" rel="noopener">bat避免重复运行</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/数据库/mysql 数据库并发控制的内部实现机制和原理是什么.md" data-href="开发笔记/数据库/mysql 数据库并发控制的内部实现机制和原理是什么.md" href="https://wxkj.asia/mynote/开发笔记/数据库/mysql-数据库并发控制的内部实现机制和原理是什么.html" class="internal-link" target="_self" rel="noopener">mysql 数据库并发控制的内部实现机制和原理是什么</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/算法/多端文件同步原理和算法概述.md" data-href="开发笔记/算法/多端文件同步原理和算法概述.md" href="https://wxkj.asia/mynote/开发笔记/算法/多端文件同步原理和算法概述.html" class="internal-link" target="_self" rel="noopener">多端文件同步原理和算法概述</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/检测git中是否有文件发生了冲突.md" data-href="开发笔记/git/检测git中是否有文件发生了冲突.md" href="https://wxkj.asia/mynote/开发笔记/git/检测git中是否有文件发生了冲突.html" class="internal-link" target="_self" rel="noopener">检测git中是否有文件发生了冲突</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/检测git变化并提交.md" data-href="开发笔记/git/检测git变化并提交.md" href="https://wxkj.asia/mynote/开发笔记/git/检测git变化并提交.html" class="internal-link" target="_self" rel="noopener">检测git变化并提交</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/fork的项目如何更新.md" data-href="开发笔记/git/fork的项目如何更新.md" href="https://wxkj.asia/mynote/开发笔记/git/fork的项目如何更新.html" class="internal-link" target="_self" rel="noopener">fork的项目如何更新</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/git 导出变动文件，包括目录结构.md" data-href="开发笔记/git/git 导出变动文件，包括目录结构.md" href="https://wxkj.asia/mynote/开发笔记/git/git-导出变动文件，包括目录结构.html" class="internal-link" target="_self" rel="noopener">git 导出变动文件，包括目录结构</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" data-href="开发笔记/git/Git 创建一个裸仓库，作为简易的 Git 服务器.md" href="https://wxkj.asia/mynote/开发笔记/git/git-创建一个裸仓库，作为简易的-git-服务器.html" class="internal-link" target="_self" rel="noopener">Git 创建一个裸仓库，作为简易的 Git 服务器</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/解决git status不能显示中文.md" data-href="开发笔记/git/解决git status不能显示中文.md" href="https://wxkj.asia/mynote/开发笔记/git/解决git-status不能显示中文.html" class="internal-link" target="_self" rel="noopener">解决git status不能显示中文</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/git/快速解决 Resource not accessible by integration.md" data-href="开发笔记/git/快速解决 Resource not accessible by integration.md" href="https://wxkj.asia/mynote/开发笔记/git/快速解决-resource-not-accessible-by-integration.html" class="internal-link" target="_self" rel="noopener">快速解决 Resource not accessible by integration</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/内网穿透.md" data-href="开发笔记/linux/内网穿透.md" href="https://wxkj.asia/mynote/开发笔记/linux/内网穿透.html" class="internal-link" target="_self" rel="noopener">内网穿透</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/使用Shell脚本实现FTP自动上传和下载文件.md" data-href="开发笔记/linux/使用Shell脚本实现FTP自动上传和下载文件.md" href="https://wxkj.asia/mynote/开发笔记/linux/使用shell脚本实现ftp自动上传和下载文件.html" class="internal-link" target="_self" rel="noopener">使用Shell脚本实现FTP自动上传和下载文件</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.md" data-href="开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell获取文件夹下所有目录路径，包括子目录.html" class="internal-link" target="_self" rel="noopener">shell获取文件夹下所有目录路径，包括子目录</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md" data-href="开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.md" href="https://wxkj.asia/mynote/开发笔记/linux/为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？.html" class="internal-link" target="_self" rel="noopener">为什么在终端可以直接输入gsed，而在crontab脚本里必须输入全路径？</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Shell之判断程序是否运行.md" data-href="开发笔记/linux/Shell之判断程序是否运行.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell之判断程序是否运行.html" class="internal-link" target="_self" rel="noopener">Shell之判断程序是否运行</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell if语句中的并列 - 诗意的栖居 - ITeye博客.md" data-href="开发笔记/linux/shell if语句中的并列 - 诗意的栖居 - ITeye博客.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell-if语句中的并列-诗意的栖居-iteye博客.html" class="internal-link" target="_self" rel="noopener">shell if语句中的并列 - 诗意的栖居 - ITeye博客</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/shell 下 urlencode和urldecode 编码解码的方法.md" data-href="开发笔记/linux/shell 下 urlencode和urldecode 编码解码的方法.md" href="https://wxkj.asia/mynote/开发笔记/linux/shell-下-urlencode和urldecode-编码解码的方法.html" class="internal-link" target="_self" rel="noopener">shell 下 urlencode和urldecode 编码解码的方法</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/rsync 用法教程.md" data-href="开发笔记/linux/rsync 用法教程.md" href="https://wxkj.asia/mynote/开发笔记/linux/rsync-用法教程.html" class="internal-link" target="_self" rel="noopener">rsync 用法教程</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/rsync + inotify 实现文件实时双向自动同步.md" data-href="开发笔记/linux/rsync + inotify 实现文件实时双向自动同步.md" href="https://wxkj.asia/mynote/开发笔记/linux/rsync-+-inotify-实现文件实时双向自动同步.html" class="internal-link" target="_self" rel="noopener">rsync + inotify 实现文件实时双向自动同步</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux中如何锁定文件？flock命令一定要了解！.md" data-href="开发笔记/linux/Linux中如何锁定文件？flock命令一定要了解！.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux中如何锁定文件？flock命令一定要了解！.html" class="internal-link" target="_self" rel="noopener">Linux中如何锁定文件？flock命令一定要了解！</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux find 模拟 tree 命令.md" data-href="开发笔记/linux/Linux find 模拟 tree 命令.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux-find-模拟-tree-命令.html" class="internal-link" target="_self" rel="noopener">Linux find 模拟 tree 命令</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/linux/Linux 文件搜索神器 find 实战详解.md" data-href="开发笔记/linux/Linux 文件搜索神器 find 实战详解.md" href="https://wxkj.asia/mynote/开发笔记/linux/linux-文件搜索神器-find-实战详解.html" class="internal-link" target="_self" rel="noopener">Linux 文件搜索神器 find 实战详解</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/【mac】shell小技巧将`终.md" data-href="开发笔记/mac/【mac】shell小技巧将`终.md" href="https://wxkj.asia/mynote/开发笔记/mac/【mac】shell小技巧将`终.html" class="internal-link" target="_self" rel="noopener">【mac】shell小技巧将`终</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/Mac开机启动配置详解.md" data-href="开发笔记/mac/Mac开机启动配置详解.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac开机启动配置详解.html" class="internal-link" target="_self" rel="noopener">Mac开机启动配置详解</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/mac下shell弹出下拉选择框.md" data-href="开发笔记/mac/mac下shell弹出下拉选择框.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac下shell弹出下拉选择框.html" class="internal-link" target="_self" rel="noopener">mac下shell弹出下拉选择框</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/mac上shell扫描目录并放到弹框列表中.md" data-href="开发笔记/mac/mac上shell扫描目录并放到弹框列表中.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac上shell扫描目录并放到弹框列表中.html" class="internal-link" target="_self" rel="noopener">mac上shell扫描目录并放到弹框列表中</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/Mac 下 brew 切换为国内源.md" data-href="开发笔记/mac/Mac 下 brew 切换为国内源.md" href="https://wxkj.asia/mynote/开发笔记/mac/mac-下-brew-切换为国内源.html" class="internal-link" target="_self" rel="noopener">Mac 下 brew 切换为国内源</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/fswatch的使用.md" data-href="开发笔记/mac/fswatch的使用.md" href="https://wxkj.asia/mynote/开发笔记/mac/fswatch的使用.html" class="internal-link" target="_self" rel="noopener">fswatch的使用</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/mac/AppleScript 隐藏执行shell脚本文件.md" data-href="开发笔记/mac/AppleScript 隐藏执行shell脚本文件.md" href="https://wxkj.asia/mynote/开发笔记/mac/applescript-隐藏执行shell脚本文件.html" class="internal-link" target="_self" rel="noopener">AppleScript 隐藏执行shell脚本文件</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/python/python3实现将本地文件夹全部内容上传到FTP.md" data-href="开发笔记/python/python3实现将本地文件夹全部内容上传到FTP.md" href="https://wxkj.asia/mynote/开发笔记/python/python3实现将本地文件夹全部内容上传到ftp.html" class="internal-link" target="_self" rel="noopener">python3实现将本地文件夹全部内容上传到FTP</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/python/ftp获取远程文件时间.md" data-href="开发笔记/python/ftp获取远程文件时间.md" href="https://wxkj.asia/mynote/开发笔记/python/ftp获取远程文件时间.html" class="internal-link" target="_self" rel="noopener">ftp获取远程文件时间</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/python/ftp获取文件的md5.md" data-href="开发笔记/python/ftp获取文件的md5.md" href="https://wxkj.asia/mynote/开发笔记/python/ftp获取文件的md5.html" class="internal-link" target="_self" rel="noopener">ftp获取文件的md5</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/SEO优化/seo优化工具.md" data-href="开发笔记/SEO优化/seo优化工具.md" href="https://wxkj.asia/mynote/开发笔记/seo优化/seo优化工具.html" class="internal-link" target="_self" rel="noopener">seo优化工具</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="开发笔记/UI设计/色轮_色环_色彩搭配 - Canva 可画.md" data-href="开发笔记/UI设计/色轮_色环_色彩搭配 - Canva 可画.md" href="https://wxkj.asia/mynote/开发笔记/ui设计/色轮_色环_色彩搭配-canva-可画.html" class="internal-link" target="_self" rel="noopener">色轮_色环_色彩搭配 - Canva 可画</a>
<br><a data-tooltip-position="top" aria-label="开发笔记/UI设计/优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心.md" data-href="开发笔记/UI设计/优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心.md" href="https://wxkj.asia/mynote/开发笔记/ui设计/优化浏览器设置以提升性能和使用体验-mastergo-帮助中心.html" class="internal-link" target="_self" rel="noopener">优化浏览器设置以提升性能和使用体验 - MasterGo 帮助中心</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="学习笔记/1万访问需要多少宽带.md" data-href="学习笔记/1万访问需要多少宽带.md" href="https://wxkj.asia/mynote/学习笔记/1万访问需要多少宽带.html" class="internal-link" target="_self" rel="noopener">1万访问需要多少宽带</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/好书推荐.md" data-href="学习笔记/好书推荐.md" href="https://wxkj.asia/mynote/学习笔记/好书推荐.html" class="internal-link" target="_self" rel="noopener">好书推荐</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/typescript之绑定和解绑事件.md" data-href="学习笔记/typescript之绑定和解绑事件.md" href="https://wxkj.asia/mynote/学习笔记/typescript之绑定和解绑事件.html" class="internal-link" target="_self" rel="noopener">typescript之绑定和解绑事件</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/css重复选择符增加权重吗？.md" data-href="学习笔记/css重复选择符增加权重吗？.md" href="https://wxkj.asia/mynote/学习笔记/css重复选择符增加权重吗？.html" class="internal-link" target="_self" rel="noopener">css重复选择符增加权重吗？</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/抽象类和接口使用场景.md" data-href="学习笔记/抽象类和接口使用场景.md" href="https://wxkj.asia/mynote/学习笔记/抽象类和接口使用场景.html" class="internal-link" target="_self" rel="noopener">抽象类和接口使用场景</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/JavaScript this.md" data-href="学习笔记/JavaScript this.md" href="https://wxkj.asia/mynote/学习笔记/javascript-this.html" class="internal-link" target="_self" rel="noopener">JavaScript this</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/学习资料.md" data-href="学习笔记/学习资料.md" href="https://wxkj.asia/mynote/学习笔记/学习资料.html" class="internal-link" target="_self" rel="noopener">学习资料</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="学习笔记/参考资料/TinyWebServer——从0到服务器开发！.md" data-href="学习笔记/参考资料/TinyWebServer——从0到服务器开发！.md" href="https://wxkj.asia/mynote/学习笔记/参考资料/tinywebserver——从0到服务器开发！.html" class="internal-link" target="_self" rel="noopener">TinyWebServer——从0到服务器开发！</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="学习笔记/设计模式/laravel的设计模式.md" data-href="学习笔记/设计模式/laravel的设计模式.md" href="https://wxkj.asia/mynote/学习笔记/设计模式/laravel的设计模式.html" class="internal-link" target="_self" rel="noopener">laravel的设计模式</a>
<br><a data-tooltip-position="top" aria-label="学习笔记/设计模式/常用设计模式.md" data-href="学习笔记/设计模式/常用设计模式.md" href="https://wxkj.asia/mynote/学习笔记/设计模式/常用设计模式.html" class="internal-link" target="_self" rel="noopener">常用设计模式</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="工具软件/[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？.md" data-href="工具软件/[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？.md" href="https://wxkj.asia/mynote/工具软件/[经验教程]-国内如何下载更新-google-谷歌浏览器及更新谷歌-chrome-浏览器无法访问此网站怎么办？.html" class="internal-link" target="_self" rel="noopener">[经验教程] 国内如何下载更新 google 谷歌浏览器及更新谷歌 chrome 浏览器无法访问此网站怎么办？</a>
<br><a data-tooltip-position="top" aria-label="工具软件/我开发了一个可以置顶笔记的app.md" data-href="工具软件/我开发了一个可以置顶笔记的app.md" href="https://wxkj.asia/mynote/工具软件/我开发了一个可以置顶笔记的app.html" class="internal-link" target="_self" rel="noopener">我开发了一个可以置顶笔记的app</a>
<br><a data-tooltip-position="top" aria-label="工具软件/在 Mac 上安排关机定时器的.md" data-href="工具软件/在 Mac 上安排关机定时器的.md" href="https://wxkj.asia/mynote/工具软件/在-mac-上安排关机定时器的.html" class="internal-link" target="_self" rel="noopener">在 Mac 上安排关机定时器的</a>
<br><a data-tooltip-position="top" aria-label="工具软件/typora.md" data-href="工具软件/typora.md" href="https://wxkj.asia/mynote/工具软件/typora.html" class="internal-link" target="_self" rel="noopener">typora</a>
<br><a data-tooltip-position="top" aria-label="工具软件/关于图床的一些使用心得总结.md" data-href="工具软件/关于图床的一些使用心得总结.md" href="https://wxkj.asia/mynote/工具软件/关于图床的一些使用心得总结.html" class="internal-link" target="_self" rel="noopener">关于图床的一些使用心得总结</a>
<br><a data-tooltip-position="top" aria-label="工具软件/Unison帮助文档翻译.md" data-href="工具软件/Unison帮助文档翻译.md" href="https://wxkj.asia/mynote/工具软件/unison帮助文档翻译.html" class="internal-link" target="_self" rel="noopener">Unison帮助文档翻译</a>
<br><a data-tooltip-position="top" aria-label="工具软件/Unison双向同步文件的使用.md" data-href="工具软件/Unison双向同步文件的使用.md" href="https://wxkj.asia/mynote/工具软件/unison双向同步文件的使用.html" class="internal-link" target="_self" rel="noopener">Unison双向同步文件的使用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/windows.md" data-href="工具软件/windows.md" href="https://wxkj.asia/mynote/工具软件/windows.html" class="internal-link" target="_self" rel="noopener">windows</a>
<br><a data-tooltip-position="top" aria-label="工具软件/JavaScript.md" data-href="工具软件/JavaScript.md" href="https://wxkj.asia/mynote/工具软件/javascript.html" class="internal-link" target="_self" rel="noopener">JavaScript</a>
<br><a data-tooltip-position="top" aria-label="工具软件/fswatch和rsync的使用.md" data-href="工具软件/fswatch和rsync的使用.md" href="https://wxkj.asia/mynote/工具软件/fswatch和rsync的使用.html" class="internal-link" target="_self" rel="noopener">fswatch和rsync的使用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/lftp使用.md" data-href="工具软件/lftp使用.md" href="https://wxkj.asia/mynote/工具软件/lftp使用.html" class="internal-link" target="_self" rel="noopener">lftp使用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/mac 安装Beyond Compare，并永久使用_comparebeyond mac.md" data-href="工具软件/mac 安装Beyond Compare，并永久使用_comparebeyond mac.md" href="https://wxkj.asia/mynote/工具软件/mac-安装beyond-compare，并永久使用_comparebeyond-mac.html" class="internal-link" target="_self" rel="noopener">mac 安装Beyond Compare，并永久使用_comparebeyond mac</a>
<br><a data-tooltip-position="top" aria-label="工具软件/logseq.md" data-href="工具软件/logseq.md" href="https://wxkj.asia/mynote/工具软件/logseq.html" class="internal-link" target="_self" rel="noopener">logseq</a>
<br><a data-tooltip-position="top" aria-label="工具软件/linux.md" data-href="工具软件/linux.md" href="https://wxkj.asia/mynote/工具软件/linux.html" class="internal-link" target="_self" rel="noopener">linux</a>
<br><a data-tooltip-position="top" aria-label="工具软件/github加速方案.md" data-href="工具软件/github加速方案.md" href="https://wxkj.asia/mynote/工具软件/github加速方案.html" class="internal-link" target="_self" rel="noopener">github加速方案</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/dataview排序.md" data-href="工具软件/obsidian/dataview排序.md" href="https://wxkj.asia/mynote/工具软件/obsidian/dataview排序.html" class="internal-link" target="_self" rel="noopener">dataview排序</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/DataView 入门教程.md" data-href="工具软件/obsidian/DataView 入门教程.md" href="https://wxkj.asia/mynote/工具软件/obsidian/dataview-入门教程.html" class="internal-link" target="_self" rel="noopener">DataView 入门教程</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/用 MaoXian 网摘保存网络文章到 Obsidian.md" data-href="工具软件/obsidian/用 MaoXian 网摘保存网络文章到 Obsidian.md" href="https://wxkj.asia/mynote/工具软件/obsidian/用-maoxian-网摘保存网络文章到-obsidian.html" class="internal-link" target="_self" rel="noopener">用 MaoXian 网摘保存网络文章到 Obsidian</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/我把文心一言嵌入到 obsidian 里了.md" data-href="工具软件/obsidian/我把文心一言嵌入到 obsidian 里了.md" href="https://wxkj.asia/mynote/工具软件/obsidian/我把文心一言嵌入到-obsidian-里了.html" class="internal-link" target="_self" rel="noopener">我把文心一言嵌入到 obsidian 里了</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin).md" data-href="工具软件/obsidian/我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin).md" href="https://wxkj.asia/mynote/工具软件/obsidian/我开发了一个快速输入markdown代码和禅模式的插件(ii-plugin).html" class="internal-link" target="_self" rel="noopener">我开发了一个快速输入Markdown代码和禅模式的插件(ii-plugin)</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/实用插件汇总说明.md" data-href="工具软件/obsidian/实用插件汇总说明.md" href="https://wxkj.asia/mynote/工具软件/obsidian/实用插件汇总说明.html" class="internal-link" target="_self" rel="noopener">实用插件汇总说明</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/checkCallback判断逻辑优化.md" data-href="工具软件/obsidian/checkCallback判断逻辑优化.md" href="https://wxkj.asia/mynote/工具软件/obsidian/checkcallback判断逻辑优化.html" class="internal-link" target="_self" rel="noopener">checkCallback判断逻辑优化</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidian 插件：Dataview.md" data-href="工具软件/obsidian/Obsidian 插件：Dataview.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian-插件：dataview.html" class="internal-link" target="_self" rel="noopener">Obsidian 插件：Dataview</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidian 社区插件.md" data-href="工具软件/obsidian/Obsidian 社区插件.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian-社区插件.html" class="internal-link" target="_self" rel="noopener">Obsidian 社区插件</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Mermaid 语法 - 流程图.md" data-href="工具软件/obsidian/Mermaid 语法 - 流程图.md" href="https://wxkj.asia/mynote/工具软件/obsidian/mermaid-语法-流程图.html" class="internal-link" target="_self" rel="noopener">Mermaid 语法 - 流程图</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Solarized深色主题+代码片段模仿Logseq主题风格.md" data-href="工具软件/obsidian/Solarized深色主题+代码片段模仿Logseq主题风格.md" href="https://wxkj.asia/mynote/工具软件/obsidian/solarized深色主题+代码片段模仿logseq主题风格.html" class="internal-link" target="_self" rel="noopener">Solarized深色主题+代码片段模仿Logseq主题风格</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Unison实现文件双向同步的利器.md" data-href="工具软件/obsidian/Unison实现文件双向同步的利器.md" href="https://wxkj.asia/mynote/工具软件/obsidian/unison实现文件双向同步的利器.html" class="internal-link" target="_self" rel="noopener">Unison实现文件双向同步的利器</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床.md" data-href="工具软件/obsidian/gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床.md" href="https://wxkj.asia/mynote/工具软件/obsidian/gitee+github+jsdelivr+picgo+image-upload-tool打造个人免费图床.html" class="internal-link" target="_self" rel="noopener">gitee+github+jsdelivr+picgo+image upload tool打造个人免费图床</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidian最适合程序员的笔记软件.md" data-href="工具软件/obsidian/Obsidian最适合程序员的笔记软件.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian最适合程序员的笔记软件.html" class="internal-link" target="_self" rel="noopener">Obsidian最适合程序员的笔记软件</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/RemotelySave+InfiniCloud最简单的多端同步方案实践.md" data-href="工具软件/obsidian/RemotelySave+InfiniCloud最简单的多端同步方案实践.md" href="https://wxkj.asia/mynote/工具软件/obsidian/remotelysave+infinicloud最简单的多端同步方案实践.html" class="internal-link" target="_self" rel="noopener">RemotelySave+InfiniCloud最简单的多端同步方案实践</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/如何用 github 搭建图床（亲测有效）.md" data-href="工具软件/obsidian/如何用 github 搭建图床（亲测有效）.md" href="https://wxkj.asia/mynote/工具软件/obsidian/如何用-github-搭建图床（亲测有效）.html" class="internal-link" target="_self" rel="noopener">如何用 github 搭建图床（亲测有效）</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/WebDAV在各端的软件有哪些.md" data-href="工具软件/obsidian/WebDAV在各端的软件有哪些.md" href="https://wxkj.asia/mynote/工具软件/obsidian/webdav在各端的软件有哪些.html" class="internal-link" target="_self" rel="noopener">WebDAV在各端的软件有哪些</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Mac下fswatch+shell实现简悦导出markdown到obsidian.md" data-href="工具软件/obsidian/Mac下fswatch+shell实现简悦导出markdown到obsidian.md" href="https://wxkj.asia/mynote/工具软件/obsidian/mac下fswatch+shell实现简悦导出markdown到obsidian.html" class="internal-link" target="_self" rel="noopener">Mac下fswatch+shell实现简悦导出markdown到obsidian</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/obsidian分享文章到Quail博客.md" data-href="工具软件/obsidian/obsidian分享文章到Quail博客.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidian分享文章到quail博客.html" class="internal-link" target="_self" rel="noopener">obsidian分享文章到Quail博客</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/uTools和obsidian联动，高效记录您的灵感闪现.md" data-href="工具软件/obsidian/uTools和obsidian联动，高效记录您的灵感闪现.md" href="https://wxkj.asia/mynote/工具软件/obsidian/utools和obsidian联动，高效记录您的灵感闪现.html" class="internal-link" target="_self" rel="noopener">uTools和obsidian联动，高效记录您的灵感闪现</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/Obsidain插件之QuickAdd-强大的快速记录与宏工具.md" data-href="工具软件/obsidian/Obsidain插件之QuickAdd-强大的快速记录与宏工具.md" href="https://wxkj.asia/mynote/工具软件/obsidian/obsidain插件之quickadd-强大的快速记录与宏工具.html" class="internal-link" target="_self" rel="noopener">Obsidain插件之QuickAdd-强大的快速记录与宏工具</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown示例教程.md" data-href="工具软件/obsidian/markdown示例教程.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown示例教程.html" class="internal-link" target="_self" rel="noopener">markdown示例教程</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/学习网站.md" data-href="工具软件/obsidian/学习网站.md" href="https://wxkj.asia/mynote/工具软件/obsidian/学习网站.html" class="internal-link" target="_self" rel="noopener">学习网站</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/templater.md" data-href="工具软件/obsidian/插件/templater.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/templater.html" class="internal-link" target="_self" rel="noopener">templater</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/quickadd.md" data-href="工具软件/obsidian/插件/quickadd.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/quickadd.html" class="internal-link" target="_self" rel="noopener">quickadd</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/dataview.md" data-href="工具软件/obsidian/插件/dataview.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/dataview.html" class="internal-link" target="_self" rel="noopener">dataview</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/关闭重复标签.md" data-href="工具软件/obsidian/插件/关闭重复标签.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/关闭重复标签.html" class="internal-link" target="_self" rel="noopener">关闭重复标签</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/插件开发笔记.md" data-href="工具软件/obsidian/插件/插件开发笔记.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/插件开发笔记.html" class="internal-link" target="_self" rel="noopener">插件开发笔记</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/插件/HK Code Block插件的使用.md" data-href="工具软件/obsidian/插件/HK Code Block插件的使用.md" href="https://wxkj.asia/mynote/工具软件/obsidian/插件/hk-code-block插件的使用.html" class="internal-link" target="_self" rel="noopener">HK Code Block插件的使用</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/搜索.md" data-href="工具软件/obsidian/markdown语法官方教程/搜索.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/搜索.html" class="internal-link" target="_self" rel="noopener">搜索</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/使用 obsidian URI.md" data-href="工具软件/obsidian/markdown语法官方教程/使用 obsidian URI.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/使用-obsidian-uri.html" class="internal-link" target="_self" rel="noopener">使用 obsidian URI</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/为笔记添加别名.md" data-href="工具软件/obsidian/markdown语法官方教程/为笔记添加别名.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/为笔记添加别名.html" class="internal-link" target="_self" rel="noopener">为笔记添加别名</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/嵌入文件.md" data-href="工具软件/obsidian/markdown语法官方教程/嵌入文件.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/嵌入文件.html" class="internal-link" target="_self" rel="noopener">嵌入文件</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/内部链接.md" data-href="工具软件/obsidian/markdown语法官方教程/内部链接.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/内部链接.html" class="internal-link" target="_self" rel="noopener">内部链接</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/块链接与块引用.md" data-href="工具软件/obsidian/markdown语法官方教程/块链接与块引用.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/块链接与块引用.html" class="internal-link" target="_self" rel="noopener">块链接与块引用</a>
<br><a data-tooltip-position="top" aria-label="工具软件/obsidian/markdown语法官方教程/格式化笔记-Markdown基础.md" data-href="工具软件/obsidian/markdown语法官方教程/格式化笔记-Markdown基础.md" href="https://wxkj.asia/mynote/工具软件/obsidian/markdown语法官方教程/格式化笔记-markdown基础.html" class="internal-link" target="_self" rel="noopener">格式化笔记-Markdown基础</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="随笔/人工智能的体验.md" data-href="随笔/人工智能的体验.md" href="https://wxkj.asia/mynote/随笔/人工智能的体验.html" class="internal-link" target="_self" rel="noopener">人工智能的体验</a>
<br><a data-tooltip-position="top" aria-label="随笔/通义千问对话2.md" data-href="随笔/通义千问对话2.md" href="https://wxkj.asia/mynote/随笔/通义千问对话2.html" class="internal-link" target="_self" rel="noopener">通义千问对话2</a>
<br><a data-tooltip-position="top" aria-label="随笔/我记笔记的本质，为什么记笔记.md" data-href="随笔/我记笔记的本质，为什么记笔记.md" href="https://wxkj.asia/mynote/随笔/我记笔记的本质，为什么记笔记.html" class="internal-link" target="_self" rel="noopener">我记笔记的本质，为什么记笔记</a>
<br><a data-tooltip-position="top" aria-label="随笔/与人工智能的有趣问答.md" data-href="随笔/与人工智能的有趣问答.md" href="https://wxkj.asia/mynote/随笔/与人工智能的有趣问答.html" class="internal-link" target="_self" rel="noopener">与人工智能的有趣问答</a>
<br><br>
<br><a data-tooltip-position="top" aria-label="常用命令/工具.md" data-href="常用命令/工具.md" href="https://wxkj.asia/mynote/常用命令/工具.html" class="internal-link" target="_self" rel="noopener">工具</a>
<br><a data-tooltip-position="top" aria-label="常用命令/秘钥破解.md" data-href="常用命令/秘钥破解.md" href="https://wxkj.asia/mynote/常用命令/秘钥破解.html" class="internal-link" target="_self" rel="noopener">秘钥破解</a>
<br><a data-tooltip-position="top" aria-label="常用命令/nginx.md" data-href="常用命令/nginx.md" href="https://wxkj.asia/mynote/常用命令/nginx.html" class="internal-link" target="_self" rel="noopener">nginx</a>
<br><a data-tooltip-position="top" aria-label="常用命令/grep.md" data-href="常用命令/grep.md" href="https://wxkj.asia/mynote/常用命令/grep.html" class="internal-link" target="_self" rel="noopener">grep</a>
<br><a data-tooltip-position="top" aria-label="常用命令/cmd-bat.md" data-href="常用命令/cmd-bat.md" href="https://wxkj.asia/mynote/常用命令/cmd-bat.html" class="internal-link" target="_self" rel="noopener">cmd-bat</a>
<br><a data-tooltip-position="top" aria-label="常用命令/压力测试ab.md" data-href="常用命令/压力测试ab.md" href="https://wxkj.asia/mynote/常用命令/压力测试ab.html" class="internal-link" target="_self" rel="noopener">压力测试ab</a>
<br><a data-tooltip-position="top" aria-label="常用命令/科学上网-vpn-翻墙.md" data-href="常用命令/科学上网-vpn-翻墙.md" href="https://wxkj.asia/mynote/常用命令/科学上网-vpn-翻墙.html" class="internal-link" target="_self" rel="noopener">科学上网-vpn-翻墙</a>
<br><a data-tooltip-position="top" aria-label="常用命令/visual studio.md" data-href="常用命令/visual studio.md" href="https://wxkj.asia/mynote/常用命令/visual-studio.html" class="internal-link" target="_self" rel="noopener">visual studio</a>
<br><a data-tooltip-position="top" aria-label="常用命令/rabbitmq.md" data-href="常用命令/rabbitmq.md" href="https://wxkj.asia/mynote/常用命令/rabbitmq.html" class="internal-link" target="_self" rel="noopener">rabbitmq</a>
<br><a data-tooltip-position="top" aria-label="常用命令/lnmp.md" data-href="常用命令/lnmp.md" href="https://wxkj.asia/mynote/常用命令/lnmp.html" class="internal-link" target="_self" rel="noopener">lnmp</a>
<br><a data-tooltip-position="top" aria-label="常用命令/fiddler.md" data-href="常用命令/fiddler.md" href="https://wxkj.asia/mynote/常用命令/fiddler.html" class="internal-link" target="_self" rel="noopener">fiddler</a>
<br><a data-tooltip-position="top" aria-label="常用命令/ubuntu.md" data-href="常用命令/ubuntu.md" href="https://wxkj.asia/mynote/常用命令/ubuntu.html" class="internal-link" target="_self" rel="noopener">ubuntu</a>
<br><a data-tooltip-position="top" aria-label="常用命令/常用命令.md" data-href="常用命令/常用命令.md" href="https://wxkj.asia/mynote/常用命令/常用命令.html" class="internal-link" target="_self" rel="noopener">常用命令</a>
<br><a data-tooltip-position="top" aria-label="常用命令/linux.md" data-href="常用命令/linux.md" href="https://wxkj.asia/mynote/常用命令/linux.html" class="internal-link" target="_self" rel="noopener">linux</a>
<br><a data-tooltip-position="top" aria-label="常用命令/git.md" data-href="常用命令/git.md" href="https://wxkj.asia/mynote/常用命令/git.html" class="internal-link" target="_self" rel="noopener">git</a>
<br><a data-tooltip-position="top" aria-label="常用命令/obsidian.md" data-href="常用命令/obsidian.md" href="https://wxkj.asia/mynote/常用命令/obsidian.html" class="internal-link" target="_self" rel="noopener">obsidian</a>
<br><a data-tooltip-position="top" aria-label="常用命令/figma-pixso-mastergo.md" data-href="常用命令/figma-pixso-mastergo.md" href="https://wxkj.asia/mynote/常用命令/figma-pixso-mastergo.html" class="internal-link" target="_self" rel="noopener">figma-pixso-mastergo</a>
<br><a data-tooltip-position="top" aria-label="常用命令/laravel.md" data-href="常用命令/laravel.md" href="https://wxkj.asia/mynote/常用命令/laravel.html" class="internal-link" target="_self" rel="noopener">laravel</a>
<br><a data-tooltip-position="top" aria-label="常用命令/vim.md" data-href="常用命令/vim.md" href="https://wxkj.asia/mynote/常用命令/vim.html" class="internal-link" target="_self" rel="noopener">vim</a>
<br><a data-tooltip-position="top" aria-label="常用命令/phpstorm.md" data-href="常用命令/phpstorm.md" href="https://wxkj.asia/mynote/常用命令/phpstorm.html" class="internal-link" target="_self" rel="noopener">phpstorm</a>
<br><a data-tooltip-position="top" aria-label="常用命令/vscode.md" data-href="常用命令/vscode.md" href="https://wxkj.asia/mynote/常用命令/vscode.html" class="internal-link" target="_self" rel="noopener">vscode</a>
]]></description><link>https://wxkj.asia/mynote/分类.html</link><guid isPermaLink="false">分类.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 18 May 2024 02:53:25 GMT</pubDate></item><item><title><![CDATA[内网穿透]]></title><description><![CDATA[ 
 <br>在 Mac、Windows、iPhone、Android 平台上，有许多应用支持 WebDAV 协议并可实现文件实时同步，以下是一些例子：<br><br>
<br>Finder: macOS 内置支持 WebDAV，可以直接将 WebDAV 服务器挂载为网络卷。
<br>Transmit: 这是一款高级 FTP/SFTP 客户端，也支持 WebDAV，可以实现文件的实时上传与同步。
<br>Cyberduck: 免费开源的 FTP 和 WebDAV 客户端，支持文件浏览和同步。
<br><br>
<br>File Explorer: Windows 系统自带的文件浏览器可以通过添加网络位置的方式连接 WebDAV 服务器。
<br>BitKinex: 功能全面的多协议文件传输客户端，支持 WebDAV 同步。
<br>NetDrive: 可以将 WebDAV 服务器映射为本地磁盘驱动器，并实现自动同步。
<br>WebDrive: 类似 NetDrive，也能将 WebDAV 资源映射为本地硬盘，并支持实时同步。
<br><br>
<br>Documents by Readdle: 支持多种云存储服务，包括 WebDAV，可以进行文件管理和同步。
<br>iCloud Drive（间接方式）: iOS 设备可以通过 iCloud Drive 连接至支持 WebDAV 的服务，但不是直接支持 WebDAV。
<br>GoodReader: 一款流行的 PDF 阅读器，也支持 WebDAV 连接，可用于文件同步。
<br><br>
<br>Solid Explorer: 这是一个文件管理器，内建 WebDAV 客户端，支持同步功能。
<br>SyncMate: 一个跨平台的同步工具，可在 Android 设备上实现与 WebDAV 服务器的同步。
<br>FolderSync: 提供多种云服务的同步选项，其中包括 WebDAV，可以设定自动同步或手动同步。
<br>以上列举的是一部分常见且受欢迎的 WebDAV 客户端应用，它们通常都支持文件的实时更新与同步。不过，请注意，应用的具体功能和同步策略可能会随着版本更新而发生变化，因此建议在选择应用时查阅最新版本的官方说明。]]></description><link>https://wxkj.asia/mynote/开发笔记/linux/内网穿透.html</link><guid isPermaLink="false">开发笔记/linux/内网穿透.md</guid><dc:creator><![CDATA[Wilson]]></dc:creator><pubDate>Sat, 11 May 2024 00:23:55 GMT</pubDate></item></channel></rss>